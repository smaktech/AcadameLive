{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\topics\\\\TopicAddEdit.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditTopic(props) {\n  _s();\n\n  // const topicID = props.match.params.topicId;\n  // const topicStatus = props.match.params.topicStatus;\n  const {\n    topicID,\n    topicStatus,\n    courseID\n  } = useParams(); // console.log(props)\n  // const subjectStatus = props.match.params.subjectStatus;\n\n  const [mode, setMode] = useState(topicID ? \"edit\" : \"add\"); //setting subjects data into a variable\n\n  const [topic, setTopic] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add subject Button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject Button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject Button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the topic user want to add\n\n  const [topicName, setTopicName] = useState(); //sets topic description user want to add\n\n  const [topicDescription, setTopicDescription] = useState(); //sets mock test link user want to add\n\n  const [mockTestLink, setMockTestLink] = useState(); //sets exma test link user want to add\n\n  const [examTestLink, setExamTestLink] = useState(); //sets link type user want to add\n\n  const [linkType, setLinkType] = useState(); //sets vide link user want to add\n\n  const [linkString, setLinkString] = useState(); //sets topic video user want to add\n\n  const [topicVideo, setTopicVideo] = useState(); //sets topic video user want to add\n\n  const [videoPreview, setVideoPreview] = useState(null); //referance variable for video file choose\n\n  let chooseTopicVideoRef = useRef(); // sets varialbe for video status\n\n  const [videoStatus, setVideoStatus] = useState(false); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false);\n  const [topicIcon, setTopicIcon] = useState(null); //updating mode state on change of subject id\n  // useEffect(() => {\n  // }, [topicID])\n\n  useEffect(() => {\n    setMode(topicID ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getTopicById(topicID).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched Topics by id into state variable\n        setTopic(res.topic);\n        setTopicName(res.topic.name);\n        setTopicDescription(res.topic.description); // setMockTestLink(res.topic.mockTestLink)\n        // setExamTestLink(res.topic.examTestLink)\n        // setLinkType(res.topic.videoLink.linkType)\n        // setVideoStatus(res.topic.videoLink.linkType)\n        // setLinkString(res.topic.videoLink.linkString)\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [topicID]); //edit the details  of the existing topic\n\n  function editTopicDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (topicID != '') {\n      editTopic(topicID, topicName, topicDescription, topicStatus, topicIcon).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Topic details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill all the topic details');\n    }\n  } //adds new topic \n\n\n  function addNewTopic() {\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false);\n\n    if (topicName && topicDescription) {\n      createTopic(topicName, topicDescription, 'active', courseID, topicIcon).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setAddLoader(false);\n          setModalLine1('New Topic Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the Topic details');\n    }\n  } // on change video handler\n\n\n  const onChangeVideoHandler = e => {\n    var url = URL.createObjectURL(e.target.files[0]);\n    setVideoPreview(url);\n    setTopicVideo(e.target.files[0]);\n  }; // function to reset\n\n\n  const reSetForm = () => {\n    setTopicName(\"\");\n    setTopicDescription(\"\");\n    setMockTestLink(\"\");\n    setExamTestLink(\"\");\n    setLinkType(\"\");\n    setTopicVideo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Topics Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"pageHeaderCard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"   text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-6 col-sm-6 col-12\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Topic Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: topicName,\n                      type: \"text\",\n                      placeholder: \"Enter Topic Name\",\n                      onChange: e => setTopicName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Topic Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: topicDescription,\n                      placeholder: \"Enter Topic Description\",\n                      as: \"textarea\",\n                      rows: 3,\n                      onChange: e => setTopicDescription(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Choose Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"file\",\n                      placeholder: \"choose Sub Topic Exam Zip\",\n                      onChange: e => setTopicIcon(e.target.files[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate('/dashboard/topics'),\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-3 col-12 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  editTopicDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => addNewTopic(),\n              children: \"Add Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => {\n        setModalVisible(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm(), navigate('/dashboard/topics/addTopic/' + courseID))\n                }, void 0, false);\n              },\n              children: \"Add New Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/topics/' + courseID),\n              children: \"Back To Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditTopic, \"VibHKg9j1q61S4uaxjpvUWx4MlM=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditTopic\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/topics/TopicAddEdit.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","createTopic","editTopic","getTopicById","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","useParams","AddEditTopic","props","topicID","topicStatus","courseID","mode","setMode","topic","setTopic","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","topicName","setTopicName","topicDescription","setTopicDescription","mockTestLink","setMockTestLink","examTestLink","setExamTestLink","linkType","setLinkType","linkString","setLinkString","topicVideo","setTopicVideo","videoPreview","setVideoPreview","chooseTopicVideoRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","topicIcon","setTopicIcon","then","res","console","log","status","name","description","catch","err","editTopicDetails","addNewTopic","onChangeVideoHandler","e","url","URL","createObjectURL","target","files","reSetForm","display","height","justifyContent","alignItems","margin","value","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\nimport { useParams } from 'react-router-dom'\nexport default function AddEditTopic(props) {\n    // const topicID = props.match.params.topicId;\n    // const topicStatus = props.match.params.topicStatus;\n    const { topicID, topicStatus, courseID } = useParams()\n    // console.log(props)\n    // const subjectStatus = props.match.params.subjectStatus;\n    const [mode, setMode] = useState(topicID ? \"edit\" : \"add\")\n\n    //setting subjects data into a variable\n    const [topic, setTopic] = useState({});\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add subject Button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the topic user want to add\n    const [topicName, setTopicName] = useState();\n\n    //sets topic description user want to add\n    const [topicDescription, setTopicDescription] = useState()\n\n    //sets mock test link user want to add\n    const [mockTestLink, setMockTestLink] = useState()\n\n    //sets exma test link user want to add\n    const [examTestLink, setExamTestLink] = useState()\n\n    //sets link type user want to add\n    const [linkType, setLinkType] = useState()\n\n    //sets vide link user want to add\n    const [linkString, setLinkString] = useState()\n\n    //sets topic video user want to add\n    const [topicVideo, setTopicVideo] = useState()\n    //sets topic video user want to add\n    const [videoPreview, setVideoPreview] = useState(null);\n\n    //referance variable for video file choose\n    let chooseTopicVideoRef = useRef()\n\n    // sets varialbe for video status\n    const [videoStatus, setVideoStatus] = useState(false)\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [topicIcon, setTopicIcon] = useState(null);\n\n    //updating mode state on change of subject id\n    // useEffect(() => {\n    // }, [topicID])\n\n    useEffect(() => {\n        setMode(topicID ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getTopicById(topicID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Topics by id into state variable\n                setTopic(res.topic);\n                setTopicName(res.topic.name)\n                setTopicDescription(res.topic.description)\n                // setMockTestLink(res.topic.mockTestLink)\n                // setExamTestLink(res.topic.examTestLink)\n                // setLinkType(res.topic.videoLink.linkType)\n                // setVideoStatus(res.topic.videoLink.linkType)\n                // setLinkString(res.topic.videoLink.linkString)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [topicID])\n\n    //edit the details  of the existing topic\n    function editTopicDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (topicID != '') {\n            editTopic(topicID, topicName, topicDescription, topicStatus,topicIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Topic details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill all the topic details');\n        }\n\n    }\n\n    //adds new topic \n    function addNewTopic() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (topicName && topicDescription) {\n            createTopic(topicName, topicDescription, 'active', courseID, topicIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Topic Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Topic details');\n        }\n    }\n\n    // on change video handler\n    const onChangeVideoHandler = (e) => {\n        var url = URL.createObjectURL(e.target.files[0]);\n        setVideoPreview(url)\n        setTopicVideo(e.target.files[0])\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setTopicName(\"\")\n        setTopicDescription(\"\")\n        setMockTestLink(\"\")\n        setExamTestLink(\"\")\n        setLinkType(\"\")\n        setTopicVideo(\"\")\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Topics Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n\n                                        <Form>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Topic Name</Form.Label>\n                                                <Form.Control value={topicName} type=\"text\" placeholder=\"Enter Topic Name\" onChange={(e) => setTopicName(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Topic Description</Form.Label>\n                                                <Form.Control value={topicDescription} placeholder=\"Enter Topic Description\" as=\"textarea\" rows={3} onChange={(e) => setTopicDescription(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Choose Icon</Form.Label>\n                                                <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setTopicIcon(e.target.files[0])} />\n                                            </Form.Group>\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Mock Test Link </Form.Label>\n                                                <Form.Control value={mockTestLink} type=\"text\" placeholder=\"Enter Mock Test Link\" onChange={(e) => setMockTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Exam Test Link</Form.Label>\n                                                <Form.Control value={examTestLink} type=\"text\" placeholder=\"Enter Exam Test Link\" onChange={(e) => setExamTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Link Type</Form.Label>\n                                                <Form.Select value={linkType} onChange={(e) => setLinkType(e.target.value)} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    <option value='upload'>Upload</option>\n                                                    <option value='link'>Link</option>\n                                                    <option value='iframe'>iFrame</option>\n                                                </Form.Select>\n                                            </Form.Group> */}\n                                            {/* {linkType != 'upload' ? (\n                                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>Topic Video Link </Form.Label>\n                                                    <Form.Control value={linkString} required type=\"text\" placeholder=\"Enter Topic Video Link\" onChange={(e) => setLinkString(e.target.value)} />\n                                                </Form.Group>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Topic Video</Form.Label>\n                                                        {mode == 'edit' ? (\n                                                            videoStatus == \"upload\" ? (\n                                                                <div className=\"col-6 col-lg-6 d-flex\">\n                                                                    <img src=\"/Assets/vector.jpg\" className=\"btn w-50 h-100\" />\n                                                                    <div>\n                                                                        <Button   variant=\"text\" type='Button' className='text-danger btn fs-1' onClick={() => setVideoStatus(null)}>&times;</Button>\n                                                                    </div>\n                                                                </div>\n                                                            ) : (\n                                                                <>\n                                                                    <div className=\"col-6 col-lg-6\">\n                                                                        <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                    </div>\n                                                                    <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangeVideoHandler(e)} style={{ visibility: 'hidden' }} />\n                                                                </>\n                                                            )\n\n                                                        ) : (\n\n                                                            <>\n                                                                <div className=\"col-6 col-lg-6\">\n                                                                    <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                </div>\n                                                                <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangeVideoHandler(e)} style={{ visibility: 'hidden' }} />\n                                                            </>\n                                                        )}\n                                                    </Form.Group>\n                                                </>\n                                            )} */}\n                                        </Form>\n\n\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {/* <Button variant=\"outlined\"  onClick={() => history.goBack()}>Cancel</Button> */}\n                                        <Button onClick={() => navigate('/dashboard/topics')} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-3 col-12 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\"  >\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editTopicDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\"  >\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\"\n                                            onClick={() => addNewTopic()}\n                                        >Add Topic</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => { setModalVisible(false) }}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/topics/addTopic/' + courseID)}</>) }}\n                            >Add New Topic</Button>\n\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/topics/' + courseID)}\n                            >Back To Topics</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}