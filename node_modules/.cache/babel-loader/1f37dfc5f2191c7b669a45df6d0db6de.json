{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\evaluation\\\\evaluation.js\",\n    _s = $RefreshSig$();\n\n//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic';\nimport { getAllEvaluation, editEvaluation, deleteCourse, getEvaluationByFilter, getEvaluationById, getAllUserEvaluations, deleteEvaluation } from '../../api/Evaluation/Evaluation';\nimport { getAllClasses } from '../../api/Classes/Classes';\nimport { getAllBoard } from '../../api/Boards/Boards';\nimport { dataLimit } from '../../config';\nimport { getAllSubjects } from '../../api/Subject/Subject';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button } from '@mui/material';\nimport SingleEvaluationRow from './SingleEvaluationRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Evaluations(props) {\n  _s();\n\n  const tableIcons = materialTableIcons; //setting course data into a variable\n  // const [course, setCourse] = useState([]);\n\n  const [evaluation, setEvaluation] = useState([]); //setting course data into a variable\n\n  const [boardData, setBoardData] = useState([]); //setting course data into a variable\n\n  const [subjectData, setSubjectData] = useState([]);\n  const [noCourses, setNoCourses] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the topic who is blocked or deleted\n\n  const [actionCouseId, setEvaluationId] = useState();\n  const [subjectName, setSubjectName] = useState(''); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false); //sets the visibility of the filter modal \n\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [subjectID, setSubjectID] = useState();\n  const [topicID, setTopicID] = useState();\n  const [classesID, setClassesID] = useState();\n  const [boardID, setBoardID] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n      // console.log(filterDateFrom)\n\n      getEvaluationByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus, boardID, subjectID).then(res => {\n        // console.log(\"res\", res)\n        if (res.status) {\n          setEvaluation(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setEvaluation([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false); // resetFilterData()\n      }).catch(err => {\n        // console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoCourses(false);\n    setTableDataLoading(true);\n    getAllEvaluation(page, rowLimit).then(res => {\n      if (res.status) {\n        //setting the fetched Course into state variable\n        setEvaluation(res.results);\n        setTotalPages(res.results.totalPages);\n        console.log('Evaluation Data', res.results);\n      } else {\n        //setting no Course found variable true \n        setNoCourses(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {// console.error(err);\n    });\n  }, [page, rowLimit]);\n  useEffect(() => {\n    // fetching all boards\n    getAllBoard(page, rowLimit).then(res => {\n      // console.log('Boards', res);\n      if (res.status) {\n        //setting the fetched board into state variable\n        setBoardData(res.results.data);\n      }\n    }).catch(err => {// console.error(err);\n    }); // fetching all classes\n\n    getAllSubjects(page, rowLimit).then(res => {\n      // console.log('Subjects', res);\n      if (res.status) {\n        //setting the fetched classes into state variable\n        setSubjectData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); //opens up the delete modal for deleting the Course\n\n  function openDeleteAlertModal(id, index) {\n    // console.log(id, index)\n    setEvaluationId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the Course?');\n    setInfo('All the details of the Course will be removed from the Platform');\n    setModalAlertTitle(true);\n  } //function to change the status of the Course to blocked!\n\n\n  function changeCourseStatus(rowData, index, status) {\n    var _rowData$board, _rowData$subBoard, _rowData$classes, _rowData$subject;\n\n    editEvaluation(rowData._id, rowData.name, rowData === null || rowData === void 0 ? void 0 : (_rowData$board = rowData.board) === null || _rowData$board === void 0 ? void 0 : _rowData$board._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subBoard = rowData.subBoard) === null || _rowData$subBoard === void 0 ? void 0 : _rowData$subBoard._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$classes = rowData.classes) === null || _rowData$classes === void 0 ? void 0 : _rowData$classes._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subject = rowData.subject) === null || _rowData$subject === void 0 ? void 0 : _rowData$subject._id, rowData === null || rowData === void 0 ? void 0 : rowData.description, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        // const index = rowData.tableData.id;\n        //updating Course status in state array\n        const updatedRows = [...evaluation];\n        updatedRows[index].status = status;\n        setEvaluation(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {// console.log('err', err);\n    });\n  } //sets the filter data to null\n\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to delete the Subject from the database\n\n\n  function deleteCourseProfile() {\n    setActionLoader(true);\n    deleteEvaluation(actionCouseId).then(res => {\n      // console.log(res)\n      if (res.status) {\n        const index = rowId; //removing deleted Courses from state array \n\n        const updatedRows = [...course];\n        updatedRows.splice(index, 1);\n        setEvaluation(updatedRows);\n        setModalContent('Course Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {// console.error(err)\n    });\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1); // console.log(newPage + 1)\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value); // console.log(event.target.value)\n\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Evaluations Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\",\n                onClick: () => navigate('/dashboard/evaluation/Addeval'),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this), \"\\xA0Add Questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"No of Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Students taken\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [evaluation.map((row, index) => /*#__PURE__*/_jsxDEV(SingleEvaluationRow, {\n              changeCourseStatus: changeCourseStatus,\n              row: row,\n              index: index,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 57\n            }, this)), console.log('state value', evaluation)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        colSpan: 3,\n        count: totalPages * rowLimit,\n        rowsPerPage: rowLimit,\n        page: page - 1,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: onPageChange,\n        onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this Course?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteCourseProfile() : changeCourseStatus();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: completionModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Updated Courses!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: modalContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary px-5\",\n              onClick: () => setCompletionModal(false),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Board\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setBoardID(e.target.value),\n                  value: boardID,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Board\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 41\n                  }, this), boardData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item._id,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setSubjectID(e.target.value),\n                  value: classesID,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 41\n                  }, this), subjectData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item._id,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\" // onClick={()=>resetFilterData()}\n              ,\n              onClick: () => resetFilterData(),\n              children: \"Reset \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }, this), \"\\u2003\", filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(Loader, {\n                type: \"Puff\",\n                color: \"white\",\n                height: 30,\n                width: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                applyFilters();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Evaluations, \"3evKeqcVYfjVDuxWM/yLYe9wFyA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Evaluations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Evaluations\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/evaluation.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","materialTableIcons","modalStyle","getAllTopics","getTopicByFilter","getAllEvaluation","editEvaluation","deleteCourse","getEvaluationByFilter","getEvaluationById","getAllUserEvaluations","deleteEvaluation","getAllClasses","getAllBoard","dataLimit","getAllSubjects","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","Button","SingleEvaluationRow","Evaluations","props","tableIcons","evaluation","setEvaluation","boardData","setBoardData","subjectData","setSubjectData","noCourses","setNoCourses","months","modalTitle","setModalTitle","tableDataLoading","setTableDataLoading","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionCouseId","setEvaluationId","subjectName","setSubjectName","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","subjectID","setSubjectID","topicID","setTopicID","classesID","setClassesID","boardID","setBoardID","sortByDate","setSortByDate","filterLoader","setFilterLoader","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","navigate","then","res","status","results","data","catch","err","materialTableRef","console","log","error","openDeleteAlertModal","id","index","changeCourseStatus","rowData","_id","name","board","subBoard","classes","subject","description","updatedRows","alert","resetFilterData","deleteCourseProfile","course","splice","applyFilters","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","e","p","mx","map","row","inputProps","native","marginTop","item"],"mappings":"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","sourcesContent":["//page for all Subjects listing!\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\r\n// import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\r\nimport ModalHeader from 'react-bootstrap/ModalHeader'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\r\nimport Loader from \"react-loader-spinner\";\r\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\r\n\r\nimport MaterialTable from 'material-table'\r\nimport { materialTableIcons, modalStyle } from '../../config';\r\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\r\nimport { getAllEvaluation, editEvaluation, deleteCourse, getEvaluationByFilter, getEvaluationById, getAllUserEvaluations, deleteEvaluation } from '../../api/Evaluation/Evaluation'\r\nimport { getAllClasses } from '../../api/Classes/Classes'\r\nimport { getAllBoard } from '../../api/Boards/Boards'\r\nimport { dataLimit } from '../../config';\r\nimport { getAllSubjects } from '../../api/Subject/Subject';\r\n\r\n\r\n\r\nimport { Modal as BootstrapModal } from 'react-bootstrap'\r\nimport Grid from '@mui/material/Grid';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { Button } from '@mui/material';\r\nimport SingleEvaluationRow from './SingleEvaluationRow';\r\n\r\n\r\nexport default function Evaluations(props) {\r\n    const tableIcons = materialTableIcons\r\n    //setting course data into a variable\r\n    // const [course, setCourse] = useState([]);\r\n    const [evaluation, setEvaluation] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const [boardData, setBoardData] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const [subjectData, setSubjectData] = useState([]);\r\n\r\n    const [noCourses, setNoCourses] = useState(false);\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    //this is the modal title for blocking or deleting modal\r\n    const [modalTitle, setModalTitle] = useState('');\r\n\r\n    //table data loading indicator\r\n    const [tableDataLoading, setTableDataLoading] = useState(true)\r\n\r\n    //sets the info inside the modal\r\n    const [info, setInfo] = useState('')\r\n\r\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\r\n    const [modalMode, setModalMode] = useState('')\r\n\r\n    //modal visible status for alert modal for deleting or blocking\r\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\r\n\r\n    //modal visible status for success of deleting or blocking\r\n    const [completionModal, setCompletionModal] = useState(false);\r\n\r\n    //sets the content of the success Modal!\r\n    const [modalContent, setModalContent] = useState('');\r\n\r\n    //sets the id and name of the topic who is blocked or deleted\r\n    const [actionCouseId, setEvaluationId] = useState();\r\n    const [subjectName, setSubjectName] = useState('');\r\n\r\n\r\n    //sets the row data where the action took place\r\n    const [rowId, setRowId] = useState()\r\n\r\n    //loader in the alert table on confirm button\r\n    const [actionLodaer, setActionLoader] = useState(false);\r\n\r\n    //sets the visibility of the filter modal \r\n    const [filterModal, setFilterModal] = useState(false);\r\n\r\n    //sets the user search string into state\r\n    const [search, setSearch] = useState();\r\n\r\n    //sets the user picked date from the apply filter modal\r\n    const [filterDateFrom, setFilterDateFrom] = useState();\r\n    const [filterDateTo, setFilterDateTo] = useState();\r\n    const [filterStatus, setFilterStatus] = useState();\r\n    const [subjectID, setSubjectID] = useState()\r\n    const [topicID, setTopicID] = useState()\r\n    const [classesID, setClassesID] = useState()\r\n    const [boardID, setBoardID] = useState()\r\n\r\n\r\n    const [sortByDate, setSortByDate] = useState();\r\n\r\n    //sets the loader of apply changes in filter modal\r\n    const [filterLoader, setFilterLoader] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [rowLimit, setRowLimit] = useState(dataLimit)\r\n    const [totalPages, setTotalPages] = useState();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        if (filterLoader || search != null) {\r\n            // if(search!=null || search.length > 0) {\r\n            //setting the loader for table\r\n            setTableDataLoading(true);\r\n            //calling filter functions with required parameters\r\n            // console.log(filterDateFrom)\r\n            getEvaluationByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus, boardID, subjectID)\r\n                .then((res) => {\r\n                    // console.log(\"res\", res)\r\n                    if (res.status) {\r\n                        setEvaluation(res.results.data);\r\n                        setTotalPages(res.results.totalPages)\r\n                    }\r\n                    else {\r\n                        setEvaluation([])\r\n                    }\r\n                    setFilterLoader(false)\r\n                    setTableDataLoading(false);\r\n                    setFilterModal(false);\r\n                    // resetFilterData()\r\n                })\r\n                .catch((err) => {\r\n                    // console.log(err);\r\n                    setFilterLoader(false)\r\n                })\r\n            // }\r\n        }\r\n    }, [search, filterLoader])\r\n\r\n    const materialTableRef = useRef()\r\n    useEffect(() => {\r\n        setNoCourses(false)\r\n        setTableDataLoading(true)\r\n        getAllEvaluation(page, rowLimit).then((res) => {\r\n           \r\n            if (res.status) {\r\n                //setting the fetched Course into state variable\r\n                setEvaluation(res.results);\r\n                setTotalPages(res.results.totalPages)\r\n                console.log('Evaluation Data', res.results);\r\n            }\r\n            else {\r\n                //setting no Course found variable true \r\n                setNoCourses(true);\r\n            }\r\n            setTableDataLoading(false)\r\n        })\r\n        \r\n            .catch((err) => {\r\n                // console.error(err);\r\n            });\r\n\r\n    }, [page, rowLimit])\r\n\r\n\r\n    useEffect(() => {\r\n        // fetching all boards\r\n        getAllBoard(page, rowLimit).then((res) => {\r\n            // console.log('Boards', res);\r\n            if (res.status) {\r\n                //setting the fetched board into state variable\r\n                setBoardData(res.results.data);\r\n            }\r\n            })\r\n            .catch((err) => {\r\n                // console.error(err);\r\n            });\r\n\r\n        // fetching all classes\r\n        getAllSubjects(page, rowLimit).then((res) => {\r\n            // console.log('Subjects', res);\r\n            if (res.status) {\r\n                //setting the fetched classes into state variable\r\n                setSubjectData(res.results.data);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }, [])\r\n\r\n    //opens up the delete modal for deleting the Course\r\n    function openDeleteAlertModal(id, index) {\r\n        // console.log(id, index)\r\n\r\n        setEvaluationId(id);\r\n        setRowId(index)\r\n        setModalMode('delete');\r\n        setModalTitle('Delete the Course?');\r\n        setInfo('All the details of the Course will be removed from the Platform');\r\n        setModalAlertTitle(true)\r\n    }\r\n\r\n    //function to change the status of the Course to blocked!\r\n    function changeCourseStatus(rowData, index, status) {\r\n        editEvaluation(rowData._id, rowData.name, rowData?.board?._id, rowData?.subBoard?._id, rowData?.classes?._id, rowData?.subject?._id, rowData?.description, status)\r\n            .then((res => {\r\n                // console.log('res',res);\r\n                if (res.status) {\r\n                    // const index = rowData.tableData.id;\r\n                    //updating Course status in state array\r\n                    const updatedRows = [...evaluation];\r\n                    updatedRows[index].status = status;\r\n                    setEvaluation(updatedRows);\r\n\r\n                }\r\n                else {\r\n                    alert(\"error occured\")\r\n                }\r\n            }))\r\n            .catch((err => {\r\n                // console.log('err', err);\r\n            }))\r\n    }\r\n\r\n    //sets the filter data to null\r\n    function resetFilterData() {\r\n        setSearch(null);\r\n        setFilterDateFrom(null);\r\n        setFilterDateTo(null);\r\n        setFilterStatus(null);\r\n        setFilterLoader(false);\r\n    }\r\n\r\n    //function to delete the Subject from the database\r\n    function deleteCourseProfile() {\r\n        setActionLoader(true)\r\n        deleteEvaluation(actionCouseId)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                if (res.status) {\r\n                    const index = rowId;\r\n                    //removing deleted Courses from state array \r\n                    const updatedRows = [...course]\r\n                    updatedRows.splice(index, 1)\r\n                    setEvaluation(updatedRows);\r\n                    setModalContent('Course Deleted successfully!')\r\n                    setModalAlertTitle(false);\r\n                    setCompletionModal(true);\r\n                    setActionLoader(false)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                // console.error(err)\r\n            })\r\n    }\r\n\r\n    //function to confirm the filter changes\r\n    function applyFilters() {\r\n        setFilterLoader(true)\r\n\r\n    }\r\n\r\n    //returns the created date of the record of the table\r\n    function renderDate(date) {\r\n        const newDate = new Date(date);\r\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\r\n        return returnDate;\r\n    }\r\n\r\n    // function for pagination\r\n    const onPageChange = (event, newPage) => {\r\n        // setRowLimit(parseInt(event.target.value), 4);\r\n        setPage(newPage + 1);\r\n        // console.log(newPage + 1)\r\n    };\r\n\r\n    const onRowPerChange = (event) => {\r\n        setRowLimit(event.target.value)\r\n        // console.log(event.target.value)\r\n        setPage(1)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\r\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Evaluations Management</h5>\r\n            {/* <hr className=\"mt-4\" /> */}\r\n            <div className=\"d-flex align-items-center mt-3\">\r\n                <Card className=\"w-100\">\r\n                    <CardContent className=\"pageHeaderCard\">\r\n                        <div className='row'>\r\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    label=\"Search by name\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                />\r\n                                <Button variant=\"contained\"\r\n                                    // opens up the filter modal onClick \r\n                                    sx={{ p: 1, mx: 1 }}\r\n                                    onClick={() => setFilterModal(true)}\r\n                                >\r\n                                    <BsSortDownAlt size={20} />\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\r\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\r\n                                    onClick={() => navigate('/dashboard/evaluation/Addeval')}\r\n                                >\r\n                                    <i class=\"fas fa-plus-circle\"></i>\r\n                                    &nbsp;Add Questions</Button>\r\n                                </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <div className=\"row px-3 mt-3 materialTable\">\r\n                {/* material table for displaying Subject details  */}\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableCell>S.No.</TableCell>                            \r\n                            <TableCell >Course</TableCell>\r\n                            <TableCell >No of Question</TableCell>\r\n                            <TableCell >Students taken</TableCell>                \r\n                            <TableCell >Status</TableCell>\r\n                            <TableCell align='center'>Action</TableCell>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {evaluation.map((row, index) => <SingleEvaluationRow changeCourseStatus={changeCourseStatus} row={row} index={index} openDeleteAlertModal={openDeleteAlertModal} />                              \r\n                                )}\r\n                              {console.log('state value', evaluation )} \r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {/* <button onClick={() => {getAllEvaluation()}}>Click Me</button> */}\r\n            </div>\r\n            <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\r\n                <TablePagination\r\n\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    colSpan={3}\r\n                    count={totalPages * rowLimit}\r\n                    rowsPerPage={rowLimit}\r\n                    page={page - 1}\r\n                    SelectProps={{\r\n                        inputProps: {\r\n                            'aria-label': 'rows per page',\r\n                        },\r\n                        native: true,\r\n                    }}\r\n                    onPageChange={onPageChange}\r\n                    onRowsPerPageChange={onRowPerChange}\r\n                // ActionsComponent={TablePaginationActions}\r\n                />\r\n            </div>\r\n            {/* </div> */}\r\n\r\n            {/* Modal for delete or blocking confirmation */}\r\n            <Modal\r\n                open={modalAlertTitle}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onClose={() => setModalAlertTitle(false)}\r\n            >\r\n                <Box sx={modalStyle}>\r\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\r\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\r\n                                <Typography variant=\"h6\">\r\n                                    {modalTitle}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={1} lg={1} md={1}>\r\n                                <Button onClick={() => setModalAlertTitle(false)} >\r\n                                    <CloseIcon />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        {/* </BootstrapModal.Title> */}\r\n                    </BootstrapModal.Header>\r\n                    <BootstrapModal.Body>\r\n                        <div className=\"text-center txt-5282F0 my-4\">\r\n                            <p>Are you sure to {modalMode} this Course?</p>\r\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\r\n                        </div>\r\n                        <div className=\"text-center mt-4 pb-3\">\r\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\r\n                                onClick={() => setModalAlertTitle(false)}\r\n                            >Cancel</Button>\r\n                            &emsp;\r\n                            {actionLodaer ? (\r\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\r\n                                    <CircularProgress size={20} />\r\n                                </Button>\r\n                            ) : (\r\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\r\n                                    onClick={() => { modalMode == 'delete' ? (deleteCourseProfile()) : (changeCourseStatus()) }}\r\n                                >Confirm</Button>\r\n                            )}\r\n\r\n                        </div>\r\n                    </BootstrapModal.Body>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/* Modal for successful deletion and block */}\r\n            <Modal\r\n                show={completionModal}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Box style={modalStyle}>\r\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\r\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\r\n                                <Typography variant=\"h6\">\r\n                                    Updated Courses!\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={1} lg={1} md={1}>\r\n                                <Button onClick={() => setModalAlertTitle(false)} >\r\n                                    <CloseIcon />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* </Modal.Title> */}\r\n                    </BootstrapModal.Header>\r\n                    <BootstrapModal.Body>\r\n                        <div className=\"text-center txt-5282F0 my-4\">\r\n                            <p>{modalContent}</p>\r\n                        </div>\r\n                        <div className=\"text-center mt-4 pb-3\">\r\n                            <button className=\"btn btn-primary px-5\"\r\n                                onClick={() => setCompletionModal(false)}\r\n                            >OK</button>\r\n                        </div>\r\n                    </BootstrapModal.Body>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/* Modal for applying filter */}\r\n            <Modal\r\n                open={filterModal}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onClose={() => setFilterModal(false)}\r\n            >\r\n                <Box sx={modalStyle}>\r\n                    <BootstrapModal.Header>\r\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\r\n                        <Grid container>\r\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\r\n                                <Typography variant=\"h6\">\r\n                                    Apply Filter\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={1} lg={1} md={1}>\r\n                                <Button onClick={() => setFilterModal(false)} >\r\n                                    <CloseIcon />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* </BootstrapModal.Title> */}\r\n                    </BootstrapModal.Header>\r\n                    <BootstrapModal.Body>\r\n                        <div className=\"row labelColor\">\r\n                            <label>Added Date</label>\r\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\r\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\r\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\r\n                            </div>\r\n                            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\r\n                                    <label>Board</label>\r\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setBoardID(e.target.value)} value={boardID}>\r\n                                        <option value={null}>Board</option>\r\n                                        {boardData.map((item, index) => (\r\n                                            <option value={item._id}>{item.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\r\n                                    <label>Subject</label>\r\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setSubjectID(e.target.value)} value={classesID}>\r\n                                        <option value={null}>Subject</option>\r\n                                        {subjectData.map((item, index) => (\r\n                                            <option value={item._id}>{item.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\r\n                                    <label>Status</label>\r\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\r\n                                        <option value={null}>Status</option>\r\n                                        <option value=\"active\">Active</option>\r\n                                        <option value=\"inactive\">Inactive</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center txt-5282F0 my-4\">\r\n\r\n                        </div>\r\n                        <div className=\"text-center mt-4 pb-3\">\r\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\r\n                                // onClick={()=>resetFilterData()}\r\n                                onClick={() => resetFilterData()}\r\n                            >Reset </Button>\r\n                            &emsp;\r\n                            {filterLoader ? (\r\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\r\n                                    <Loader\r\n                                        type=\"Puff\"\r\n                                        color=\"white\"\r\n                                        height={30}\r\n                                        width={30}\r\n                                    />\r\n                                </Button>\r\n                            ) : (\r\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\r\n                                    onClick={() => { applyFilters() }}\r\n                                >Confirm</Button>\r\n                            )}\r\n\r\n                        </div>\r\n                    </BootstrapModal.Body>\r\n                </Box>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}