{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\layouts\\\\dashboard\\\\header\\\\AccountPopover.js\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom'; // @mui\n\nimport { alpha } from '@mui/material/styles';\nimport { Box, Divider, MenuItem, Typography, Stack } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // hooks\n\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef'; // components\n\nimport MyAvatar from '../../../components/MyAvatar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MENU_OPTIONS = [{\n  label: 'Home',\n  linkTo: '/'\n}, {\n  label: 'Profile',\n  linkTo: PATH_DASHBOARD.user.profile\n}, {\n  label: 'Settings',\n  linkTo: PATH_DASHBOARD.user.account\n}]; // ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  _s();\n\n  const navigate = useNavigate();\n  const anchorRef = useRef(null);\n  const {\n    user,\n    logout\n  } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await (logout === null || logout === void 0 ? void 0 : logout());\n\n      if (isMountedRef.current) {\n        navigate('/');\n        handleClose();\n      }\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar('Unable to logout', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      ref: anchorRef,\n      onClick: handleOpen,\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          '&:before': {\n            zIndex: 1,\n            content: \"''\",\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            position: 'absolute',\n            bgcolor: theme => alpha(theme.palette.grey[900], 0.8)\n          }\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(MyAvatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 220\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 1.5,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          noWrap: true,\n          children: user === null || user === void 0 ? void 0 : user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: 'text.secondary'\n          },\n          noWrap: true,\n          children: user === null || user === void 0 ? void 0 : user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 0.5,\n        sx: {\n          p: 1\n        },\n        children: MENU_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          to: option.linkTo,\n          component: RouterLink,\n          onClick: handleClose,\n          sx: {\n            typography: 'body2',\n            py: 1,\n            px: 2,\n            borderRadius: 1\n          },\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleLogout,\n        sx: {\n          typography: 'body2',\n          py: 1,\n          px: 2,\n          borderRadius: 1,\n          m: 1\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountPopover, \"1vKPoJjXpGa/El0F7KipjGn4P7Y=\", false, function () {\n  return [useNavigate, useAuth, useIsMountedRef, useSnackbar];\n});\n\n_c = AccountPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPopover\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/header/AccountPopover.js"],"names":["useSnackbar","useRef","useState","Link","RouterLink","useNavigate","alpha","Box","Divider","MenuItem","Typography","Stack","PATH_DASHBOARD","useAuth","useIsMountedRef","MyAvatar","MenuPopover","IconButtonAnimate","MENU_OPTIONS","label","linkTo","user","profile","account","AccountPopover","navigate","anchorRef","logout","isMountedRef","enqueueSnackbar","open","setOpen","handleOpen","handleClose","handleLogout","current","error","console","variant","padding","width","height","zIndex","content","borderRadius","position","bgcolor","theme","palette","grey","my","px","displayName","color","email","p","map","option","typography","py","m"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAAgD,kBAAhD,C,CACA;;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,KAA7C,QAA0D,eAA1D,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAEA;;;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADmB,EAKnB;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,MAAM,EAAER,cAAc,CAACS,IAAf,CAAoBC;AAF9B,CALmB,EASnB;AACEH,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAER,cAAc,CAACS,IAAf,CAAoBE;AAF9B,CATmB,CAArB,C,CAeA;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,SAAS,GAAGzB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM;AAAEoB,IAAAA,IAAF;AAAQM,IAAAA;AAAR,MAAmBd,OAAO,EAAhC;AACA,QAAMe,YAAY,GAAGd,eAAe,EAApC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAsB7B,WAAW,EAAvC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAM8B,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,aAAMP,MAAN,aAAMA,MAAN,uBAAMA,MAAM,EAAZ;;AACA,UAAIC,YAAY,CAACO,OAAjB,EAA0B;AACxBV,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACAQ,QAAAA,WAAW;AACZ;AACF,KAND,CAME,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAP,MAAAA,eAAe,CAAC,kBAAD,EAAqB;AAAES,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAf;AACD;AACF,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,iBAAD;AACE,MAAA,GAAG,EAAEZ,SADP;AAEE,MAAA,OAAO,EAAEM,UAFX;AAGE,MAAA,EAAE,EAAE;AACFO,QAAAA,OAAO,EAAE,CADP;AAEFC,QAAAA,KAAK,EAAE,EAFL;AAGFC,QAAAA,MAAM,EAAE,EAHN;AAIF,YAAIX,IAAI,IAAI;AACV,sBAAY;AACVY,YAAAA,MAAM,EAAE,CADE;AAEVC,YAAAA,OAAO,EAAE,IAFC;AAGVH,YAAAA,KAAK,EAAE,MAHG;AAIVC,YAAAA,MAAM,EAAE,MAJE;AAKVG,YAAAA,YAAY,EAAE,KALJ;AAMVC,YAAAA,QAAQ,EAAE,UANA;AAOVC,YAAAA,OAAO,EAAGC,KAAD,IAAWzC,KAAK,CAACyC,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAD,EAA0B,GAA1B;AAPf;AADF,SAAZ;AAJE,OAHN;AAAA,6BAoBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEnB,IAAnB;AAAyB,MAAA,OAAO,EAAEG,WAAlC;AAA+C,MAAA,QAAQ,EAAEP,SAAS,CAACS,OAAnE;AAA4E,MAAA,EAAE,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAhF;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEU,UAAAA,EAAE,EAAE,GAAN;AAAWC,UAAAA,EAAE,EAAE;AAAf,SAAT;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,MAAM,MAAtC;AAAA,oBACG9B,IADH,aACGA,IADH,uBACGA,IAAI,CAAE+B;AADT;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,EAAE,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAhC;AAA6D,UAAA,MAAM,MAAnE;AAAA,oBACGhC,IADH,aACGA,IADH,uBACGA,IAAI,CAAEiC;AADT;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,GAAhB;AAAqB,QAAA,EAAE,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAAzB;AAAA,kBACGrC,YAAY,CAACsC,GAAb,CAAkBC,MAAD,iBAChB,QAAC,QAAD;AAEE,UAAA,EAAE,EAAEA,MAAM,CAACrC,MAFb;AAGE,UAAA,SAAS,EAAEhB,UAHb;AAIE,UAAA,OAAO,EAAE6B,WAJX;AAKE,UAAA,EAAE,EAAE;AAAEyB,YAAAA,UAAU,EAAE,OAAd;AAAuBC,YAAAA,EAAE,EAAE,CAA3B;AAA8BR,YAAAA,EAAE,EAAE,CAAlC;AAAqCP,YAAAA,YAAY,EAAE;AAAnD,WALN;AAAA,oBAOGa,MAAM,CAACtC;AAPV,WACOsC,MAAM,CAACtC,KADd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXF,eAwBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAxBF,eA0BE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEe,YAAnB;AAAiC,QAAA,EAAE,EAAE;AAAEwB,UAAAA,UAAU,EAAE,OAAd;AAAuBC,UAAAA,EAAE,EAAE,CAA3B;AAA8BR,UAAAA,EAAE,EAAE,CAAlC;AAAqCP,UAAAA,YAAY,EAAE,CAAnD;AAAsDgB,UAAAA,CAAC,EAAE;AAAzD,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA,kBADF;AAyDD;;GArFuBpC,c;UACLnB,W,EAEQQ,O,EACJC,e,EACOd,W;;;KALNwB,c","sourcesContent":["import { useSnackbar } from 'notistack';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Box, Divider, MenuItem, Typography, Stack } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n// components\nimport MyAvatar from '../../../components/MyAvatar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst MENU_OPTIONS = [\n  {\n    label: 'Home',\n    linkTo: '/',\n  },\n  {\n    label: 'Profile',\n    linkTo: PATH_DASHBOARD.user.profile,\n  },\n  {\n    label: 'Settings',\n    linkTo: PATH_DASHBOARD.user.account,\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  const navigate = useNavigate();\n  const anchorRef = useRef(null);\n  const { user, logout } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout?.();\n      if (isMountedRef.current) {\n        navigate('/');\n        handleClose();\n      }\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <IconButtonAnimate\n        ref={anchorRef}\n        onClick={handleOpen}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && {\n            '&:before': {\n              zIndex: 1,\n              content: \"''\",\n              width: '100%',\n              height: '100%',\n              borderRadius: '50%',\n              position: 'absolute',\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n            },\n          }),\n        }}\n      >\n        <MyAvatar />\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 220 }}>\n        <Box sx={{ my: 1.5, px: 2.5 }}>\n          <Typography variant=\"subtitle1\" noWrap>\n            {user?.displayName}\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n            {user?.email}\n          </Typography>\n        </Box>\n\n        <Divider />\n        <Stack spacing={0.5} sx={{ p: 1 }}>\n          {MENU_OPTIONS.map((option) => (\n            <MenuItem\n              key={option.label}\n              to={option.linkTo}\n              component={RouterLink}\n              onClick={handleClose}\n              sx={{ typography: 'body2', py: 1, px: 2, borderRadius: 1 }}\n            >\n              {option.label}\n            </MenuItem>\n          ))}\n        </Stack>\n        <Divider />\n\n        <MenuItem onClick={handleLogout} sx={{ typography: 'body2', py: 1, px: 2, borderRadius: 1, m: 1 }}>\n          Logout\n        </MenuItem>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}