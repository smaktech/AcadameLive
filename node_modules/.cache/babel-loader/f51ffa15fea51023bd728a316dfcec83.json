{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\users\\\\SingleUserRow.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport { Button } from '@mui/material';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { imageBaseUrl } from '../../config';\nimport BlockIcon from '@mui/icons-material/Block';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleUserRow(_ref) {\n  _s();\n\n  let {\n    row,\n    index,\n    openDeleteAlertModal,\n    openBlockAlertModal\n  } = _ref;\n  console.log(row);\n  const navigate = useNavigate(); //returns the created date of the record of the table\n\n  function renderDate(date) {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  }\n\n  console.log(row);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    sx: {\n      '&:last-child td, &:last-child th': {\n        border: 0\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard/users/user/\" + row._id,\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: row.profileImage ? imageBaseUrl + row.profileImage : '/Assets/userProfile.png',\n          height: 30,\n          style: {\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), row.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: renderDate(row.createdAt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.phoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.school\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.paidStatus ? 'Yes' : 'No'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.isActive ? 'Unblocked' : 'Blocked'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [row.isActive ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => openBlockAlertModal(row._id, false, index),\n          children: /*#__PURE__*/_jsxDEV(ToggleOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => openBlockAlertModal(row._id, true, index),\n          children: /*#__PURE__*/_jsxDEV(ToggleOnIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => openDeleteAlertModal(row._id, index),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleUserRow, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SingleUserRow;\nexport default SingleUserRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleUserRow\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/users/SingleUserRow.js"],"names":["React","TableRow","TableCell","Button","ToggleOnIcon","EditIcon","ToggleOffIcon","DeleteIcon","imageBaseUrl","BlockIcon","Link","useNavigate","Redirect","SingleUserRow","row","index","openDeleteAlertModal","openBlockAlertModal","console","log","navigate","renderDate","date","months","newDate","Date","returnDate","getMonth","getDate","getFullYear","border","_id","textDecoration","color","profileImage","borderRadius","name","createdAt","phoneNumber","email","school","paidStatus","isActive"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport TableRow from '@mui/material/TableRow';\n\nimport TableCell from '@mui/material/TableCell';\nimport { Button } from '@mui/material';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { imageBaseUrl } from '../../config';\nimport BlockIcon from '@mui/icons-material/Block';\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\n\nfunction SingleUserRow({ row, index, openDeleteAlertModal, openBlockAlertModal }) {\n    console.log(row)\n\n\n    const navigate = useNavigate()\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\nconsole.log(row)\n\n    return (\n        <TableRow\n            key={index}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell>\n                {index + 1}\n            </TableCell>\n            <TableCell>\n                <Link to={\"/dashboard/users/user/\"+row._id} style={{textDecoration:'none',color:'black'}}>\n                    <img src={row.profileImage ? (imageBaseUrl + row.profileImage) : ('/Assets/userProfile.png')} height={30} style={{ borderRadius: '50%' }} />\n                {row.name}\n                </Link>\n            </TableCell>\n            <TableCell>{renderDate(row.createdAt)}</TableCell>\n            <TableCell>{row.phoneNumber}</TableCell>\n            <TableCell>{row.email}</TableCell>\n            <TableCell>{row.school}</TableCell>\n            <TableCell>{row.paidStatus ? ('Yes') : ('No')}</TableCell>\n            <TableCell>{row.isActive ? ('Unblocked') : ('Blocked')}</TableCell>\n            <TableCell>\n                <>\n                    {row.isActive ? (\n                        <Button onClick={() => openBlockAlertModal(row._id, false, index)}>\n                            <ToggleOffIcon />\n\n                        </Button>\n                    ) : (\n                        <Button onClick={() => openBlockAlertModal(row._id, true, index)}>\n                            <ToggleOnIcon />\n                        </Button>\n                    )}\n                    &emsp;\n                    <Button onClick={() => openDeleteAlertModal(row._id, index)}>\n                        <DeleteIcon />\n                    </Button>\n                </>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default SingleUserRow\n"]},"metadata":{},"sourceType":"module"}