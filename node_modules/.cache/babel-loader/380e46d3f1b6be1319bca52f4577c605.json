{"ast":null,"code":"/*\nLanguage: Wren\nDescription: Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.\nCategory: scripting\nAuthor: @joshgoebel\nMaintainer: @joshgoebel\nWebsite: https://wren.io/\n*/\n\n/** @type LanguageFn */\nfunction wren(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[a-zA-Z]\\w*/;\n  const KEYWORDS = [\"as\", \"break\", \"class\", \"construct\", \"continue\", \"else\", \"for\", \"foreign\", \"if\", \"import\", \"in\", \"is\", \"return\", \"static\", \"var\", \"while\"];\n  const LITERALS = [\"true\", \"false\", \"null\"];\n  const LANGUAGE_VARS = [\"this\", \"super\"];\n  const CORE_CLASSES = [\"Bool\", \"Class\", \"Fiber\", \"Fn\", \"List\", \"Map\", \"Null\", \"Num\", \"Object\", \"Range\", \"Sequence\", \"String\", \"System\"];\n  const OPERATORS = [\"-\", \"~\", /\\*/, \"%\", /\\.\\.\\./, /\\.\\./, /\\+/, \"<<\", \">>\", \">=\", \"<=\", \"<\", \">\", /\\^/, /!=/, /!/, /\\bis\\b/, \"==\", \"&&\", \"&\", /\\|\\|/, /\\|/, /\\?:/, \"=\"];\n  const FUNCTION = {\n    relevance: 0,\n    match: regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE, /(?=\\s*[({])/),\n    className: \"title.function\"\n  };\n  const FUNCTION_DEFINITION = {\n    match: regex.concat(regex.either(regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE), regex.either(...OPERATORS)), /(?=\\s*\\([^)]+\\)\\s*\\{)/),\n    className: \"title.function\",\n    starts: {\n      contains: [{\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [{\n          relevance: 0,\n          scope: \"params\",\n          match: IDENT_RE\n        }]\n      }]\n    }\n  };\n  const CLASS_DEFINITION = {\n    variants: [{\n      match: [/class\\s+/, IDENT_RE, /\\s+is\\s+/, IDENT_RE]\n    }, {\n      match: [/class\\s+/, IDENT_RE]\n    }],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: KEYWORDS\n  };\n  const OPERATOR = {\n    relevance: 0,\n    match: regex.either(...OPERATORS),\n    className: \"operator\"\n  };\n  const TRIPLE_STRING = {\n    className: \"string\",\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  };\n  const PROPERTY = {\n    className: \"property\",\n    begin: regex.concat(/\\./, regex.lookahead(IDENT_RE)),\n    end: IDENT_RE,\n    excludeBegin: true,\n    relevance: 0\n  };\n  const FIELD = {\n    relevance: 0,\n    match: regex.concat(/\\b_/, IDENT_RE),\n    scope: \"variable\"\n  }; // CamelCase\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,\n    scope: \"title.class\",\n    keywords: {\n      _: CORE_CLASSES\n    }\n  }; // TODO: add custom number modes\n\n  const NUMBER = hljs.C_NUMBER_MODE;\n  const SETTER = {\n    match: [IDENT_RE, /\\s*/, /=/, /\\s*/, /\\(/, IDENT_RE, /\\)\\s*\\{/],\n    scope: {\n      1: \"title.function\",\n      3: \"operator\",\n      6: \"params\"\n    }\n  };\n  const COMMENT_DOCS = hljs.COMMENT(/\\/\\*\\*/, /\\*\\//, {\n    contains: [{\n      match: /@[a-z]+/,\n      scope: \"doctag\"\n    }, \"self\"]\n  });\n  const SUBST = {\n    scope: \"subst\",\n    begin: /%\\(/,\n    end: /\\)/,\n    contains: [NUMBER, CLASS_REFERENCE, FUNCTION, FIELD, OPERATOR]\n  };\n  const STRING = {\n    scope: \"string\",\n    begin: /\"/,\n    end: /\"/,\n    contains: [SUBST, {\n      scope: \"char.escape\",\n      variants: [{\n        match: /\\\\\\\\|\\\\[\"0%abefnrtv]/\n      }, {\n        match: /\\\\x[0-9A-F]{2}/\n      }, {\n        match: /\\\\u[0-9A-F]{4}/\n      }, {\n        match: /\\\\U[0-9A-F]{8}/\n      }]\n    }]\n  };\n  SUBST.contains.push(STRING);\n  const ALL_KWS = [...KEYWORDS, ...LANGUAGE_VARS, ...LITERALS];\n  const VARIABLE = {\n    relevance: 0,\n    match: regex.concat(\"\\\\b(?!\", ALL_KWS.join(\"|\"), \"\\\\b)\", /[a-zA-Z_]\\w*(?:[?!]|\\b)/),\n    className: \"variable\"\n  }; // TODO: reconsider this in the future\n\n  const ATTRIBUTE = {\n    // scope: \"meta\",\n    scope: \"comment\",\n    variants: [{\n      begin: [/#!?/, /[A-Za-z_]+(?=\\()/],\n      beginScope: {// 2: \"attr\"\n      },\n      keywords: {\n        literal: LITERALS\n      },\n      contains: [// NUMBER,\n        // VARIABLE\n      ],\n      end: /\\)/\n    }, {\n      begin: [/#!?/, /[A-Za-z_]+/],\n      beginScope: {// 2: \"attr\"\n      },\n      end: /$/\n    }]\n  };\n  return {\n    name: \"Wren\",\n    keywords: {\n      keyword: KEYWORDS,\n      \"variable.language\": LANGUAGE_VARS,\n      literal: LITERALS\n    },\n    contains: [ATTRIBUTE, NUMBER, STRING, TRIPLE_STRING, COMMENT_DOCS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, CLASS_REFERENCE, CLASS_DEFINITION, SETTER, FUNCTION_DEFINITION, FUNCTION, OPERATOR, FIELD, PROPERTY, VARIABLE]\n  };\n}\n\nmodule.exports = wren;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/wren.js"],"names":["wren","hljs","regex","IDENT_RE","KEYWORDS","LITERALS","LANGUAGE_VARS","CORE_CLASSES","OPERATORS","FUNCTION","relevance","match","concat","className","FUNCTION_DEFINITION","either","starts","contains","begin","end","scope","CLASS_DEFINITION","variants","keywords","OPERATOR","TRIPLE_STRING","PROPERTY","lookahead","excludeBegin","FIELD","CLASS_REFERENCE","_","NUMBER","C_NUMBER_MODE","SETTER","COMMENT_DOCS","COMMENT","SUBST","STRING","push","ALL_KWS","VARIABLE","join","ATTRIBUTE","beginScope","literal","name","keyword","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Wren\nDescription: Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.\nCategory: scripting\nAuthor: @joshgoebel\nMaintainer: @joshgoebel\nWebsite: https://wren.io/\n*/\n\n/** @type LanguageFn */\nfunction wren(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[a-zA-Z]\\w*/;\n  const KEYWORDS = [\n    \"as\",\n    \"break\",\n    \"class\",\n    \"construct\",\n    \"continue\",\n    \"else\",\n    \"for\",\n    \"foreign\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"is\",\n    \"return\",\n    \"static\",\n    \"var\",\n    \"while\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  const LANGUAGE_VARS = [\n    \"this\",\n    \"super\"\n  ];\n  const CORE_CLASSES = [\n    \"Bool\",\n    \"Class\",\n    \"Fiber\",\n    \"Fn\",\n    \"List\",\n    \"Map\",\n    \"Null\",\n    \"Num\",\n    \"Object\",\n    \"Range\",\n    \"Sequence\",\n    \"String\",\n    \"System\"\n  ];\n  const OPERATORS = [\n    \"-\",\n    \"~\",\n    /\\*/,\n    \"%\",\n    /\\.\\.\\./,\n    /\\.\\./,\n    /\\+/,\n    \"<<\", \">>\",\n    \">=\", \"<=\",\n    \"<\", \">\",\n    /\\^/,\n    /!=/,\n    /!/,\n    /\\bis\\b/,\n    \"==\",\n    \"&&\",\n    \"&\",\n    /\\|\\|/,\n    /\\|/,\n    /\\?:/,\n    \"=\"\n  ];\n  const FUNCTION = {\n    relevance: 0,\n    match: regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE, /(?=\\s*[({])/),\n    className: \"title.function\"\n  };\n  const FUNCTION_DEFINITION = {\n    match: regex.concat(\n      regex.either(\n        regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE),\n        regex.either(...OPERATORS)\n      ),\n      /(?=\\s*\\([^)]+\\)\\s*\\{)/),\n    className: \"title.function\",\n    starts: {\n      contains: [\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          contains: [\n            {\n              relevance: 0,\n              scope: \"params\",\n              match: IDENT_RE\n            }\n          ]\n        }\n      ]\n    }\n  };\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE,\n          /\\s+is\\s+/,\n          IDENT_RE\n        ]\n      },\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: KEYWORDS\n  };\n\n  const OPERATOR = {\n    relevance: 0,\n    match: regex.either(...OPERATORS),\n    className: \"operator\"\n  };\n\n  const TRIPLE_STRING = {\n    className: \"string\",\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  };\n\n  const PROPERTY = {\n    className: \"property\",\n    begin: regex.concat(/\\./, regex.lookahead(IDENT_RE)),\n    end: IDENT_RE,\n    excludeBegin: true,\n    relevance: 0\n  };\n\n  const FIELD = {\n    relevance: 0,\n    match: regex.concat(/\\b_/, IDENT_RE),\n    scope: \"variable\"\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,\n    scope: \"title.class\",\n    keywords: {\n      _: CORE_CLASSES\n    }\n  };\n\n  // TODO: add custom number modes\n  const NUMBER = hljs.C_NUMBER_MODE;\n\n  const SETTER = {\n    match: [\n      IDENT_RE, /\\s*/,\n      /=/, /\\s*/,\n      /\\(/, IDENT_RE, /\\)\\s*\\{/\n    ],\n    scope: {\n      1: \"title.function\",\n      3: \"operator\",\n      6: \"params\"\n    }\n  };\n\n  const COMMENT_DOCS = hljs.COMMENT(\n    /\\/\\*\\*/,\n    /\\*\\//,\n    {\n      contains: [\n        {\n          match: /@[a-z]+/,\n          scope: \"doctag\"\n        },\n        \"self\"\n      ]\n    }\n  );\n  const SUBST = {\n    scope: \"subst\",\n    begin: /%\\(/,\n    end: /\\)/,\n    contains: [\n      NUMBER,\n      CLASS_REFERENCE,\n      FUNCTION,\n      FIELD,\n      OPERATOR\n    ]\n  };\n  const STRING = {\n    scope: \"string\",\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      SUBST,\n      {\n        scope: \"char.escape\",\n        variants: [\n          { match: /\\\\\\\\|\\\\[\"0%abefnrtv]/ },\n          { match: /\\\\x[0-9A-F]{2}/ },\n          { match: /\\\\u[0-9A-F]{4}/ },\n          { match: /\\\\U[0-9A-F]{8}/ }\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ALL_KWS = [...KEYWORDS, ...LANGUAGE_VARS, ...LITERALS];\n  const VARIABLE = {\n    relevance: 0,\n    match: regex.concat(\n      \"\\\\b(?!\",\n      ALL_KWS.join(\"|\"),\n      \"\\\\b)\",\n      /[a-zA-Z_]\\w*(?:[?!]|\\b)/\n    ),\n    className: \"variable\"\n  };\n\n  // TODO: reconsider this in the future\n  const ATTRIBUTE = {\n    // scope: \"meta\",\n    scope: \"comment\",\n    variants: [\n      {\n        begin: [/#!?/, /[A-Za-z_]+(?=\\()/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        keywords: {\n          literal: LITERALS\n        },\n        contains: [\n          // NUMBER,\n          // VARIABLE\n        ],\n        end: /\\)/\n      },\n      {\n        begin: [/#!?/, /[A-Za-z_]+/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        end: /$/\n      }\n    ]\n  };\n\n  return {\n    name: \"Wren\",\n    keywords: {\n      keyword: KEYWORDS,\n      \"variable.language\": LANGUAGE_VARS,\n      literal: LITERALS\n    },\n    contains: [\n      ATTRIBUTE,\n      NUMBER,\n      STRING,\n      TRIPLE_STRING,\n      COMMENT_DOCS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CLASS_REFERENCE,\n      CLASS_DEFINITION,\n      SETTER,\n      FUNCTION_DEFINITION,\n      FUNCTION,\n      OPERATOR,\n      FIELD,\n      PROPERTY,\n      VARIABLE\n    ]\n  };\n}\n\nmodule.exports = wren;\n"]},"metadata":{},"sourceType":"script"}