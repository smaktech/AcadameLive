{"ast":null,"code":"/*\nLanguage: Device Tree\nDescription: *.dts files used in the Linux kernel\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\nWebsite: https://elinux.org/Device_Tree_Reference\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  var STRINGS = {\n    className: 'string',\n    variants: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      begin: '((u8?|U)|L)?\"'\n    }), {\n      begin: '(u8?|U)?R\"',\n      end: '\"',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\\'\\\\\\\\?.',\n      end: '\\'',\n      illegal: '.'\n    }]\n  };\n  var NUMBERS = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n    }, {\n      begin: hljs.C_NUMBER_RE\n    }],\n    relevance: 0\n  };\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      keyword: 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, {\n      beginKeywords: 'include',\n      end: '$',\n      keywords: {\n        keyword: 'include'\n      },\n      contains: [hljs.inherit(STRINGS, {\n        className: 'string'\n      }), {\n        className: 'string',\n        begin: '<',\n        end: '>',\n        illegal: '\\\\n'\n      }]\n    }, STRINGS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  var REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n  var KEYWORD = {\n    className: 'keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n  var LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n  var CELL_PROPERTY = {\n    className: 'params',\n    relevance: 0,\n    begin: '<',\n    end: '>',\n    contains: [NUMBERS, REFERENCE]\n  };\n  var NODE = {\n    className: 'title.class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@-]*(?=\\s\\{)/\n  };\n  var ROOT_NODE = {\n    className: 'title.class',\n    begin: /^\\/(?=\\s*\\{)/,\n    relevance: 10\n  }; // TODO: `attribute` might be the right scope here, unsure\n  // I'm not sure if all these key names have semantic meaning or not\n\n  var ATTR_NO_VALUE = {\n    match: /[a-z][a-z-,]+(?=;)/,\n    relevance: 0,\n    scope: \"attr\"\n  };\n  var ATTR = {\n    relevance: 0,\n    match: [/[a-z][a-z-,]+/, /\\s*/, /=/],\n    scope: {\n      1: \"attr\",\n      3: \"operator\"\n    }\n  };\n  var PUNC = {\n    scope: \"punctuation\",\n    relevance: 0,\n    // `};` combined is just to avoid tons of useless punctuation nodes\n    match: /\\};|[;{}]/\n  };\n  return {\n    name: 'Device Tree',\n    contains: [ROOT_NODE, REFERENCE, KEYWORD, LABEL, NODE, ATTR, ATTR_NO_VALUE, CELL_PROPERTY, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS, PREPROCESSOR, PUNC, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: \"\"\n    }]\n  };\n}\n\nmodule.exports = dts;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/dts.js"],"names":["dts","hljs","STRINGS","className","variants","inherit","QUOTE_STRING_MODE","begin","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","relevance","PREPROCESSOR","keywords","keyword","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","REFERENCE","KEYWORD","LABEL","CELL_PROPERTY","NODE","ROOT_NODE","ATTR_NO_VALUE","match","scope","ATTR","PUNC","name","IDENT_RE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Device Tree\nDescription: *.dts files used in the Linux kernel\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\nWebsite: https://elinux.org/Device_Tree_Reference\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: '((u8?|U)|L)?\"'\n      }),\n      {\n        begin: '(u8?|U)?R\"',\n        end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.',\n        end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      keyword: 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      {\n        beginKeywords: 'include',\n        end: '$',\n        keywords: {\n          keyword: 'include'\n        },\n        contains: [\n          hljs.inherit(STRINGS, {\n            className: 'string'\n          }),\n          {\n            className: 'string',\n            begin: '<',\n            end: '>',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n\n  const KEYWORD = {\n    className: 'keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n\n  const LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n\n  const CELL_PROPERTY = {\n    className: 'params',\n    relevance: 0,\n    begin: '<',\n    end: '>',\n    contains: [\n      NUMBERS,\n      REFERENCE\n    ]\n  };\n\n  const NODE = {\n    className: 'title.class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@-]*(?=\\s\\{)/\n  };\n\n  const ROOT_NODE = {\n    className: 'title.class',\n    begin: /^\\/(?=\\s*\\{)/,\n    relevance: 10\n  };\n\n  // TODO: `attribute` might be the right scope here, unsure\n  // I'm not sure if all these key names have semantic meaning or not\n  const ATTR_NO_VALUE = {\n    match: /[a-z][a-z-,]+(?=;)/,\n    relevance: 0,\n    scope: \"attr\"\n  };\n  const ATTR = {\n    relevance: 0,\n    match: [\n      /[a-z][a-z-,]+/,\n      /\\s*/,\n      /=/\n    ],\n    scope: {\n      1: \"attr\",\n      3: \"operator\"\n    }\n  };\n\n  const PUNC = {\n    scope: \"punctuation\",\n    relevance: 0,\n    // `};` combined is just to avoid tons of useless punctuation nodes\n    match: /\\};|[;{}]/\n  };\n\n  return {\n    name: 'Device Tree',\n    contains: [\n      ROOT_NODE,\n      REFERENCE,\n      KEYWORD,\n      LABEL,\n      NODE,\n      ATTR,\n      ATTR_NO_VALUE,\n      CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      PUNC,\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: \"\"\n      }\n    ]\n  };\n}\n\nmodule.exports = dts;\n"]},"metadata":{},"sourceType":"script"}