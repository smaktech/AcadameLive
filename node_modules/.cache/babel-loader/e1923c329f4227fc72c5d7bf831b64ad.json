{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//page for all users listing!\nimport React,{useState,useEffect,forwardRef,useRef}from'react';import{InputGroup,FormControl,Table,Form}from'react-bootstrap';import ModalHeader from'react-bootstrap/ModalHeader';import{useSelector}from'react-redux';import{Link,useNavigate,Redirect}from'react-router-dom';import{updatePassword,changeName,uploadImage}from'../../api/Profile/Profile';import Loader from\"react-loader-spinner\";import{createTopic,editTopic,getTopicById}from'../../api/Topic/Topic';import CircularProgress from'@mui/material/CircularProgress';import Card from'@mui/material/Card';import CardContent from'@mui/material/CardContent';import{Button}from'@mui/material';import{Modal as BootstrapModal}from'react-bootstrap';import Grid from'@mui/material/Grid';import Modal from'@mui/material/Modal';import Box from'@mui/material/Box';import{baseUrl,modalStyle}from'src/config';import{useParams}from'react-router-dom';import{createSubTopic,editSubTopic,getSubTopicById}from'src/api/SubTopic/SubTopic';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddEditSubTopic(props){// const subTopicID = props.match.params.subTopicId;\n// const subTopicStatus = props.match.params.subTopicStatus;\nvar _useParams=useParams(),subTopicID=_useParams.subTopicID,subTopicStatus=_useParams.subTopicStatus,topicID=_useParams.topicID;// console.log(props)\n// const subjectStatus = props.match.params.subjectStatus;\nvar _useState=useState(subTopicID?\"edit\":\"add\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];//setting subjects data into a variable\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),subTopic=_useState4[0],setSubTopic=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modalVisible=_useState6[0],setModalVisible=_useState6[1];var navigate=useNavigate();//sets and display the line in the success modal!\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),modalLine1=_useState8[0],setModalLine1=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),modalLine2=_useState10[0],setModalLine2=_useState10[1];//sets the loader for add subject Button\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),addLoader=_useState12[0],setAddLoader=_useState12[1];//sets the loader for edit subject Button\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),editLoader=_useState14[0],setEditLoader=_useState14[1];//sets the loader for edit subject Button\nvar _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),editFormLoader=_useState16[0],setEditFormLoader=_useState16[1];//sets the name of the subTopic user want to add\nvar _useState17=useState(),_useState18=_slicedToArray(_useState17,2),subTopicName=_useState18[0],setSubTopicName=_useState18[1];//sets subTopic description user want to add\nvar _useState19=useState(),_useState20=_slicedToArray(_useState19,2),subTopicDescription=_useState20[0],setSubTopicDescription=_useState20[1];//sets mock test link user want to add\nvar _useState21=useState(),_useState22=_slicedToArray(_useState21,2),mockTestLink=_useState22[0],setMockTestLink=_useState22[1];//sets exma test link user want to add\nvar _useState23=useState(),_useState24=_slicedToArray(_useState23,2),examTestLink=_useState24[0],setExamTestLink=_useState24[1];//sets link type user want to add\nvar _useState25=useState(),_useState26=_slicedToArray(_useState25,2),linkType=_useState26[0],setLinkType=_useState26[1];//sets vide link user want to add\nvar _useState27=useState(),_useState28=_slicedToArray(_useState27,2),linkString=_useState28[0],setLinkString=_useState28[1];//sets subTopic video user want to add\nvar _useState29=useState(),_useState30=_slicedToArray(_useState29,2),subTopicVideo=_useState30[0],setSubTopicVideo=_useState30[1];//sets subTopic video user want to add\nvar _useState31=useState(),_useState32=_slicedToArray(_useState31,2),subTopicPpt=_useState32[0],setSubTopicPpt=_useState32[1];//sets subTopic video user want to add\nvar _useState33=useState(),_useState34=_slicedToArray(_useState33,2),subTopicZip=_useState34[0],setSubTopicZip=_useState34[1];var _useState35=useState(),_useState36=_slicedToArray(_useState35,2),examID=_useState36[0],setExamID=_useState36[1];var _useState37=useState(),_useState38=_slicedToArray(_useState37,2),examLink=_useState38[0],setExamLink=_useState38[1];//sets subTopic video user want to add\nvar _useState39=useState(null),_useState40=_slicedToArray(_useState39,2),videoPreview=_useState40[0],setVideoPreview=_useState40[1];//referance variable for video file choose\nvar chooseTopicVideoRef=useRef();// sets varialbe for video status\nvar _useState41=useState(false),_useState42=_slicedToArray(_useState41,2),videoStatus=_useState42[0],setVideoStatus=_useState42[1];//shows the error when users try to add subject without name\nvar _useState43=useState(false),_useState44=_slicedToArray(_useState43,2),errorMessage=_useState44[0],setErrorMessage=_useState44[1];var _useState45=useState(false),_useState46=_slicedToArray(_useState45,2),error=_useState46[0],showError=_useState46[1];//updating mode state on change of subject id\n// useEffect(() => {\n// }, [subTopicID])\nuseEffect(function(){setMode(subTopicID?\"edit\":\"add\");setEditFormLoader(true);getSubTopicById(subTopicID).then(function(res){console.log('res',res);if(res.status){var _res$exam,_res$exam2;//setting the fetched Topics by id into state variable\nconsole.log(res);setSubTopic(res.subTopic);setSubTopicName(res.subTopic.name);setSubTopicDescription(res.subTopic.description);setExamID(res===null||res===void 0?void 0:(_res$exam=res.exam)===null||_res$exam===void 0?void 0:_res$exam._id);setExamLink(res===null||res===void 0?void 0:(_res$exam2=res.exam)===null||_res$exam2===void 0?void 0:_res$exam2.link);// setMockTestLink(res.subTopic.mockTestLink)\n// setExamTestLink(res.subTopic.examTestLink)\n// setLinkType(res.subTopic.videoLink.linkType)\n// setVideoStatus(res.subTopic.videoLink.linkType)\n// setLinkString(res.subTopic.videoLink.linkString)\n// setSubTopicPpt()\n}setEditFormLoader(false);}).catch(function(err){console.error(err);});},[subTopicID]);//edit the details  of the existing subTopic\nfunction editTopicDetails(){setModalVisible(false);setEditLoader(true);showError(false);if(subTopicID!=''){editSubTopic(subTopicID,subTopicName,subTopicDescription,subTopicZip,subTopicPpt,examID,subTopicStatus).then(function(res){console.log(res);if(res.status){setEditLoader(false);setModalLine1('Topic details has been');setModalLine2('updated successfully');setModalVisible(true);}else{setEditLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.error(err);setEditLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill all the subTopic details');}}//adds new subTopic \nfunction addNewTopic(){setModalVisible(false);setAddLoader(true);showError(false);if(subTopicName&&subTopicDescription){createSubTopic(topicID,subTopicName,subTopicDescription,subTopicZip,subTopicPpt,'active').then(function(res){console.log(res);if(res.status){setAddLoader(false);setModalLine1('New Sub Topic Added');setModalLine2('Successfully');setModalVisible(true);}else{setAddLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.log(err);setAddLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the Topic details');}}// on change video handler\nvar onChangePptHandler=function onChangePptHandler(e){// setVideoPreview(url)\nsetSubTopicPpt(e.target.files[0]);};var onChangeZipHandler=function onChangeZipHandler(e){// setVideoPreview(url)\nsetSubTopicZip(e.target.files[0]);};// function to reset\nvar reSetForm=function reSetForm(){setSubTopicName(\"\");setSubTopicDescription(\"\");setMockTestLink(\"\");setExamTestLink(\"\");setLinkType(\"\");setSubTopicVideo(\"\");setSubTopicPpt(\"\");setSubTopicZip(\"\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mt-3 txt-5282F0 fw-bold\",children:\"Sub Topics Management\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"mt-4\"}),editFormLoader?/*#__PURE__*/_jsx(\"div\",{className:\"w-100 py-2 px-6 me-3\",style:{display:'flex',height:'100vh',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\" align-items-center\",children:[/*#__PURE__*/_jsx(Card,{className:\"w-100\",children:/*#__PURE__*/_jsx(CardContent,{className:\"pageHeaderCard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[error?/*#__PURE__*/_jsx(\"div\",{class:\"row pt-2 \",style:{margin:5},children:/*#__PURE__*/_jsx(\"div\",{class:\"col-md-5  col-sm-12 clr-danger-100\",children:/*#__PURE__*/_jsx(\"div\",{class:\"text-center\",children:errorMessage})})}):/*#__PURE__*/_jsx(_Fragment,{children:\" \"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-6 col-12\",children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Sub Topic Name\"}),/*#__PURE__*/_jsx(Form.Control,{value:subTopicName,type:\"text\",placeholder:\"Enter Sub Topic Name\",onChange:function onChange(e){return setSubTopicName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Sub Topic Description\"}),/*#__PURE__*/_jsx(Form.Control,{value:subTopicDescription,placeholder:\"Enter Sub Topic Description\",as:\"textarea\",rows:3,onChange:function onChange(e){return setSubTopicDescription(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Sub Topic Ppt File  \",/*#__PURE__*/_jsx(\"a\",{href:baseUrl+\"/\"+subTopic.file,style:{marginLeft:10},target:\"_blank\",children:\"View File\"}),\" \"]}),/*#__PURE__*/_jsx(Form.Control,{ref:function ref(_ref){return chooseTopicVideoRef=_ref;},type:\"file\",placeholder:\"choose Sub Topic PPT\",onChange:function onChange(e){return onChangePptHandler(e);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Sub Topic Exam Zip \",/*#__PURE__*/_jsx(\"a\",{href:baseUrl+\"/\"+examLink,style:{marginLeft:10},target:\"_blank\",children:\"View Exam\"}),\" \"]}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return onChangeZipHandler(e);}})]})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:mode==\"edit\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return navigate('/dashboard/subTopics/addSubTopic/'+topicID);},variant:\"outlined\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-3 col-12 mt-3 \",children:editLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){editTopicDetails();},children:\"Save Changes\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:addLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return addNewTopic();},children:\"Add Sub Topic\"})})})]})}),/*#__PURE__*/_jsx(Modal,{open:modalVisible,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,onClose:function onClose(){setModalVisible(false);},children:/*#__PURE__*/_jsx(Box,{sx:modalStyle,children:/*#__PURE__*/_jsxs(BootstrapModal.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center txt-5282F0 my-4\",style:{alignItems:'center',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(\"img\",{src:'/Assets/modalPhoto.png'}),/*#__PURE__*/_jsx(\"h3\",{children:modalLine1}),/*#__PURE__*/_jsx(\"h3\",{className:\"modalLowerText\",children:modalLine2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4 pb-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",style:{marginRight:10,marginTop:10},onClick:function onClick(){mode=='add'?/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm())}):/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm(),navigate('/dashboard/subTopics/addSubTopic/'+topicID))});},children:\"Add New Sub Topic \"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",style:{marginRight:10,marginTop:10},onClick:function onClick(){return navigate('/dashboard/topics/subTopic/'+topicID);},children:\"Back To Sub Topics\"})]})]})})})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/subTopic/SubTopicAddEdit.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","createTopic","editTopic","getTopicById","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","baseUrl","modalStyle","useParams","createSubTopic","editSubTopic","getSubTopicById","AddEditSubTopic","props","subTopicID","subTopicStatus","topicID","mode","setMode","subTopic","setSubTopic","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","subTopicName","setSubTopicName","subTopicDescription","setSubTopicDescription","mockTestLink","setMockTestLink","examTestLink","setExamTestLink","linkType","setLinkType","linkString","setLinkString","subTopicVideo","setSubTopicVideo","subTopicPpt","setSubTopicPpt","subTopicZip","setSubTopicZip","examID","setExamID","examLink","setExamLink","videoPreview","setVideoPreview","chooseTopicVideoRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","then","res","console","log","status","name","description","exam","_id","link","catch","err","editTopicDetails","addNewTopic","onChangePptHandler","e","target","files","onChangeZipHandler","reSetForm","display","height","justifyContent","alignItems","margin","value","file","marginLeft","ref","flexDirection","marginRight","marginTop"],"mappings":"gKAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,CAAiDC,MAAjD,KAA+D,OAA/D,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,KAAlC,CAAyCC,IAAzC,KAAqD,iBAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,QAA5B,KAA4C,kBAA5C,CACA,OAASC,cAAT,CAAyBC,UAAzB,CAAqCC,WAArC,KAAwD,2BAAxD,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,YAAjC,KAAqD,uBAArD,CAGA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAASC,MAAT,KAAuB,eAAvB,CACA,OAASC,KAAK,GAAIC,CAAAA,cAAlB,KAAwC,iBAAxC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOF,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOG,CAAAA,GAAP,KAAgB,mBAAhB,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,YAApC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,cAAT,CAAyBC,YAAzB,CAAuCC,eAAvC,KAA8D,2BAA9D,C,6IACA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC3C;AACA;AACA,eAAgDL,SAAS,EAAzD,CAAQM,UAAR,YAAQA,UAAR,CAAoBC,cAApB,YAAoBA,cAApB,CAAoCC,OAApC,YAAoCA,OAApC,CACA;AACA;AACA,cAAwBtC,QAAQ,CAACoC,UAAU,CAAG,MAAH,CAAY,KAAvB,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eAEA;AACA,eAAgCxC,QAAQ,CAAC,EAAD,CAAxC,yCAAOyC,QAAP,eAAiBC,WAAjB,eAEA,eAAwC1C,QAAQ,CAAC,KAAD,CAAhD,yCAAO2C,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,QAAQ,CAAGlC,WAAW,EAA5B,CAEA;AACA,eAAoCX,QAAQ,CAAC,EAAD,CAA5C,yCAAO8C,UAAP,eAAmBC,aAAnB,eACA,eAAoC/C,QAAQ,CAAC,EAAD,CAA5C,0CAAOgD,UAAP,gBAAmBC,aAAnB,gBAEA;AACA,gBAAkCjD,QAAQ,CAAC,KAAD,CAA1C,2CAAOkD,SAAP,gBAAkBC,YAAlB,gBAEA;AACA,gBAAoCnD,QAAQ,CAAC,KAAD,CAA5C,2CAAOoD,UAAP,gBAAmBC,aAAnB,gBAEA;AACA,gBAA4CrD,QAAQ,CAAC,KAAD,CAApD,2CAAOsD,cAAP,gBAAuBC,iBAAvB,gBAEA;AACA,gBAAwCvD,QAAQ,EAAhD,2CAAOwD,YAAP,gBAAqBC,eAArB,gBAEA;AACA,gBAAsDzD,QAAQ,EAA9D,2CAAO0D,mBAAP,gBAA4BC,sBAA5B,gBAEA;AACA,gBAAwC3D,QAAQ,EAAhD,2CAAO4D,YAAP,gBAAqBC,eAArB,gBAEA;AACA,gBAAwC7D,QAAQ,EAAhD,2CAAO8D,YAAP,gBAAqBC,eAArB,gBAEA;AACA,gBAAgC/D,QAAQ,EAAxC,2CAAOgE,QAAP,gBAAiBC,WAAjB,gBAEA;AACA,gBAAoCjE,QAAQ,EAA5C,2CAAOkE,UAAP,gBAAmBC,aAAnB,gBAEA;AACA,gBAA0CnE,QAAQ,EAAlD,2CAAOoE,aAAP,gBAAsBC,gBAAtB,gBAEA;AACA,gBAAsCrE,QAAQ,EAA9C,2CAAOsE,WAAP,gBAAoBC,cAApB,gBAEA;AACA,gBAAsCvE,QAAQ,EAA9C,2CAAOwE,WAAP,gBAAoBC,cAApB,gBACA,gBAA4BzE,QAAQ,EAApC,2CAAO0E,MAAP,gBAAeC,SAAf,gBACA,gBAAgC3E,QAAQ,EAAxC,2CAAO4E,QAAP,gBAAiBC,WAAjB,gBACA;AACA,gBAAwC7E,QAAQ,CAAC,IAAD,CAAhD,2CAAO8E,YAAP,gBAAqBC,eAArB,gBAEA;AACA,GAAIC,CAAAA,mBAAmB,CAAG7E,MAAM,EAAhC,CAEA;AACA,gBAAsCH,QAAQ,CAAC,KAAD,CAA9C,2CAAOiF,WAAP,gBAAoBC,cAApB,gBACA;AACA,gBAAwClF,QAAQ,CAAC,KAAD,CAAhD,2CAAOmF,YAAP,gBAAqBC,eAArB,gBACA,gBAA2BpF,QAAQ,CAAC,KAAD,CAAnC,2CAAOqF,KAAP,gBAAcC,SAAd,gBAEA;AACA;AACA;AAEArF,SAAS,CAAC,UAAM,CAEZuC,OAAO,CAACJ,UAAU,CAAG,MAAH,CAAY,KAAvB,CAAP,CACAmB,iBAAiB,CAAC,IAAD,CAAjB,CACAtB,eAAe,CAACG,UAAD,CAAf,CAA4BmD,IAA5B,CAAiC,SAACC,GAAD,CAAS,CACtCC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,GAAnB,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,0BACZ;AACAF,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA9C,WAAW,CAAC8C,GAAG,CAAC/C,QAAL,CAAX,CACAgB,eAAe,CAAC+B,GAAG,CAAC/C,QAAJ,CAAamD,IAAd,CAAf,CACAjC,sBAAsB,CAAC6B,GAAG,CAAC/C,QAAJ,CAAaoD,WAAd,CAAtB,CACAlB,SAAS,CAACa,GAAD,SAACA,GAAD,4BAACA,GAAG,CAAEM,IAAN,oCAAC,UAAWC,GAAZ,CAAT,CACAlB,WAAW,CAACW,GAAD,SAACA,GAAD,6BAACA,GAAG,CAAEM,IAAN,qCAAC,WAAWE,IAAZ,CAAX,CACA;AACA;AACA;AACA;AACA;AACA;AACH,CACDzC,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAlBD,EAmBK0C,KAnBL,CAmBW,SAACC,GAAD,CAAS,CACZT,OAAO,CAACJ,KAAR,CAAca,GAAd,EACH,CArBL,EAuBH,CA3BQ,CA2BN,CAAC9D,UAAD,CA3BM,CAAT,CA6BA;AACA,QAAS+D,CAAAA,gBAAT,EAA4B,CACxBvD,eAAe,CAAC,KAAD,CAAf,CACAS,aAAa,CAAC,IAAD,CAAb,CACAiC,SAAS,CAAC,KAAD,CAAT,CACA,GAAIlD,UAAU,EAAI,EAAlB,CAAsB,CAClBJ,YAAY,CAACI,UAAD,CAAaoB,YAAb,CAA2BE,mBAA3B,CAAgDc,WAAhD,CAA6DF,WAA7D,CAA0EI,MAA1E,CAAkFrC,cAAlF,CAAZ,CACKkD,IADL,CACU,SAACC,GAAD,CAAS,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZtC,aAAa,CAAC,KAAD,CAAb,CACAN,aAAa,CAAC,wBAAD,CAAb,CACAE,aAAa,CAAC,sBAAD,CAAb,CACAL,eAAe,CAAC,IAAD,CAAf,CACH,CALD,IAMK,CACDS,aAAa,CAAC,KAAD,CAAb,CACAiC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CAEJ,CAfL,EAgBKa,KAhBL,CAgBW,SAACC,GAAD,CAAS,CACZT,OAAO,CAACJ,KAAR,CAAca,GAAd,EACA7C,aAAa,CAAC,KAAD,CAAb,CACAiC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CArBL,EAsBH,CAvBD,IAwBK,CACDjC,YAAY,CAAC,KAAD,CAAZ,CACAmC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,sCAAD,CAAf,CACH,CAEJ,CAED;AACA,QAASgB,CAAAA,WAAT,EAAuB,CACnBxD,eAAe,CAAC,KAAD,CAAf,CACAO,YAAY,CAAC,IAAD,CAAZ,CACAmC,SAAS,CAAC,KAAD,CAAT,CACA,GAAI9B,YAAY,EAAIE,mBAApB,CAAyC,CACrC3B,cAAc,CAACO,OAAD,CAAUkB,YAAV,CAAwBE,mBAAxB,CAA6Cc,WAA7C,CAA0DF,WAA1D,CAAuE,QAAvE,CAAd,CACKiB,IADL,CACU,SAACC,GAAD,CAAS,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZxC,YAAY,CAAC,KAAD,CAAZ,CACAJ,aAAa,CAAC,qBAAD,CAAb,CACAE,aAAa,CAAC,cAAD,CAAb,CACAL,eAAe,CAAC,IAAD,CAAf,CACH,CALD,IAMK,CACDO,YAAY,CAAC,KAAD,CAAZ,CACAmC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CACJ,CAdL,EAeKa,KAfL,CAeW,SAACC,GAAD,CAAS,CACZT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,EACA/C,YAAY,CAAC,KAAD,CAAZ,CACAmC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CApBL,EAqBH,CAtBD,IAuBK,CACDjC,YAAY,CAAC,KAAD,CAAZ,CACAmC,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,+BAAD,CAAf,CACH,CACJ,CAED;AACA,GAAMiB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,CAAD,CAAO,CAE9B;AACA/B,cAAc,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAd,CACH,CAJD,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACH,CAAD,CAAO,CAE9B;AACA7B,cAAc,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAd,CACH,CAJD,CAMA;AACA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBjD,eAAe,CAAC,EAAD,CAAf,CACAE,sBAAsB,CAAC,EAAD,CAAtB,CACAE,eAAe,CAAC,EAAD,CAAf,CACAE,eAAe,CAAC,EAAD,CAAf,CACAE,WAAW,CAAC,EAAD,CAAX,CACAI,gBAAgB,CAAC,EAAD,CAAhB,CACAE,cAAc,CAAC,EAAD,CAAd,CACAE,cAAc,CAAC,EAAD,CAAd,CACH,CATD,CAWA,mBACI,wCAII,WAAI,SAAS,CAAC,yBAAd,mCAJJ,cAKI,WAAI,SAAS,CAAC,MAAd,EALJ,CAMKnB,cAAc,cACX,YAAK,SAAS,CAAC,sBAAf,CAAsC,KAAK,CAAE,CAAEqD,OAAO,CAAE,MAAX,CAAmBC,MAAM,CAAE,OAA3B,CAAoCC,cAAc,CAAE,QAApD,CAA8DC,UAAU,CAAE,QAA1E,CAA7C,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADW,cAKX,sCACI,aAAK,SAAS,CAAC,qBAAf,wBACI,KAAC,IAAD,EAAM,SAAS,CAAC,OAAhB,uBACI,KAAC,WAAD,EAAa,SAAS,CAAC,gBAAvB,uBACI,aAAK,SAAS,CAAC,KAAf,WAESzB,KAAD,cACI,YAAK,KAAK,CAAC,WAAX,CAAuB,KAAK,CAAE,CAAE0B,MAAM,CAAE,CAAV,CAA9B,uBACI,YAAK,KAAK,CAAC,oCAAX,uBACI,YAAK,KAAK,CAAC,aAAX,UACK5B,YADL,EADJ,EADJ,EADJ,cAUI,8BAZZ,cAcI,YAAK,SAAS,CAAC,0BAAf,uBAEI,MAAC,IAAD,yBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,2BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,6BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE3B,YAArB,CAAmC,IAAI,CAAC,MAAxC,CAA+C,WAAW,CAAC,sBAA3D,CAAkF,QAAQ,CAAE,kBAAC8C,CAAD,QAAO7C,CAAAA,eAAe,CAAC6C,CAAC,CAACC,MAAF,CAASS,KAAV,CAAtB,EAA5F,EAFJ,GADJ,cAKI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,oCADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAEtD,mBAArB,CAA0C,WAAW,CAAC,6BAAtD,CAAoF,EAAE,CAAC,UAAvF,CAAkG,IAAI,CAAE,CAAxG,CAA2G,QAAQ,CAAE,kBAAC4C,CAAD,QAAO3C,CAAAA,sBAAsB,CAAC2C,CAAC,CAACC,MAAF,CAASS,KAAV,CAA7B,EAArH,EAFJ,GALJ,cASI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,MAAC,IAAD,CAAM,KAAN,gDAAgC,UAAG,IAAI,CAAEpF,OAAO,CAAG,GAAV,CAAgBa,QAAQ,CAACwE,IAAlC,CAAwC,KAAK,CAAE,CAAEC,UAAU,CAAE,EAAd,CAA/C,CAAmE,MAAM,CAAC,QAA1E,uBAAhC,OADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,GAAG,CAAE,aAAAC,IAAG,QAAInC,CAAAA,mBAAmB,CAAGmC,IAA1B,EAAtB,CAAqD,IAAI,CAAC,MAA1D,CAAiE,WAAW,CAAC,sBAA7E,CAAoG,QAAQ,CAAE,kBAACb,CAAD,QAAOD,CAAAA,kBAAkB,CAACC,CAAD,CAAzB,EAA9G,EAFJ,GATJ,cAaI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,MAAC,IAAD,CAAM,KAAN,+CAA+B,UAAG,IAAI,CAAE1E,OAAO,CAAG,GAAV,CAAgBgD,QAAzB,CAAmC,KAAK,CAAE,CAAEsC,UAAU,CAAE,EAAd,CAA1C,CAA8D,MAAM,CAAC,QAArE,uBAA/B,OADJ,cAGI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,2BAAtC,CAAkE,QAAQ,CAAE,kBAACZ,CAAD,QAAOG,CAAAA,kBAAkB,CAACH,CAAD,CAAzB,EAA5E,EAHJ,GAbJ,GAFJ,EAdJ,GADJ,EADJ,EADJ,cAsGI,YAAK,SAAS,CAAC,KAAf,UAEK/D,IAAI,EAAI,MAAR,cACG,wCACI,YAAK,SAAS,CAAC,+BAAf,uBAEI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMM,CAAAA,QAAQ,CAAC,oCAAsCP,OAAvC,CAAd,EAAjB,CAAgF,OAAO,CAAC,UAAxF,oBAFJ,EADJ,cAKI,YAAK,SAAS,CAAC,gCAAf,UACKc,UAAU,cACP,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADO,cAKP,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,kBAAM,CAAE+C,gBAAgB,GAAI,CAAjE,0BANR,EALJ,GADH,cAkBG,YAAK,SAAS,CAAC,+BAAf,UACKjD,SAAS,cACN,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADM,cAKN,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CACI,OAAO,CAAE,yBAAMkD,CAAAA,WAAW,EAAjB,EADb,2BANR,EApBR,EAtGJ,GADJ,EAXR,cAwJI,KAAC,KAAD,EACI,IAAI,CAAEzD,YADV,CAEI,IAAI,CAAC,IAFT,CAGI,kBAAgB,+BAHpB,CAII,QAAQ,KAJZ,CAKI,OAAO,CAAE,kBAAM,CAAEC,eAAe,CAAC,KAAD,CAAf,CAAwB,CAL7C,uBAOI,KAAC,GAAD,EAAK,EAAE,CAAEf,UAAT,uBACI,MAAC,cAAD,CAAgB,IAAhB,yBACI,aAAK,SAAS,CAAC,6BAAf,CAA6C,KAAK,CAAE,CAAEiF,UAAU,CAAE,QAAd,CAAwBH,OAAO,CAAE,MAAjC,CAAyCS,aAAa,CAAE,QAAxD,CAApD,wBACI,YAAK,GAAG,CAAE,wBAAV,EADJ,cAEI,oBAAKtE,UAAL,EAFJ,cAGI,WAAI,SAAS,CAAC,gBAAd,UAAgCE,UAAhC,EAHJ,GADJ,cAMI,aAAK,SAAS,CAAC,uBAAf,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAAEqE,WAAW,CAAE,EAAf,CAAmBC,SAAS,CAAE,EAA9B,CAAlC,CACI,OAAO,CAAE,kBAAM,CAAE/E,IAAI,EAAI,KAAR,cAAiB,0BAAGK,eAAe,CAAC,KAAD,CAAf,CAAwB8D,SAAS,EAApC,GAAjB,cAAgE,0BAAG9D,eAAe,CAAC,KAAD,CAAf,CAAwB8D,SAAS,EAAjC,CAAqC7D,QAAQ,CAAC,oCAAsCP,OAAvC,CAAhD,GAAhE,CAAsK,CAD3L,gCADJ,cAKI,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAAE+E,WAAW,CAAE,EAAf,CAAmBC,SAAS,CAAE,EAA9B,CAAlC,CACI,OAAO,CAAE,yBAAMzE,CAAAA,QAAQ,CAAC,8BAAgCP,OAAjC,CAAd,EADb,gCALJ,GANJ,GADJ,EAPJ,EAxJJ,GADJ,CAyLH","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { baseUrl, modalStyle } from 'src/config'\nimport { useParams } from 'react-router-dom'\nimport { createSubTopic, editSubTopic, getSubTopicById } from 'src/api/SubTopic/SubTopic'\nexport default function AddEditSubTopic(props) {\n    // const subTopicID = props.match.params.subTopicId;\n    // const subTopicStatus = props.match.params.subTopicStatus;\n    const { subTopicID, subTopicStatus, topicID } = useParams()\n    // console.log(props)\n    // const subjectStatus = props.match.params.subjectStatus;\n    const [mode, setMode] = useState(subTopicID ? \"edit\" : \"add\")\n\n    //setting subjects data into a variable\n    const [subTopic, setSubTopic] = useState({});\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add subject Button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the subTopic user want to add\n    const [subTopicName, setSubTopicName] = useState();\n\n    //sets subTopic description user want to add\n    const [subTopicDescription, setSubTopicDescription] = useState()\n\n    //sets mock test link user want to add\n    const [mockTestLink, setMockTestLink] = useState()\n\n    //sets exma test link user want to add\n    const [examTestLink, setExamTestLink] = useState()\n\n    //sets link type user want to add\n    const [linkType, setLinkType] = useState()\n\n    //sets vide link user want to add\n    const [linkString, setLinkString] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicVideo, setSubTopicVideo] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicPpt, setSubTopicPpt] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicZip, setSubTopicZip] = useState()\n    const [examID, setExamID] = useState()\n    const [examLink, setExamLink] = useState()\n    //sets subTopic video user want to add\n    const [videoPreview, setVideoPreview] = useState(null);\n\n    //referance variable for video file choose\n    let chooseTopicVideoRef = useRef()\n\n    // sets varialbe for video status\n    const [videoStatus, setVideoStatus] = useState(false)\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    //updating mode state on change of subject id\n    // useEffect(() => {\n    // }, [subTopicID])\n\n    useEffect(() => {\n\n        setMode(subTopicID ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getSubTopicById(subTopicID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Topics by id into state variable\n                console.log(res)\n                setSubTopic(res.subTopic);\n                setSubTopicName(res.subTopic.name)\n                setSubTopicDescription(res.subTopic.description)\n                setExamID(res?.exam?._id)\n                setExamLink(res?.exam?.link)\n                // setMockTestLink(res.subTopic.mockTestLink)\n                // setExamTestLink(res.subTopic.examTestLink)\n                // setLinkType(res.subTopic.videoLink.linkType)\n                // setVideoStatus(res.subTopic.videoLink.linkType)\n                // setLinkString(res.subTopic.videoLink.linkString)\n                // setSubTopicPpt()\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [subTopicID])\n\n    //edit the details  of the existing subTopic\n    function editTopicDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (subTopicID != '') {\n            editSubTopic(subTopicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, examID, subTopicStatus)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Topic details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill all the subTopic details');\n        }\n\n    }\n\n    //adds new subTopic \n    function addNewTopic() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (subTopicName && subTopicDescription) {\n            createSubTopic(topicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, 'active')\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Sub Topic Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Topic details');\n        }\n    }\n\n    // on change video handler\n    const onChangePptHandler = (e) => {\n\n        // setVideoPreview(url)\n        setSubTopicPpt(e.target.files[0])\n    }\n    const onChangeZipHandler = (e) => {\n\n        // setVideoPreview(url)\n        setSubTopicZip(e.target.files[0])\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setSubTopicName(\"\")\n        setSubTopicDescription(\"\")\n        setMockTestLink(\"\")\n        setExamTestLink(\"\")\n        setLinkType(\"\")\n        setSubTopicVideo(\"\")\n        setSubTopicPpt(\"\")\n        setSubTopicZip(\"\")\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Sub Topics Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n\n                                        <Form>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Sub Topic Name</Form.Label>\n                                                <Form.Control value={subTopicName} type=\"text\" placeholder=\"Enter Sub Topic Name\" onChange={(e) => setSubTopicName(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Description</Form.Label>\n                                                <Form.Control value={subTopicDescription} placeholder=\"Enter Sub Topic Description\" as=\"textarea\" rows={3} onChange={(e) => setSubTopicDescription(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Ppt File  <a href={baseUrl + \"/\" + subTopic.file} style={{ marginLeft: 10 }} target=\"_blank\">View File</a> </Form.Label>\n                                                <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Sub Topic PPT\" onChange={(e) => onChangePptHandler(e)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Exam Zip <a href={baseUrl + \"/\" + examLink} style={{ marginLeft: 10 }} target=\"_blank\">View Exam</a> </Form.Label>\n\n                                                <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => onChangeZipHandler(e)} />\n                                            </Form.Group>\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Mock Test Link </Form.Label>\n                                                <Form.Control value={mockTestLink} type=\"text\" placeholder=\"Enter Mock Test Link\" onChange={(e) => setMockTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Exam Test Link</Form.Label>\n                                                <Form.Control value={examTestLink} type=\"text\" placeholder=\"Enter Exam Test Link\" onChange={(e) => setExamTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Link Type</Form.Label>\n                                                <Form.Select value={linkType} onChange={(e) => setLinkType(e.target.value)} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    <option value='upload'>Upload</option>\n                                                    <option value='link'>Link</option>\n                                                    <option value='iframe'>iFrame</option>\n                                                </Form.Select>\n                                            </Form.Group> */}\n                                            {/* {linkType != 'upload' ? (\n                                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>Topic Video Link </Form.Label>\n                                                    <Form.Control value={linkString} required type=\"text\" placeholder=\"Enter Topic Video Link\" onChange={(e) => setLinkString(e.target.value)} />\n                                                </Form.Group>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Topic Video</Form.Label>\n                                                        {mode == 'edit' ? (\n                                                            videoStatus == \"upload\" ? (\n                                                                <div className=\"col-6 col-lg-6 d-flex\">\n                                                                    <img src=\"/Assets/vector.jpg\" className=\"btn w-50 h-100\" />\n                                                                    <div>\n                                                                        <Button   variant=\"text\" type='Button' className='text-danger btn fs-1' onClick={() => setVideoStatus(null)}>&times;</Button>\n                                                                    </div>\n                                                                </div>\n                                                            ) : (\n                                                                <>\n                                                                    <div className=\"col-6 col-lg-6\">\n                                                                        <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                    </div>\n                                                                    <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangePptHandler(e)} style={{ visibility: 'hidden' }} />\n                                                                </>\n                                                            )\n\n                                                        ) : (\n\n                                                            <>\n                                                                <div className=\"col-6 col-lg-6\">\n                                                                    <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                </div>\n                                                                <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangePptHandler(e)} style={{ visibility: 'hidden' }} />\n                                                            </>\n                                                        )}\n                                                    </Form.Group>\n                                                </>\n                                            )} */}\n                                        </Form>\n\n\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {/* <Button variant=\"outlined\"  onClick={() => history.goBack()}>Cancel</Button> */}\n                                        <Button onClick={() => navigate('/dashboard/subTopics/addSubTopic/' + topicID)} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-3 col-12 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\"  >\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editTopicDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\"  >\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\"\n                                            onClick={() => addNewTopic()}\n                                        >Add Sub Topic</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => { setModalVisible(false) }}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/subTopics/addSubTopic/' + topicID)}</>) }}\n                            >Add New Sub Topic </Button>\n\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/topics/subTopic/' + topicID)}\n                            >Back To Sub Topics</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}