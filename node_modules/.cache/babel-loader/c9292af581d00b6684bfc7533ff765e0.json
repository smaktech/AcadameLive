{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\dynamic-styling\\\\ControlPanel.js\",\n    _s = $RefreshSig$();\n\nimport { fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport { memo, useEffect, useState } from 'react'; // @mui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Switch, Typography } from '@mui/material'; // _mock_\n\nimport MAP_STYLE from '../../../_mock/map/map-style-basic-v8.json'; // utils\n\nimport cssStyles from '../../../utils/cssStyles'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultMapStyle = fromJS(MAP_STYLE);\nconst CATEGORIES = ['labels', 'roads', 'buildings', 'parks', 'water', 'background'];\nconst LAYER_SELECTOR = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/\n};\nconst COLOR_CLASS = {\n  line: 'line-color',\n  fill: 'fill-color',\n  background: 'background-color',\n  symbol: 'text-color'\n};\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...cssStyles().bgBlur({\n      color: theme.palette.grey[900]\n    }),\n    zIndex: 9,\n    minWidth: 200,\n    position: 'absolute',\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius\n  };\n});\nconst ColorBoxStyle = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    width: 20,\n    height: 20,\n    display: 'flex',\n    borderRadius: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: theme.spacing(1),\n    border: `solid 1px ${theme.palette.grey[500]}`,\n    '& input': {\n      width: 12,\n      height: 12,\n      border: 'none',\n      outline: 'none',\n      cursor: 'pointer',\n      WebkitAppearance: 'none',\n      backgroundColor: 'transparent',\n      '&::-webkit-color-swatch-wrapper': {\n        padding: 0\n      },\n      '&::-moz-color-swatch': {\n        border: 'none',\n        borderRadius: '50%'\n      },\n      '&::-webkit-color-swatch': {\n        border: 'none',\n        borderRadius: '50%'\n      }\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  onChange: PropTypes.func\n};\n\nfunction ControlPanel(_ref3) {\n  _s();\n\n  let {\n    onChange\n  } = _ref3;\n  const theme = useTheme();\n  const [visibility, setVisibility] = useState({\n    water: true,\n    parks: true,\n    roads: true,\n    labels: true,\n    buildings: true,\n    background: true\n  });\n  const [color, setColor] = useState({\n    water: theme.palette.grey[900],\n    labels: theme.palette.grey[800],\n    parks: theme.palette.primary.dark,\n    buildings: theme.palette.grey[900],\n    background: theme.palette.grey[700],\n    roads: theme.palette.warning.darker\n  });\n  useEffect(() => {\n    updateMapStyle({\n      color,\n      visibility\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visibility]);\n\n  const onColorChange = (event, name) => {\n    const state = { ...color,\n      [name]: event.target.value\n    };\n    setColor(state);\n    updateMapStyle({\n      color: state,\n      visibility\n    });\n  };\n\n  const onVisibilityChange = (event, name) => {\n    const state = { ...visibility,\n      [name]: event.target.checked\n    };\n    setVisibility(state);\n    updateMapStyle({\n      color,\n      visibility: state\n    });\n  };\n\n  const updateMapStyle = _ref4 => {\n    let {\n      color,\n      visibility\n    } = _ref4;\n    const layers = defaultMapStyle.get('layers').filter(layer => {\n      const id = layer.get('id');\n      return CATEGORIES.every(name => visibility[name] || !LAYER_SELECTOR[name].test(id));\n    }).map(layer => {\n      const id = layer.get('id');\n      const type = layer.get('type');\n      const category = CATEGORIES.find(name => LAYER_SELECTOR[name].test(id));\n\n      if (category && COLOR_CLASS[type]) {\n        return layer.setIn(['paint', COLOR_CLASS[type]], color[category]);\n      }\n\n      return layer;\n    });\n    onChange(defaultMapStyle.set('layers', layers));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    children: CATEGORIES.map(name => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 1,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ColorBoxStyle, {\n        sx: { ...(!visibility[name] && {\n            opacity: 0.48\n          })\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color[name],\n          disabled: !visibility[name],\n          onChange: e => onColorChange(e, name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          flexGrow: 1,\n          textTransform: 'capitalize',\n          color: !visibility[name] ? 'text.disabled' : 'common.white'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        size: \"small\",\n        checked: visibility[name],\n        onChange: e => onVisibilityChange(e, name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlPanel, \"RUIxAMeA0MOhWTxcU3uF+gf81ME=\", false, function () {\n  return [useTheme];\n});\n\n_c = ControlPanel;\nexport default _c2 = /*#__PURE__*/memo(ControlPanel);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ControlPanel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/dynamic-styling/ControlPanel.js"],"names":["fromJS","PropTypes","memo","useEffect","useState","useTheme","styled","Box","Switch","Typography","MAP_STYLE","cssStyles","defaultMapStyle","CATEGORIES","LAYER_SELECTOR","background","water","parks","buildings","roads","labels","COLOR_CLASS","line","fill","symbol","RootStyle","theme","bgBlur","color","palette","grey","zIndex","minWidth","position","top","spacing","right","padding","borderRadius","shape","ColorBoxStyle","width","height","display","alignItems","justifyContent","marginRight","border","outline","cursor","WebkitAppearance","backgroundColor","ControlPanel","propTypes","onChange","func","visibility","setVisibility","setColor","primary","dark","warning","darker","updateMapStyle","onColorChange","event","name","state","target","value","onVisibilityChange","checked","layers","get","filter","layer","id","every","test","map","type","category","find","setIn","set","py","opacity","e","flexGrow","textTransform"],"mappings":"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","sourcesContent":["import { fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport { memo, useEffect, useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Switch, Typography } from '@mui/material';\n// _mock_\nimport MAP_STYLE from '../../../_mock/map/map-style-basic-v8.json';\n// utils\nimport cssStyles from '../../../utils/cssStyles';\n\n// ----------------------------------------------------------------------\n\nconst defaultMapStyle = fromJS(MAP_STYLE);\n\nconst CATEGORIES = ['labels', 'roads', 'buildings', 'parks', 'water', 'background'];\n\nconst LAYER_SELECTOR = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/,\n};\n\nconst COLOR_CLASS = {\n  line: 'line-color',\n  fill: 'fill-color',\n  background: 'background-color',\n  symbol: 'text-color',\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  ...cssStyles().bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n\nconst ColorBoxStyle = styled('div')(({ theme }) => ({\n  width: 20,\n  height: 20,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginRight: theme.spacing(1),\n  border: `solid 1px ${theme.palette.grey[500]}`,\n  '& input': {\n    width: 12,\n    height: 12,\n    border: 'none',\n    outline: 'none',\n    cursor: 'pointer',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    '&::-webkit-color-swatch-wrapper': { padding: 0 },\n    '&::-moz-color-swatch': { border: 'none', borderRadius: '50%' },\n    '&::-webkit-color-swatch': { border: 'none', borderRadius: '50%' },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nControlPanel.propTypes = {\n  onChange: PropTypes.func,\n};\n\nfunction ControlPanel({ onChange }) {\n  const theme = useTheme();\n  const [visibility, setVisibility] = useState({\n    water: true,\n    parks: true,\n    roads: true,\n    labels: true,\n    buildings: true,\n    background: true,\n  });\n  const [color, setColor] = useState({\n    water: theme.palette.grey[900],\n    labels: theme.palette.grey[800],\n    parks: theme.palette.primary.dark,\n    buildings: theme.palette.grey[900],\n    background: theme.palette.grey[700],\n    roads: theme.palette.warning.darker,\n  });\n\n  useEffect(() => {\n    updateMapStyle({ color, visibility });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [color, visibility]);\n\n  const onColorChange = (event, name) => {\n    const state = {\n      ...color,\n      [name]: event.target.value,\n    };\n    setColor(state);\n    updateMapStyle({\n      color: state,\n      visibility,\n    });\n  };\n\n  const onVisibilityChange = (event, name) => {\n    const state = {\n      ...visibility,\n      [name]: event.target.checked,\n    };\n    setVisibility(state);\n    updateMapStyle({\n      color,\n      visibility: state,\n    });\n  };\n\n  const updateMapStyle = ({ color, visibility }) => {\n    const layers = defaultMapStyle\n      .get('layers')\n      .filter((layer) => {\n        const id = layer.get('id');\n        return CATEGORIES.every((name) => visibility[name] || !LAYER_SELECTOR[name].test(id));\n      })\n      .map((layer) => {\n        const id = layer.get('id');\n        const type = layer.get('type');\n        const category = CATEGORIES.find((name) => LAYER_SELECTOR[name].test(id));\n        if (category && COLOR_CLASS[type]) {\n          return layer.setIn(['paint', COLOR_CLASS[type]], color[category]);\n        }\n        return layer;\n      });\n    onChange(defaultMapStyle.set('layers', layers));\n  };\n\n  return (\n    <RootStyle>\n      {CATEGORIES.map((name) => (\n        <Box key={name} sx={{ py: 1, display: 'flex', alignItems: 'center' }}>\n          <ColorBoxStyle sx={{ ...(!visibility[name] && { opacity: 0.48 }) }}>\n            <input\n              type=\"color\"\n              value={color[name]}\n              disabled={!visibility[name]}\n              onChange={(e) => onColorChange(e, name)}\n            />\n          </ColorBoxStyle>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              flexGrow: 1,\n              textTransform: 'capitalize',\n              color: !visibility[name] ? 'text.disabled' : 'common.white',\n            }}\n          >\n            {name}\n          </Typography>\n          <Switch size=\"small\" checked={visibility[name]} onChange={(e) => onVisibilityChange(e, name)} />\n        </Box>\n      ))}\n    </RootStyle>\n  );\n}\n\nexport default memo(ControlPanel);\n"]},"metadata":{},"sourceType":"module"}