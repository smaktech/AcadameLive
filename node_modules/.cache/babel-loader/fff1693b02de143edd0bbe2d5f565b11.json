{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{apiUrl}from'../../config';import{objToQueryString}from'../../config';//Fetch all Resourse data using offset and limit!\nfunction getAllResourse(_x,_x2){return _getAllResourse.apply(this,arguments);}//api function for update a resourse \nfunction _getAllResourse(){_getAllResourse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(page,limit){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryString=objToQueryString({page:page,limit:limit});if(queryString==null)apiLink=apiUrl+'/resource/filterResource';else apiLink=apiUrl+'/resource/filterResource?'+queryString;_context.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context.sent;return _context.abrupt(\"return\",data);case 6:case\"end\":return _context.stop();}}},_callee);}));return _getAllResourse.apply(this,arguments);}function editResourse(_x3,_x4,_x5,_x6,_x7,_x8,_x9){return _editResourse.apply(this,arguments);}//api function for adding a resourse \nfunction _editResourse(){_editResourse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resourceID,name,description,linkType,linkString,resourceFile,status){var formData,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:formData=new FormData();formData.append(\"name\",name);formData.append(\"description\",description);formData.append(\"linkType\",linkType);formData.append(\"linkString\",linkString);formData.append(\"resourceFile\",resourceFile);formData.append(\"status\",status);_context2.next=9;return fetch(apiUrl+'/resource/editResource/'+resourceID,{method:'PATCH',headers:{Accept:'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:formData}).then(function(res){return res.json();});case 9:data=_context2.sent;return _context2.abrupt(\"return\",data);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return _editResourse.apply(this,arguments);}function createResourse(_x10,_x11,_x12,_x13,_x14,_x15){return _createResourse.apply(this,arguments);}//api to delete the resourse from the database\nfunction _createResourse(){_createResourse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name,description,linkType,linkString,resourceFile,status){var formData,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:formData=new FormData();formData.append(\"name\",name);formData.append(\"description\",description);formData.append(\"linkType\",linkType);formData.append(\"linkString\",linkString);formData.append(\"resourceFile\",resourceFile);formData.append(\"status\",status);_context3.next=9;return fetch(apiUrl+'/resource/createResource',{method:'POST',headers:{Accept:'application/json'},body:formData}).then(function(res){return res.json();});case 9:data=_context3.sent;return _context3.abrupt(\"return\",data);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _createResourse.apply(this,arguments);}function deleteResourse(_x16){return _deleteResourse.apply(this,arguments);}//api to get the details of a particular Resourse by sending the courdseId\nfunction _deleteResourse(){_deleteResourse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resourseID){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(apiUrl+'/resource/deleteResourceById/'+resourseID,{method:'DELETE',headers:{Accept:'application/json'// 'Content-Type': 'application/json',\n}}).then(function(res){return res.json();});case 2:data=_context4.sent;return _context4.abrupt(\"return\",data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _deleteResourse.apply(this,arguments);}function getResourseById(_x17){return _getResourseById.apply(this,arguments);}function _getResourseById(){_getResourseById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resourseID){var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(apiUrl+'/resource/getResourceById/'+resourseID,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context5.sent;return _context5.abrupt(\"return\",data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _getResourseById.apply(this,arguments);}function getResourseByFilter(_x18,_x19,_x20,_x21,_x22,_x23,_x24){return _getResourseByFilter.apply(this,arguments);}function _getResourseByFilter(){_getResourseByFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(searchString,status,startDate,endDate,page,limit,sortByDate){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:queryString=objToQueryString({searchString:searchString,status:status,startDate:startDate,endDate:endDate,page:page,limit:limit,sortByDate:sortByDate});if(queryString==null)apiLink=apiUrl+'/resource/filterResource';else apiLink=apiUrl+'/resource/filterResource?'+queryString;_context6.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context6.sent;return _context6.abrupt(\"return\",data);case 6:case\"end\":return _context6.stop();}}},_callee6);}));return _getResourseByFilter.apply(this,arguments);}export{getAllResourse,editResourse,deleteResourse,getResourseByFilter,getResourseById,createResourse};","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Resourses/Resourses.js"],"names":["apiUrl","objToQueryString","getAllResourse","page","limit","queryString","apiLink","fetch","method","headers","Accept","then","res","json","data","editResourse","resourceID","name","description","linkType","linkString","resourceFile","status","formData","FormData","append","body","createResourse","deleteResourse","resourseID","getResourseById","getResourseByFilter","searchString","startDate","endDate","sortByDate"],"mappings":"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","sourcesContent":["  import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n//Fetch all Resourse data using offset and limit!\nasync function getAllResourse(page, limit) {\n    const queryString = objToQueryString({\n        page: page,\n        limit: limit,\n    })\n    var apiLink;\n    if (queryString == null)\n        apiLink = apiUrl + '/resource/filterResource'\n    else\n        apiLink = apiUrl + '/resource/filterResource?' + queryString\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n//api function for update a resourse \nasync function editResourse(resourceID, name, description,linkType, linkString, resourceFile,status) {\n    var formData   = new FormData();  \n    formData.append(\"name\", name) \n    formData.append(\"description\", description) \n    formData.append(\"linkType\", linkType) \n    formData.append(\"linkString\", linkString)\n    formData.append(\"resourceFile\", resourceFile) \n    formData.append(\"status\", status)\n\n    const data = await fetch(apiUrl + '/resource/editResource/' + resourceID , {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//api function for adding a resourse \nasync function createResourse(name, description, linkType, linkString, resourceFile, status) {\n    var formData   = new FormData();  \n    formData.append(\"name\", name) \n    formData.append(\"description\", description) \n    formData.append(\"linkType\", linkType) \n    formData.append(\"linkString\", linkString) \n    formData.append(\"resourceFile\", resourceFile) \n    formData.append(\"status\", status)\n    const data = await fetch(apiUrl + '/resource/createResource', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n        },\n        body: formData,\n    }).then((res) => res.json());\n    return data;\n}\n\n\n//api to delete the resourse from the database\nasync function deleteResourse(resourseID) {\n    const data = await fetch(apiUrl + '/resource/deleteResourceById/' + resourseID, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n//api to get the details of a particular Resourse by sending the courdseId\nasync function getResourseById(resourseID) {\n    const data = await fetch(apiUrl + '/resource/getResourceById/' + resourseID, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n\nasync function getResourseByFilter(searchString, status, startDate, endDate, page, limit, sortByDate) {\n    const queryString = objToQueryString({\n        searchString: searchString,\n        status: status,\n        startDate: startDate,\n        endDate: endDate,\n        page: page,\n        limit: limit,\n        sortByDate: sortByDate,\n    })\n    var apiLink;\n    if (queryString == null)\n        apiLink = apiUrl + '/resource/filterResource'\n    else\n        apiLink = apiUrl + '/resource/filterResource?' + queryString\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\nexport { getAllResourse, editResourse, deleteResourse, getResourseByFilter, getResourseById, createResourse }"]},"metadata":{},"sourceType":"module"}