{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\kanban\\\\KanbanColumnAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useSnackbar } from 'notistack'; // @mui\n\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material'; // redux\n\nimport { useDispatch } from '../../../redux/store';\nimport { createColumn } from '../../../redux/slices/kanban'; // components\n\nimport Iconify from '../../../components/Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KanbanColumnAdd() {\n  _s();\n\n  const nameRef = useRef(null);\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [name, setName] = useState('');\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (open) {\n      if (nameRef.current) {\n        nameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleCreateColumn = async () => {\n    try {\n      if (name) {\n        dispatch(createColumn({\n          name\n        }));\n        enqueueSnackbar('Create section success', {\n          variant: 'success'\n        });\n        setName('');\n      }\n\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyUp = event => {\n    if (event.key === 'Enter') {\n      handleCreateColumn();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      minWidth: 280,\n      width: 280\n    },\n    children: [!open && /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      size: \"large\",\n      color: \"inherit\",\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:plus-fill',\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this),\n      onClick: handleOpen,\n      children: \"Add section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), open && /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: handleCreateColumn,\n      children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        fullWidth: true,\n        placeholder: \"New section\",\n        inputRef: nameRef,\n        value: name,\n        onChange: handleChangeName,\n        onKeyUp: handleKeyUp,\n        sx: {\n          typography: 'h6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KanbanColumnAdd, \"5C2CXOiroQG4qDOMxCon7s1dJ/U=\", false, function () {\n  return [useDispatch, useSnackbar];\n});\n\n_c = KanbanColumnAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanColumnAdd\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/kanban/KanbanColumnAdd.js"],"names":["useState","useRef","useEffect","useSnackbar","OutlinedInput","Paper","Button","ClickAwayListener","useDispatch","createColumn","Iconify","KanbanColumnAdd","nameRef","dispatch","enqueueSnackbar","name","setName","open","setOpen","current","focus","handleOpen","handleClose","handleChangeName","event","target","value","handleCreateColumn","variant","error","console","handleKeyUp","key","minWidth","width","typography"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\n// @mui\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { createColumn } from '../../../redux/slices/kanban';\n// components\nimport Iconify from '../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function KanbanColumnAdd() {\n  const nameRef = useRef(null);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState('');\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    if (open) {\n      if (nameRef.current) {\n        nameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleCreateColumn = async () => {\n    try {\n      if (name) {\n        dispatch(createColumn({ name }));\n        enqueueSnackbar('Create section success', { variant: 'success' });\n        setName('');\n      }\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleCreateColumn();\n    }\n  };\n\n  return (\n    <Paper sx={{ minWidth: 280, width: 280 }}>\n      {!open && (\n        <Button\n          fullWidth\n          size=\"large\"\n          color=\"inherit\"\n          variant=\"outlined\"\n          startIcon={<Iconify icon={'eva:plus-fill'} width={20} height={20} />}\n          onClick={handleOpen}\n        >\n          Add section\n        </Button>\n      )}\n\n      {open && (\n        <ClickAwayListener onClickAway={handleCreateColumn}>\n          <OutlinedInput\n            fullWidth\n            placeholder=\"New section\"\n            inputRef={nameRef}\n            value={name}\n            onChange={handleChangeName}\n            onKeyUp={handleKeyUp}\n            sx={{ typography: 'h6' }}\n          />\n        </ClickAwayListener>\n      )}\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}