{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{apiUrl}from'../../config';import{objToQueryString}from'../../config';//Fetch all topic data using Course ID\nfunction getCourseTopics(_x){return _getCourseTopics.apply(this,arguments);}//Fetch all topic data using offset and limit!\nfunction _getCourseTopics(){_getCourseTopics=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(courseID){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('hello',courseID);_context.next=3;return fetch(apiUrl+'/topic/getCourseTopics/'+courseID,{// method: 'GET',\n// headers: {\n//     Accept: 'application/json',\n//     'Content-Type': 'application/json',\n// },\n}).then(function(res){return res.json();});case 3:data=_context.sent;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getCourseTopics.apply(this,arguments);}function getAllTopics(_x2,_x3){return _getAllTopics.apply(this,arguments);}//Fetch all topic data using offset and limit!\nfunction _getAllTopics(){_getAllTopics=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page,limit){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:queryString=objToQueryString({//   searchString: searchString,\n//   startDate: startDate,\n//   endDate: endDate,\npage:page,limit:limit//   sortByDate: sortByDate\n});if(queryString==null)apiLink=apiUrl+'/topic/filterTopic';else apiLink=apiUrl+'/topic/filterTopic?'+queryString;_context2.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context2.sent;return _context2.abrupt(\"return\",data);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _getAllTopics.apply(this,arguments);}function getCourseAllTopics(_x4){return _getCourseAllTopics.apply(this,arguments);}//api function for update a topic \nfunction _getCourseAllTopics(){_getCourseAllTopics=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(courseId){var apiLink,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:apiLink=apiUrl+'/topic/getCourseTopics/'+courseId;_context3.next=3;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 3:data=_context3.sent;return _context3.abrupt(\"return\",data);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getCourseAllTopics.apply(this,arguments);}function editTopic(_x5,_x6,_x7,_x8,_x9){return _editTopic.apply(this,arguments);}//api function for adding a topic \nfunction _editTopic(){_editTopic=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(topicID,name,description,status,topicIcon){var formData,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// var details = {\n//     \"name\": name,\n//     \"status\": status,\n//     \"description\": description\n// };\nformData=new FormData();formData.append(\"name\",name);formData.append(\"description\",description);formData.append(\"status\",status);formData.append(\"image\",topicIcon);// var formBody = [];\n// for (var property in details) {\n//     var encodedKey = encodeURIComponent(property);\n//     var encodedValue = encodeURIComponent(details[property]);\n//     formBody.push(encodedKey + \"=\" + encodedValue);\n// }\n// formBody = formBody.join(\"&\");\n_context4.next=7;return fetch(apiUrl+'/topic/editTopic/'+topicID,{method:'PATCH',headers:{Accept:'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:formData}).then(function(res){return res.json();});case 7:data=_context4.sent;return _context4.abrupt(\"return\",data);case 9:case\"end\":return _context4.stop();}}},_callee4);}));return _editTopic.apply(this,arguments);}function createTopic(_x10,_x11,_x12,_x13,_x14){return _createTopic.apply(this,arguments);}//api to delete the topic from the database\nfunction _createTopic(){_createTopic=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name,description,status,courseID,icon){var formData,data,topicID,addTopicData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:formData=new FormData();formData.append(\"name\",name);formData.append(\"description\",description);formData.append(\"status\",status);formData.append(\"image\",icon);_context5.next=7;return fetch(apiUrl+'/topic/createTopic',{method:'POST',headers:{Accept:'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:formData}).then(function(res){return res.json();});case 7:data=_context5.sent;if(!data.status){_context5.next=14;break;}topicID=data.topic._id;_context5.next=12;return fetch(apiUrl+'/course/addTopicToCourse/'+courseID,{method:'PATCH',headers:{'Content-Type':'application/json'// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:JSON.stringify({topicIDs:[topicID]})}).then(function(res){return res.json();});case 12:addTopicData=_context5.sent;console.log(addTopicData);case 14:return _context5.abrupt(\"return\",data);case 15:case\"end\":return _context5.stop();}}},_callee5);}));return _createTopic.apply(this,arguments);}function deleteTopic(_x15,_x16){return _deleteTopic.apply(this,arguments);}//api to get the details of a particular topic by sending the topicId\nfunction _deleteTopic(){_deleteTopic=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(topicID,courseID){var removeFromCourse,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch(apiUrl+'/course/removeTopicFromCourse/'+courseID+\"?topicID=\"+topicID,{method:'PATCH',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:removeFromCourse=_context6.sent;_context6.next=5;return fetch(apiUrl+'/topic/deleteTopicById/'+topicID,{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 5:data=_context6.sent;return _context6.abrupt(\"return\",data);case 7:case\"end\":return _context6.stop();}}},_callee6);}));return _deleteTopic.apply(this,arguments);}function getTopicById(_x17){return _getTopicById.apply(this,arguments);}function _getTopicById(){_getTopicById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(topicID){var data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return fetch(apiUrl+'/topic/getTopicById/'+topicID,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context7.sent;return _context7.abrupt(\"return\",data);case 4:case\"end\":return _context7.stop();}}},_callee7);}));return _getTopicById.apply(this,arguments);}function getTopicByFilter(_x18,_x19,_x20,_x21,_x22,_x23,_x24){return _getTopicByFilter.apply(this,arguments);}function _getTopicByFilter(){_getTopicByFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(searchString,startDate,endDate,page,limit,sortByDate,status){var obj,queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:obj={searchString:searchString,startDate:startDate,endDate:endDate,page:page,limit:limit,sortByDate:sortByDate,status:status};queryString=objToQueryString(obj);console.log(queryString);if(queryString==null){apiLink=apiUrl+'/topic/filterTopic';}else{apiLink=apiUrl+'/topic/filterTopic?'+queryString;}console.log(\"test call back\",queryString,obj);_context8.next=7;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 7:data=_context8.sent;return _context8.abrupt(\"return\",data);case 9:case\"end\":return _context8.stop();}}},_callee8);}));return _getTopicByFilter.apply(this,arguments);}export{getCourseTopics,getCourseAllTopics,getAllTopics,editTopic,deleteTopic,getTopicByFilter,getTopicById,createTopic};","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Topic/Topic.js"],"names":["apiUrl","objToQueryString","getCourseTopics","courseID","console","log","fetch","then","res","json","data","getAllTopics","page","limit","queryString","apiLink","method","headers","Accept","getCourseAllTopics","courseId","editTopic","topicID","name","description","status","topicIcon","formData","FormData","append","body","createTopic","icon","topic","_id","JSON","stringify","topicIDs","addTopicData","deleteTopic","removeFromCourse","getTopicById","getTopicByFilter","searchString","startDate","endDate","sortByDate","obj"],"mappings":"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","sourcesContent":["import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n//Fetch all topic data using Course ID\nasync function getCourseTopics(courseID) {\n    console.log('hello', courseID)\n    const data = await fetch(apiUrl + '/topic/getCourseTopics/' + courseID, {\n        // method: 'GET',\n        // headers: {\n        //     Accept: 'application/json',\n        //     'Content-Type': 'application/json',\n        // },\n    }).then((res) => res.json());\n    return data;\n}\n\n//Fetch all topic data using offset and limit!\nasync function getAllTopics(page, limit) {\n    const queryString = objToQueryString({\n        //   searchString: searchString,\n        //   startDate: startDate,\n        //   endDate: endDate,\n        page: page,\n        limit: limit,\n        //   sortByDate: sortByDate\n    })\n    var apiLink;\n    if (queryString == null)\n        apiLink = apiUrl + '/topic/filterTopic'\n    else\n        apiLink = apiUrl + '/topic/filterTopic?' + queryString\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//Fetch all topic data using offset and limit!\nasync function getCourseAllTopics(courseId) {\n\n    var apiLink;\n    apiLink = apiUrl + '/topic/getCourseTopics/' + courseId\n\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//api function for update a topic \n\nasync function editTopic(topicID, name, description, status,topicIcon) {\n\n    // var details = {\n    //     \"name\": name,\n    //     \"status\": status,\n    //     \"description\": description\n    // };\n\n    var formData = new FormData();\n    formData.append(\"name\", name)\n    formData.append(\"description\", description)\n    formData.append(\"status\", status)\n    formData.append(\"image\", topicIcon)\n\n    // var formBody = [];\n    // for (var property in details) {\n    //     var encodedKey = encodeURIComponent(property);\n    //     var encodedValue = encodeURIComponent(details[property]);\n    //     formBody.push(encodedKey + \"=\" + encodedValue);\n    // }\n    // formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/topic/editTopic/' + topicID, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//api function for adding a topic \nasync function createTopic(name, description, status, courseID, icon) {\n    var formData = new FormData();\n    formData.append(\"name\", name)\n    formData.append(\"description\", description)\n    formData.append(\"status\", status)\n    formData.append(\"image\", icon)\n\n\n    const data = await fetch(apiUrl + '/topic/createTopic', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formData,\n    }).then((res) => res.json());\n    if (data.status) {\n        const topicID = data.topic._id\n        const addTopicData = await fetch(apiUrl + '/course/addTopicToCourse/' + courseID, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify({ topicIDs: [topicID] }),\n        }).then((res) => res.json());\n        console.log(addTopicData)\n\n    }\n    return data;\n}\n\n//api to delete the topic from the database\nasync function deleteTopic(topicID, courseID) {\n\n\n\n    const removeFromCourse = await fetch(apiUrl + '/course/removeTopicFromCourse/' + courseID + \"?topicID=\" + topicID, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n\n    const data = await fetch(apiUrl + '/topic/deleteTopicById/' + topicID, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n\n    return data;\n}\n\n//api to get the details of a particular topic by sending the topicId\nasync function getTopicById(topicID) {\n    const data = await fetch(apiUrl + '/topic/getTopicById/' + topicID, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n\n\n\nasync function getTopicByFilter(searchString, startDate, endDate, page, limit, sortByDate, status) {\n    let obj = {\n        searchString: searchString,\n        startDate: startDate,\n        endDate: endDate,\n        page: page,\n        limit: limit,\n        sortByDate: sortByDate,\n        status: status\n    }\n    const queryString = objToQueryString(obj)\n    console.log(queryString)\n    var apiLink;\n    if (queryString == null) {\n        apiLink = apiUrl + '/topic/filterTopic'\n    }\n    else {\n        apiLink = apiUrl + '/topic/filterTopic?' + queryString\n    }\n\n    console.log(\"test call back\", queryString, obj)\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n\n}\n\nexport { getCourseTopics, getCourseAllTopics, getAllTopics, editTopic, deleteTopic, getTopicByFilter, getTopicById, createTopic }"]},"metadata":{},"sourceType":"module"}