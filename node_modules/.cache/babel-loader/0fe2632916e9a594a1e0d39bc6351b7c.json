{"ast":null,"code":"/*\nLanguage: Processing\nDescription: Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\nAuthor: Erik Paluka <erik.paluka@gmail.com>\nWebsite: https://processing.org\nCategory: graphics\n*/\nfunction processing(hljs) {\n  var regex = hljs.regex;\n  var BUILT_INS = [\"displayHeight\", \"displayWidth\", \"mouseY\", \"mouseX\", \"mousePressed\", \"pmouseX\", \"pmouseY\", \"key\", \"keyCode\", \"pixels\", \"focused\", \"frameCount\", \"frameRate\", \"height\", \"width\", \"size\", \"createGraphics\", \"beginDraw\", \"createShape\", \"loadShape\", \"PShape\", \"arc\", \"ellipse\", \"line\", \"point\", \"quad\", \"rect\", \"triangle\", \"bezier\", \"bezierDetail\", \"bezierPoint\", \"bezierTangent\", \"curve\", \"curveDetail\", \"curvePoint\", \"curveTangent\", \"curveTightness\", \"shape\", \"shapeMode\", \"beginContour\", \"beginShape\", \"bezierVertex\", \"curveVertex\", \"endContour\", \"endShape\", \"quadraticVertex\", \"vertex\", \"ellipseMode\", \"noSmooth\", \"rectMode\", \"smooth\", \"strokeCap\", \"strokeJoin\", \"strokeWeight\", \"mouseClicked\", \"mouseDragged\", \"mouseMoved\", \"mousePressed\", \"mouseReleased\", \"mouseWheel\", \"keyPressed\", \"keyPressedkeyReleased\", \"keyTyped\", \"print\", \"println\", \"save\", \"saveFrame\", \"day\", \"hour\", \"millis\", \"minute\", \"month\", \"second\", \"year\", \"background\", \"clear\", \"colorMode\", \"fill\", \"noFill\", \"noStroke\", \"stroke\", \"alpha\", \"blue\", \"brightness\", \"color\", \"green\", \"hue\", \"lerpColor\", \"red\", \"saturation\", \"modelX\", \"modelY\", \"modelZ\", \"screenX\", \"screenY\", \"screenZ\", \"ambient\", \"emissive\", \"shininess\", \"specular\", \"add\", \"createImage\", \"beginCamera\", \"camera\", \"endCamera\", \"frustum\", \"ortho\", \"perspective\", \"printCamera\", \"printProjection\", \"cursor\", \"frameRate\", \"noCursor\", \"exit\", \"loop\", \"noLoop\", \"popStyle\", \"pushStyle\", \"redraw\", \"binary\", \"boolean\", \"byte\", \"char\", \"float\", \"hex\", \"int\", \"str\", \"unbinary\", \"unhex\", \"join\", \"match\", \"matchAll\", \"nf\", \"nfc\", \"nfp\", \"nfs\", \"split\", \"splitTokens\", \"trim\", \"append\", \"arrayCopy\", \"concat\", \"expand\", \"reverse\", \"shorten\", \"sort\", \"splice\", \"subset\", \"box\", \"sphere\", \"sphereDetail\", \"createInput\", \"createReader\", \"loadBytes\", \"loadJSONArray\", \"loadJSONObject\", \"loadStrings\", \"loadTable\", \"loadXML\", \"open\", \"parseXML\", \"saveTable\", \"selectFolder\", \"selectInput\", \"beginRaw\", \"beginRecord\", \"createOutput\", \"createWriter\", \"endRaw\", \"endRecord\", \"PrintWritersaveBytes\", \"saveJSONArray\", \"saveJSONObject\", \"saveStream\", \"saveStrings\", \"saveXML\", \"selectOutput\", \"popMatrix\", \"printMatrix\", \"pushMatrix\", \"resetMatrix\", \"rotate\", \"rotateX\", \"rotateY\", \"rotateZ\", \"scale\", \"shearX\", \"shearY\", \"translate\", \"ambientLight\", \"directionalLight\", \"lightFalloff\", \"lights\", \"lightSpecular\", \"noLights\", \"normal\", \"pointLight\", \"spotLight\", \"image\", \"imageMode\", \"loadImage\", \"noTint\", \"requestImage\", \"tint\", \"texture\", \"textureMode\", \"textureWrap\", \"blend\", \"copy\", \"filter\", \"get\", \"loadPixels\", \"set\", \"updatePixels\", \"blendMode\", \"loadShader\", \"PShaderresetShader\", \"shader\", \"createFont\", \"loadFont\", \"text\", \"textFont\", \"textAlign\", \"textLeading\", \"textMode\", \"textSize\", \"textWidth\", \"textAscent\", \"textDescent\", \"abs\", \"ceil\", \"constrain\", \"dist\", \"exp\", \"floor\", \"lerp\", \"log\", \"mag\", \"map\", \"max\", \"min\", \"norm\", \"pow\", \"round\", \"sq\", \"sqrt\", \"acos\", \"asin\", \"atan\", \"atan2\", \"cos\", \"degrees\", \"radians\", \"sin\", \"tan\", \"noise\", \"noiseDetail\", \"noiseSeed\", \"random\", \"randomGaussian\", \"randomSeed\"];\n  var IDENT = hljs.IDENT_RE;\n  var FUNC_NAME = {\n    variants: [{\n      match: regex.concat(regex.either.apply(regex, BUILT_INS), regex.lookahead(/\\s*\\(/)),\n      className: \"built_in\"\n    }, {\n      relevance: 0,\n      match: regex.concat(/\\b(?!for|if|while)/, IDENT, regex.lookahead(/\\s*\\(/)),\n      className: \"title.function\"\n    }]\n  };\n  var NEW_CLASS = {\n    match: [/new\\s+/, IDENT],\n    className: {\n      1: \"keyword\",\n      2: \"class.title\"\n    }\n  };\n  var PROPERTY = {\n    relevance: 0,\n    match: [/\\./, IDENT],\n    className: {\n      2: \"property\"\n    }\n  };\n  var CLASS = {\n    variants: [{\n      match: [/class/, /\\s+/, IDENT, /\\s+/, /extends/, /\\s+/, IDENT]\n    }, {\n      match: [/class/, /\\s+/, IDENT]\n    }],\n    className: {\n      1: \"keyword\",\n      3: \"title.class\",\n      5: \"keyword\",\n      7: \"title.class.inherited\"\n    }\n  };\n  var TYPES = [\"boolean\", \"byte\", \"char\", \"color\", \"double\", \"float\", \"int\", \"long\", \"short\"];\n  var CLASSES = [\"BufferedReader\", \"PVector\", \"PFont\", \"PImage\", \"PGraphics\", \"HashMap\", \"String\", \"Array\", \"FloatDict\", \"ArrayList\", \"FloatList\", \"IntDict\", \"IntList\", \"JSONArray\", \"JSONObject\", \"Object\", \"StringDict\", \"StringList\", \"Table\", \"TableRow\", \"XML\"];\n  var JAVA_KEYWORDS = [\"abstract\", \"assert\", \"break\", \"case\", \"catch\", \"const\", \"continue\", \"default\", \"else\", \"enum\", \"final\", \"finally\", \"for\", \"if\", \"import\", \"instanceof\", \"long\", \"native\", \"new\", \"package\", \"private\", \"private\", \"protected\", \"protected\", \"public\", \"public\", \"return\", \"static\", \"strictfp\", \"switch\", \"synchronized\", \"throw\", \"throws\", \"transient\", \"try\", \"void\", \"volatile\", \"while\"];\n  return {\n    name: 'Processing',\n    aliases: ['pde'],\n    keywords: {\n      keyword: [].concat(JAVA_KEYWORDS),\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI null true false',\n      title: 'setup draw',\n      variable: \"super this\",\n      built_in: [].concat(BUILT_INS, CLASSES),\n      type: TYPES\n    },\n    contains: [CLASS, NEW_CLASS, FUNC_NAME, PROPERTY, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n}\n\nmodule.exports = processing;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/processing.js"],"names":["processing","hljs","regex","BUILT_INS","IDENT","IDENT_RE","FUNC_NAME","variants","match","concat","either","lookahead","className","relevance","NEW_CLASS","PROPERTY","CLASS","TYPES","CLASSES","JAVA_KEYWORDS","name","aliases","keywords","keyword","literal","title","variable","built_in","type","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,MAAMC,SAAS,GAAG,CAChB,eADgB,EAEhB,cAFgB,EAGhB,QAHgB,EAIhB,QAJgB,EAKhB,cALgB,EAMhB,SANgB,EAOhB,SAPgB,EAQhB,KARgB,EAShB,SATgB,EAUhB,QAVgB,EAWhB,SAXgB,EAYhB,YAZgB,EAahB,WAbgB,EAchB,QAdgB,EAehB,OAfgB,EAgBhB,MAhBgB,EAiBhB,gBAjBgB,EAkBhB,WAlBgB,EAmBhB,aAnBgB,EAoBhB,WApBgB,EAqBhB,QArBgB,EAsBhB,KAtBgB,EAuBhB,SAvBgB,EAwBhB,MAxBgB,EAyBhB,OAzBgB,EA0BhB,MA1BgB,EA2BhB,MA3BgB,EA4BhB,UA5BgB,EA6BhB,QA7BgB,EA8BhB,cA9BgB,EA+BhB,aA/BgB,EAgChB,eAhCgB,EAiChB,OAjCgB,EAkChB,aAlCgB,EAmChB,YAnCgB,EAoChB,cApCgB,EAqChB,gBArCgB,EAsChB,OAtCgB,EAuChB,WAvCgB,EAwChB,cAxCgB,EAyChB,YAzCgB,EA0ChB,cA1CgB,EA2ChB,aA3CgB,EA4ChB,YA5CgB,EA6ChB,UA7CgB,EA8ChB,iBA9CgB,EA+ChB,QA/CgB,EAgDhB,aAhDgB,EAiDhB,UAjDgB,EAkDhB,UAlDgB,EAmDhB,QAnDgB,EAoDhB,WApDgB,EAqDhB,YArDgB,EAsDhB,cAtDgB,EAuDhB,cAvDgB,EAwDhB,cAxDgB,EAyDhB,YAzDgB,EA0DhB,cA1DgB,EA2DhB,eA3DgB,EA4DhB,YA5DgB,EA6DhB,YA7DgB,EA8DhB,uBA9DgB,EA+DhB,UA/DgB,EAgEhB,OAhEgB,EAiEhB,SAjEgB,EAkEhB,MAlEgB,EAmEhB,WAnEgB,EAoEhB,KApEgB,EAqEhB,MArEgB,EAsEhB,QAtEgB,EAuEhB,QAvEgB,EAwEhB,OAxEgB,EAyEhB,QAzEgB,EA0EhB,MA1EgB,EA2EhB,YA3EgB,EA4EhB,OA5EgB,EA6EhB,WA7EgB,EA8EhB,MA9EgB,EA+EhB,QA/EgB,EAgFhB,UAhFgB,EAiFhB,QAjFgB,EAkFhB,OAlFgB,EAmFhB,MAnFgB,EAoFhB,YApFgB,EAqFhB,OArFgB,EAsFhB,OAtFgB,EAuFhB,KAvFgB,EAwFhB,WAxFgB,EAyFhB,KAzFgB,EA0FhB,YA1FgB,EA2FhB,QA3FgB,EA4FhB,QA5FgB,EA6FhB,QA7FgB,EA8FhB,SA9FgB,EA+FhB,SA/FgB,EAgGhB,SAhGgB,EAiGhB,SAjGgB,EAkGhB,UAlGgB,EAmGhB,WAnGgB,EAoGhB,UApGgB,EAqGhB,KArGgB,EAsGhB,aAtGgB,EAuGhB,aAvGgB,EAwGhB,QAxGgB,EAyGhB,WAzGgB,EA0GhB,SA1GgB,EA2GhB,OA3GgB,EA4GhB,aA5GgB,EA6GhB,aA7GgB,EA8GhB,iBA9GgB,EA+GhB,QA/GgB,EAgHhB,WAhHgB,EAiHhB,UAjHgB,EAkHhB,MAlHgB,EAmHhB,MAnHgB,EAoHhB,QApHgB,EAqHhB,UArHgB,EAsHhB,WAtHgB,EAuHhB,QAvHgB,EAwHhB,QAxHgB,EAyHhB,SAzHgB,EA0HhB,MA1HgB,EA2HhB,MA3HgB,EA4HhB,OA5HgB,EA6HhB,KA7HgB,EA8HhB,KA9HgB,EA+HhB,KA/HgB,EAgIhB,UAhIgB,EAiIhB,OAjIgB,EAkIhB,MAlIgB,EAmIhB,OAnIgB,EAoIhB,UApIgB,EAqIhB,IArIgB,EAsIhB,KAtIgB,EAuIhB,KAvIgB,EAwIhB,KAxIgB,EAyIhB,OAzIgB,EA0IhB,aA1IgB,EA2IhB,MA3IgB,EA4IhB,QA5IgB,EA6IhB,WA7IgB,EA8IhB,QA9IgB,EA+IhB,QA/IgB,EAgJhB,SAhJgB,EAiJhB,SAjJgB,EAkJhB,MAlJgB,EAmJhB,QAnJgB,EAoJhB,QApJgB,EAqJhB,KArJgB,EAsJhB,QAtJgB,EAuJhB,cAvJgB,EAwJhB,aAxJgB,EAyJhB,cAzJgB,EA0JhB,WA1JgB,EA2JhB,eA3JgB,EA4JhB,gBA5JgB,EA6JhB,aA7JgB,EA8JhB,WA9JgB,EA+JhB,SA/JgB,EAgKhB,MAhKgB,EAiKhB,UAjKgB,EAkKhB,WAlKgB,EAmKhB,cAnKgB,EAoKhB,aApKgB,EAqKhB,UArKgB,EAsKhB,aAtKgB,EAuKhB,cAvKgB,EAwKhB,cAxKgB,EAyKhB,QAzKgB,EA0KhB,WA1KgB,EA2KhB,sBA3KgB,EA4KhB,eA5KgB,EA6KhB,gBA7KgB,EA8KhB,YA9KgB,EA+KhB,aA/KgB,EAgLhB,SAhLgB,EAiLhB,cAjLgB,EAkLhB,WAlLgB,EAmLhB,aAnLgB,EAoLhB,YApLgB,EAqLhB,aArLgB,EAsLhB,QAtLgB,EAuLhB,SAvLgB,EAwLhB,SAxLgB,EAyLhB,SAzLgB,EA0LhB,OA1LgB,EA2LhB,QA3LgB,EA4LhB,QA5LgB,EA6LhB,WA7LgB,EA8LhB,cA9LgB,EA+LhB,kBA/LgB,EAgMhB,cAhMgB,EAiMhB,QAjMgB,EAkMhB,eAlMgB,EAmMhB,UAnMgB,EAoMhB,QApMgB,EAqMhB,YArMgB,EAsMhB,WAtMgB,EAuMhB,OAvMgB,EAwMhB,WAxMgB,EAyMhB,WAzMgB,EA0MhB,QA1MgB,EA2MhB,cA3MgB,EA4MhB,MA5MgB,EA6MhB,SA7MgB,EA8MhB,aA9MgB,EA+MhB,aA/MgB,EAgNhB,OAhNgB,EAiNhB,MAjNgB,EAkNhB,QAlNgB,EAmNhB,KAnNgB,EAoNhB,YApNgB,EAqNhB,KArNgB,EAsNhB,cAtNgB,EAuNhB,WAvNgB,EAwNhB,YAxNgB,EAyNhB,oBAzNgB,EA0NhB,QA1NgB,EA2NhB,YA3NgB,EA4NhB,UA5NgB,EA6NhB,MA7NgB,EA8NhB,UA9NgB,EA+NhB,WA/NgB,EAgOhB,aAhOgB,EAiOhB,UAjOgB,EAkOhB,UAlOgB,EAmOhB,WAnOgB,EAoOhB,YApOgB,EAqOhB,aArOgB,EAsOhB,KAtOgB,EAuOhB,MAvOgB,EAwOhB,WAxOgB,EAyOhB,MAzOgB,EA0OhB,KA1OgB,EA2OhB,OA3OgB,EA4OhB,MA5OgB,EA6OhB,KA7OgB,EA8OhB,KA9OgB,EA+OhB,KA/OgB,EAgPhB,KAhPgB,EAiPhB,KAjPgB,EAkPhB,MAlPgB,EAmPhB,KAnPgB,EAoPhB,OApPgB,EAqPhB,IArPgB,EAsPhB,MAtPgB,EAuPhB,MAvPgB,EAwPhB,MAxPgB,EAyPhB,MAzPgB,EA0PhB,OA1PgB,EA2PhB,KA3PgB,EA4PhB,SA5PgB,EA6PhB,SA7PgB,EA8PhB,KA9PgB,EA+PhB,KA/PgB,EAgQhB,OAhQgB,EAiQhB,aAjQgB,EAkQhB,WAlQgB,EAmQhB,QAnQgB,EAoQhB,gBApQgB,EAqQhB,YArQgB,CAAlB;AAuQA,MAAMC,KAAK,GAAGH,IAAI,CAACI,QAAnB;AACA,MAAMC,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEN,KAAK,CAACO,MAAN,CAAaP,KAAK,CAACQ,MAAN,OAAAR,KAAK,EAAWC,SAAX,CAAlB,EAAyCD,KAAK,CAACS,SAAN,CAAgB,OAAhB,CAAzC,CADT;AAEEC,MAAAA,SAAS,EAAE;AAFb,KADQ,EAKR;AACEC,MAAAA,SAAS,EAAE,CADb;AAEEL,MAAAA,KAAK,EAAEN,KAAK,CAACO,MAAN,CACL,oBADK,EAELL,KAFK,EAEEF,KAAK,CAACS,SAAN,CAAgB,OAAhB,CAFF,CAFT;AAKEC,MAAAA,SAAS,EAAE;AALb,KALQ;AADM,GAAlB;AAeA,MAAME,SAAS,GAAG;AAChBN,IAAAA,KAAK,EAAE,CACL,QADK,EAELJ,KAFK,CADS;AAKhBQ,IAAAA,SAAS,EAAE;AACT,SAAG,SADM;AAET,SAAG;AAFM;AALK,GAAlB;AAUA,MAAMG,QAAQ,GAAG;AACfF,IAAAA,SAAS,EAAE,CADI;AAEfL,IAAAA,KAAK,EAAE,CACL,IADK,EAELJ,KAFK,CAFQ;AAMfQ,IAAAA,SAAS,EAAE;AACT,SAAG;AADM;AANI,GAAjB;AAUA,MAAMI,KAAK,GAAG;AACZT,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,CACL,OADK,EAEL,KAFK,EAGLJ,KAHK,EAIL,KAJK,EAKL,SALK,EAML,KANK,EAOLA,KAPK;AADT,KADQ,EAYR;AACEI,MAAAA,KAAK,EAAE,CACL,OADK,EAEL,KAFK,EAGLJ,KAHK;AADT,KAZQ,CADE;AAqBZQ,IAAAA,SAAS,EAAE;AACT,SAAG,SADM;AAET,SAAG,aAFM;AAGT,SAAG,SAHM;AAIT,SAAG;AAJM;AArBC,GAAd;AA6BA,MAAMK,KAAK,GAAG,CACZ,SADY,EAEZ,MAFY,EAGZ,MAHY,EAIZ,OAJY,EAKZ,QALY,EAMZ,OANY,EAOZ,KAPY,EAQZ,MARY,EASZ,OATY,CAAd;AAWA,MAAMC,OAAO,GAAG,CACd,gBADc,EAEd,SAFc,EAGd,OAHc,EAId,QAJc,EAKd,WALc,EAMd,SANc,EAOd,QAPc,EAQd,OARc,EASd,WATc,EAUd,WAVc,EAWd,WAXc,EAYd,SAZc,EAad,SAbc,EAcd,WAdc,EAed,YAfc,EAgBd,QAhBc,EAiBd,YAjBc,EAkBd,YAlBc,EAmBd,OAnBc,EAoBd,UApBc,EAqBd,KArBc,CAAhB;AAuBA,MAAMC,aAAa,GAAG,CACpB,UADoB,EAEpB,QAFoB,EAGpB,OAHoB,EAIpB,MAJoB,EAKpB,OALoB,EAMpB,OANoB,EAOpB,UAPoB,EAQpB,SARoB,EASpB,MAToB,EAUpB,MAVoB,EAWpB,OAXoB,EAYpB,SAZoB,EAapB,KAboB,EAcpB,IAdoB,EAepB,QAfoB,EAgBpB,YAhBoB,EAiBpB,MAjBoB,EAkBpB,QAlBoB,EAmBpB,KAnBoB,EAoBpB,SApBoB,EAqBpB,SArBoB,EAsBpB,SAtBoB,EAuBpB,WAvBoB,EAwBpB,WAxBoB,EAyBpB,QAzBoB,EA0BpB,QA1BoB,EA2BpB,QA3BoB,EA4BpB,QA5BoB,EA6BpB,UA7BoB,EA8BpB,QA9BoB,EA+BpB,cA/BoB,EAgCpB,OAhCoB,EAiCpB,QAjCoB,EAkCpB,WAlCoB,EAmCpB,KAnCoB,EAoCpB,MApCoB,EAqCpB,UArCoB,EAsCpB,OAtCoB,CAAtB;AAyCA,SAAO;AACLC,IAAAA,IAAI,EAAE,YADD;AAELC,IAAAA,OAAO,EAAE,CAAE,KAAF,CAFJ;AAGLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,YACFJ,aADE,CADC;AAIRK,MAAAA,OAAO,EAAE,0DAJD;AAKRC,MAAAA,KAAK,EAAE,YALC;AAMRC,MAAAA,QAAQ,EAAE,YANF;AAORC,MAAAA,QAAQ,YACHxB,SADG,EAEHe,OAFG,CAPA;AAWRU,MAAAA,IAAI,EAAEX;AAXE,KAHL;AAgBLY,IAAAA,QAAQ,EAAE,CACRb,KADQ,EAERF,SAFQ,EAGRR,SAHQ,EAIRS,QAJQ,EAKRd,IAAI,CAAC6B,mBALG,EAMR7B,IAAI,CAAC8B,oBANG,EAOR9B,IAAI,CAAC+B,gBAPG,EAQR/B,IAAI,CAACgC,iBARG,EASRhC,IAAI,CAACiC,aATG;AAhBL,GAAP;AA4BD;;AAEDC,MAAM,CAACC,OAAP,GAAiBpC,UAAjB","sourcesContent":["/*\nLanguage: Processing\nDescription: Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\nAuthor: Erik Paluka <erik.paluka@gmail.com>\nWebsite: https://processing.org\nCategory: graphics\n*/\n\nfunction processing(hljs) {\n  const regex = hljs.regex;\n  const BUILT_INS = [\n    \"displayHeight\",\n    \"displayWidth\",\n    \"mouseY\",\n    \"mouseX\",\n    \"mousePressed\",\n    \"pmouseX\",\n    \"pmouseY\",\n    \"key\",\n    \"keyCode\",\n    \"pixels\",\n    \"focused\",\n    \"frameCount\",\n    \"frameRate\",\n    \"height\",\n    \"width\",\n    \"size\",\n    \"createGraphics\",\n    \"beginDraw\",\n    \"createShape\",\n    \"loadShape\",\n    \"PShape\",\n    \"arc\",\n    \"ellipse\",\n    \"line\",\n    \"point\",\n    \"quad\",\n    \"rect\",\n    \"triangle\",\n    \"bezier\",\n    \"bezierDetail\",\n    \"bezierPoint\",\n    \"bezierTangent\",\n    \"curve\",\n    \"curveDetail\",\n    \"curvePoint\",\n    \"curveTangent\",\n    \"curveTightness\",\n    \"shape\",\n    \"shapeMode\",\n    \"beginContour\",\n    \"beginShape\",\n    \"bezierVertex\",\n    \"curveVertex\",\n    \"endContour\",\n    \"endShape\",\n    \"quadraticVertex\",\n    \"vertex\",\n    \"ellipseMode\",\n    \"noSmooth\",\n    \"rectMode\",\n    \"smooth\",\n    \"strokeCap\",\n    \"strokeJoin\",\n    \"strokeWeight\",\n    \"mouseClicked\",\n    \"mouseDragged\",\n    \"mouseMoved\",\n    \"mousePressed\",\n    \"mouseReleased\",\n    \"mouseWheel\",\n    \"keyPressed\",\n    \"keyPressedkeyReleased\",\n    \"keyTyped\",\n    \"print\",\n    \"println\",\n    \"save\",\n    \"saveFrame\",\n    \"day\",\n    \"hour\",\n    \"millis\",\n    \"minute\",\n    \"month\",\n    \"second\",\n    \"year\",\n    \"background\",\n    \"clear\",\n    \"colorMode\",\n    \"fill\",\n    \"noFill\",\n    \"noStroke\",\n    \"stroke\",\n    \"alpha\",\n    \"blue\",\n    \"brightness\",\n    \"color\",\n    \"green\",\n    \"hue\",\n    \"lerpColor\",\n    \"red\",\n    \"saturation\",\n    \"modelX\",\n    \"modelY\",\n    \"modelZ\",\n    \"screenX\",\n    \"screenY\",\n    \"screenZ\",\n    \"ambient\",\n    \"emissive\",\n    \"shininess\",\n    \"specular\",\n    \"add\",\n    \"createImage\",\n    \"beginCamera\",\n    \"camera\",\n    \"endCamera\",\n    \"frustum\",\n    \"ortho\",\n    \"perspective\",\n    \"printCamera\",\n    \"printProjection\",\n    \"cursor\",\n    \"frameRate\",\n    \"noCursor\",\n    \"exit\",\n    \"loop\",\n    \"noLoop\",\n    \"popStyle\",\n    \"pushStyle\",\n    \"redraw\",\n    \"binary\",\n    \"boolean\",\n    \"byte\",\n    \"char\",\n    \"float\",\n    \"hex\",\n    \"int\",\n    \"str\",\n    \"unbinary\",\n    \"unhex\",\n    \"join\",\n    \"match\",\n    \"matchAll\",\n    \"nf\",\n    \"nfc\",\n    \"nfp\",\n    \"nfs\",\n    \"split\",\n    \"splitTokens\",\n    \"trim\",\n    \"append\",\n    \"arrayCopy\",\n    \"concat\",\n    \"expand\",\n    \"reverse\",\n    \"shorten\",\n    \"sort\",\n    \"splice\",\n    \"subset\",\n    \"box\",\n    \"sphere\",\n    \"sphereDetail\",\n    \"createInput\",\n    \"createReader\",\n    \"loadBytes\",\n    \"loadJSONArray\",\n    \"loadJSONObject\",\n    \"loadStrings\",\n    \"loadTable\",\n    \"loadXML\",\n    \"open\",\n    \"parseXML\",\n    \"saveTable\",\n    \"selectFolder\",\n    \"selectInput\",\n    \"beginRaw\",\n    \"beginRecord\",\n    \"createOutput\",\n    \"createWriter\",\n    \"endRaw\",\n    \"endRecord\",\n    \"PrintWritersaveBytes\",\n    \"saveJSONArray\",\n    \"saveJSONObject\",\n    \"saveStream\",\n    \"saveStrings\",\n    \"saveXML\",\n    \"selectOutput\",\n    \"popMatrix\",\n    \"printMatrix\",\n    \"pushMatrix\",\n    \"resetMatrix\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"scale\",\n    \"shearX\",\n    \"shearY\",\n    \"translate\",\n    \"ambientLight\",\n    \"directionalLight\",\n    \"lightFalloff\",\n    \"lights\",\n    \"lightSpecular\",\n    \"noLights\",\n    \"normal\",\n    \"pointLight\",\n    \"spotLight\",\n    \"image\",\n    \"imageMode\",\n    \"loadImage\",\n    \"noTint\",\n    \"requestImage\",\n    \"tint\",\n    \"texture\",\n    \"textureMode\",\n    \"textureWrap\",\n    \"blend\",\n    \"copy\",\n    \"filter\",\n    \"get\",\n    \"loadPixels\",\n    \"set\",\n    \"updatePixels\",\n    \"blendMode\",\n    \"loadShader\",\n    \"PShaderresetShader\",\n    \"shader\",\n    \"createFont\",\n    \"loadFont\",\n    \"text\",\n    \"textFont\",\n    \"textAlign\",\n    \"textLeading\",\n    \"textMode\",\n    \"textSize\",\n    \"textWidth\",\n    \"textAscent\",\n    \"textDescent\",\n    \"abs\",\n    \"ceil\",\n    \"constrain\",\n    \"dist\",\n    \"exp\",\n    \"floor\",\n    \"lerp\",\n    \"log\",\n    \"mag\",\n    \"map\",\n    \"max\",\n    \"min\",\n    \"norm\",\n    \"pow\",\n    \"round\",\n    \"sq\",\n    \"sqrt\",\n    \"acos\",\n    \"asin\",\n    \"atan\",\n    \"atan2\",\n    \"cos\",\n    \"degrees\",\n    \"radians\",\n    \"sin\",\n    \"tan\",\n    \"noise\",\n    \"noiseDetail\",\n    \"noiseSeed\",\n    \"random\",\n    \"randomGaussian\",\n    \"randomSeed\"\n  ];\n  const IDENT = hljs.IDENT_RE;\n  const FUNC_NAME = {\n    variants: [\n      {\n        match: regex.concat(regex.either(...BUILT_INS), regex.lookahead(/\\s*\\(/)),\n        className: \"built_in\"\n      },\n      {\n        relevance: 0,\n        match: regex.concat(\n          /\\b(?!for|if|while)/,\n          IDENT, regex.lookahead(/\\s*\\(/)),\n        className: \"title.function\"\n      }\n    ]\n  };\n  const NEW_CLASS = {\n    match: [\n      /new\\s+/,\n      IDENT\n    ],\n    className: {\n      1: \"keyword\",\n      2: \"class.title\"\n    }\n  };\n  const PROPERTY = {\n    relevance: 0,\n    match: [\n      /\\./,\n      IDENT\n    ],\n    className: {\n      2: \"property\"\n    }\n  };\n  const CLASS = {\n    variants: [\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          IDENT\n        ]\n      },\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.class\",\n      5: \"keyword\",\n      7: \"title.class.inherited\"\n    }\n  };\n\n  const TYPES = [\n    \"boolean\",\n    \"byte\",\n    \"char\",\n    \"color\",\n    \"double\",\n    \"float\",\n    \"int\",\n    \"long\",\n    \"short\",\n  ];\n  const CLASSES = [\n    \"BufferedReader\",\n    \"PVector\",\n    \"PFont\",\n    \"PImage\",\n    \"PGraphics\",\n    \"HashMap\",\n    \"String\",\n    \"Array\",\n    \"FloatDict\",\n    \"ArrayList\",\n    \"FloatList\",\n    \"IntDict\",\n    \"IntList\",\n    \"JSONArray\",\n    \"JSONObject\",\n    \"Object\",\n    \"StringDict\",\n    \"StringList\",\n    \"Table\",\n    \"TableRow\",\n    \"XML\"\n  ];\n  const JAVA_KEYWORDS = [\n    \"abstract\",\n    \"assert\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"else\",\n    \"enum\",\n    \"final\",\n    \"finally\",\n    \"for\",\n    \"if\",\n    \"import\",\n    \"instanceof\",\n    \"long\",\n    \"native\",\n    \"new\",\n    \"package\",\n    \"private\",\n    \"private\",\n    \"protected\",\n    \"protected\",\n    \"public\",\n    \"public\",\n    \"return\",\n    \"static\",\n    \"strictfp\",\n    \"switch\",\n    \"synchronized\",\n    \"throw\",\n    \"throws\",\n    \"transient\",\n    \"try\",\n    \"void\",\n    \"volatile\",\n    \"while\"\n  ];\n\n  return {\n    name: 'Processing',\n    aliases: [ 'pde' ],\n    keywords: {\n      keyword: [\n        ...JAVA_KEYWORDS\n      ],\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI null true false',\n      title: 'setup draw',\n      variable: \"super this\",\n      built_in: [\n        ...BUILT_INS,\n        ...CLASSES\n      ],\n      type: TYPES\n    },\n    contains: [\n      CLASS,\n      NEW_CLASS,\n      FUNC_NAME,\n      PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = processing;\n"]},"metadata":{},"sourceType":"script"}