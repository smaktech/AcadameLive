{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';// @mui\nimport{alpha}from'@mui/material/styles';import{Avatar,Typography,ListItemText,ListItemButton,ListItemAvatar}from'@mui/material';// utils\nimport{fToNow}from'../../../utils/formatTime';// _mock_\nimport{_contacts}from'../../../_mock';// components\nimport Iconify from'../../../components/Iconify';import Scrollbar from'../../../components/Scrollbar';import MenuPopover from'../../../components/MenuPopover';import BadgeStatus from'../../../components/BadgeStatus';import{IconButtonAnimate}from'../../../components/animate';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ITEM_HEIGHT=64;var PADDING_ITEM=2.5;// ----------------------------------------------------------------------\nexport default function ContactsPopover(){var anchorRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButtonAnimate,{ref:anchorRef,size:\"large\",color:open?'primary':'default',onClick:handleOpen,sx:_objectSpread({},open&&{bgcolor:function bgcolor(theme){return alpha(theme.palette.primary.main,theme.palette.action.focusOpacity);}}),children:/*#__PURE__*/_jsx(Iconify,{icon:'eva:people-fill',width:20,height:20})}),/*#__PURE__*/_jsxs(MenuPopover,{open:open,onClose:handleClose,anchorEl:anchorRef.current,sx:{width:360,p:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{p:PADDING_ITEM},children:[\"Contacts \",/*#__PURE__*/_jsxs(Typography,{component:\"span\",children:[\"(\",_contacts.length,\")\"]})]}),/*#__PURE__*/_jsx(Scrollbar,{sx:{height:ITEM_HEIGHT*8},children:_contacts.map(function(contact){return/*#__PURE__*/_jsxs(ListItemButton,{sx:{px:PADDING_ITEM,height:ITEM_HEIGHT,borderRadius:1},children:[/*#__PURE__*/_jsxs(ListItemAvatar,{sx:{position:'relative'},children:[/*#__PURE__*/_jsx(Avatar,{src:contact.avatar}),/*#__PURE__*/_jsx(BadgeStatus,{status:contact.status,sx:{position:'absolute',right:1,bottom:1}})]}),/*#__PURE__*/_jsx(ListItemText,{primaryTypographyProps:{typography:'subtitle2',mb:0.25},secondaryTypographyProps:{typography:'caption'},primary:contact.name,secondary:contact.status==='offline'&&fToNow(contact.lastActivity)})]},contact.id);})})]})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/header/ContactsPopover.js"],"names":["useRef","useState","alpha","Avatar","Typography","ListItemText","ListItemButton","ListItemAvatar","fToNow","_contacts","Iconify","Scrollbar","MenuPopover","BadgeStatus","IconButtonAnimate","ITEM_HEIGHT","PADDING_ITEM","ContactsPopover","anchorRef","open","setOpen","handleOpen","handleClose","bgcolor","theme","palette","primary","main","action","focusOpacity","current","width","p","length","height","map","contact","px","borderRadius","position","avatar","status","right","bottom","typography","mb","name","lastActivity","id"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { Avatar, Typography, ListItemText, ListItemButton, ListItemAvatar } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// _mock_\nimport { _contacts } from '../../../_mock';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport BadgeStatus from '../../../components/BadgeStatus';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst ITEM_HEIGHT = 64;\nconst PADDING_ITEM = 2.5;\n\n// ----------------------------------------------------------------------\n\nexport default function ContactsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <IconButtonAnimate\n        ref={anchorRef}\n        size=\"large\"\n        color={open ? 'primary' : 'default'}\n        onClick={handleOpen}\n        sx={{\n          ...(open && {\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity),\n          }),\n        }}\n      >\n        <Iconify icon={'eva:people-fill'} width={20} height={20} />\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360, p: 1 }}>\n        <Typography variant=\"h6\" sx={{ p: PADDING_ITEM }}>\n          Contacts <Typography component=\"span\">({_contacts.length})</Typography>\n        </Typography>\n\n        <Scrollbar sx={{ height: ITEM_HEIGHT * 8 }}>\n          {_contacts.map((contact) => (\n            <ListItemButton key={contact.id} sx={{ px: PADDING_ITEM, height: ITEM_HEIGHT, borderRadius: 1 }}>\n              <ListItemAvatar sx={{ position: 'relative' }}>\n                <Avatar src={contact.avatar} />\n                <BadgeStatus status={contact.status} sx={{ position: 'absolute', right: 1, bottom: 1 }} />\n              </ListItemAvatar>\n              <ListItemText\n                primaryTypographyProps={{ typography: 'subtitle2', mb: 0.25 }}\n                secondaryTypographyProps={{ typography: 'caption' }}\n                primary={contact.name}\n                secondary={contact.status === 'offline' && fToNow(contact.lastActivity)}\n              />\n            </ListItemButton>\n          ))}\n        </Scrollbar>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}