{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik'; // @mui\n\nimport { Stack, TextField, IconButton, InputAdornment, Alert, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { addUser } from 'src/api/Users/Users'; // ----------------------------------------------------------------------\n\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddUser() {\n  _s();\n\n  const navigate = useNavigate();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    phoneNumber: Yup.string().min(10, 'Too Short!').max(10, 'Too Long!').required('Phone Number required'),\n    school: Yup.string().min(3, 'Too Short!').max(50, 'Too Long!').required('School name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phoneNumber: '',\n      school: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        setErrors,\n        setSubmitting\n      } = _ref;\n      setSubmitting(true);\n\n      try {\n        const response = await addUser(values.email, values.password, values.name, values.phoneNumber, values.school);\n\n        if (response.status) {\n          setModalVisible(true);\n        } else {\n          setErrors({\n            afterSubmit: response.message\n          });\n        }\n\n        setSubmitting(false);\n      } catch (error) {\n        console.error(error);\n        setErrors({\n          afterSubmit: error.message\n        });\n        setSubmitting(false);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 3\n      },\n      children: \"Add New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [errors.afterSubmit && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: errors.afterSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            ...getFieldProps('name'),\n            error: Boolean(touched.name && errors.name),\n            helperText: touched.name && errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"username\",\n            type: \"email\",\n            label: \"Email address\",\n            ...getFieldProps('email'),\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Phone Number\",\n            ...getFieldProps('phoneNumber'),\n            error: Boolean(touched.phoneNumber && errors.phoneNumber),\n            helperText: touched.phoneNumber && errors.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"School\",\n            ...getFieldProps('school'),\n            error: Boolean(touched.school && errors.school),\n            helperText: touched.school && errors.school\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"current-password\",\n            type: 'text',\n            label: \"Password\",\n            ...getFieldProps('password'),\n            InputProps: {},\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => {\n        setModalVisible(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4 align-items-center\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: \"User Added Successfully \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: setModalVisible(false)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), navigate('/dashboard/users/addUser'))\n                }, void 0, false);\n              },\n              children: \"Add New User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/users'),\n              children: \"Back To Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddUser, \"haNDDZyomaCOx4wIFpGtKe3WBmo=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/users/AddUser.js"],"names":["Yup","useState","useSnackbar","useFormik","Form","FormikProvider","Stack","TextField","IconButton","InputAdornment","Alert","Typography","LoadingButton","addUser","useNavigate","Button","Modal","BootstrapModal","Box","modalStyle","AddUser","navigate","modalVisible","setModalVisible","loader","setLoader","RegisterSchema","object","shape","name","string","min","max","required","phoneNumber","school","email","password","formik","initialValues","validationSchema","onSubmit","values","setErrors","setSubmitting","response","status","afterSubmit","message","error","console","errors","touched","handleSubmit","isSubmitting","getFieldProps","mb","Boolean","alignItems","display","flexDirection","marginRight","marginTop","mode"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport { Stack, TextField, IconButton, InputAdornment, Alert, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nimport { addUser } from 'src/api/Users/Users';\n// ----------------------------------------------------------------------\n\nimport { useNavigate } from 'react-router-dom'\n\n\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\n\nexport default function AddUser() {\n  const navigate = useNavigate()\n\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    phoneNumber: Yup.string().min(10, 'Too Short!').max(10, 'Too Long!').required('Phone Number required'),\n    school: Yup.string().min(3, 'Too Short!').max(50, 'Too Long!').required('School name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phoneNumber: '',\n      school: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      setSubmitting(true);\n      try {\n\n        const response = await addUser(values.email, values.password, values.name, values.phoneNumber, values.school);\n        if (response.status) {\n          setModalVisible(true)\n        } else {\n          setErrors({ afterSubmit: response.message });\n        }\n        setSubmitting(false);\n      } catch (error) {\n        console.error(error);\n        setErrors({ afterSubmit: error.message });\n        setSubmitting(false);\n      }\n    },\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <>\n      <Typography variant=\"h5\" sx={{ mb: 3 }}>\n        Add New User\n      </Typography>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n            {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}> */}\n            <TextField\n              fullWidth\n              label=\"Name\"\n              {...getFieldProps('name')}\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n            />\n\n            <TextField\n              fullWidth\n              autoComplete=\"username\"\n              type=\"email\"\n              label=\"Email address\"\n              {...getFieldProps('email')}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Phone Number\"\n              {...getFieldProps('phoneNumber')}\n              error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n              helperText={touched.phoneNumber && errors.phoneNumber}\n            />\n\n            <TextField\n              fullWidth\n              label=\"School\"\n              {...getFieldProps('school')}\n              error={Boolean(touched.school && errors.school)}\n              helperText={touched.school && errors.school}\n            />\n            {/* </Stack> */}\n\n            <TextField\n              fullWidth\n              autoComplete=\"current-password\"\n              type={'text'}\n              label=\"Password\"\n              {...getFieldProps('password')}\n              InputProps={{}}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n            />\n\n            <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Register\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n      <Modal\n        open={modalVisible}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onClose={() => {\n          setModalVisible(false);\n        }}\n      >\n        <Box sx={modalStyle}>\n          <BootstrapModal.Body>\n            <div className=\"text-center txt-5282F0 my-4 align-items-center\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n              <img src={'/Assets/modalPhoto.png'} />\n              <h3>{\"Success\"}</h3>\n              <h3 className=\"modalLowerText\">{\"User Added Successfully \"}</h3>\n            </div>\n            <div className=\"text-center mt-4 pb-3\">\n              <Button\n                variant=\"outlined\"\n\n                style={{ marginRight: 10, marginTop: 10 }}\n                onClick={() => {\n                  mode == 'add' ? (\n                    <>{(setModalVisible(false))}</>\n                  ) : (\n                    <>{(setModalVisible(false), navigate('/dashboard/users/addUser'))}</>\n                  );\n                }}\n              >\n                Add New User\n              </Button>\n              <Button\n                variant=\"outlined\"\n\n                style={{ marginRight: 10, marginTop: 10 }}\n                onClick={() => navigate('/dashboard/users')}\n              >\n                Back To Users\n              </Button>\n            </div>\n          </BootstrapModal.Body>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}