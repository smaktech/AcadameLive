{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\evaluation\\\\dynamic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { createQuestion } from '../../api/Question/Question';\nimport test from './image/logo.png';\nimport TextField from '@material-ui/core/TextField'; // import Button from '@material-ui/core/Button';\n\nimport { Button, Input } from '@mui/material';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form, Row, Card, Carousel } from 'react-bootstrap';\nimport './app.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dynfield from './dynfield';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Addmoreinput() {\n  _s();\n\n  const classes = useStyles();\n  const [question, setQuestion] = useState();\n  const [media, setMedia] = useState();\n  const [inputFields, setInputFields] = useState([{\n    type: '',\n    hint: '',\n    answer: '',\n    marks: ''\n  }]);\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl); // free memory when ever this component is unmounted\n\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n\n  const onSelectFile = e => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    } // I've kept this example simple by using the first image instead of multiple\n\n\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      type: '',\n      hint: '',\n      answer: '',\n      marks: ''\n    }]);\n  };\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  function addQuestion() {\n    createQuestion(question, selectedFile);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      onSubmit: handleSubmit,\n      children: inputFields.map(inputField => /*#__PURE__*/_jsxDEV(\"div\", {}, inputField.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addmoreinput, \"2Pjha11THdx31cAizipyfRFNM7s=\", false, function () {\n  return [useStyles];\n});\n\n_c = Addmoreinput;\nexport default Addmoreinput;\n{\n  /* <TextField\r\n                             name=\"lastName\"\r\n                             label=\"Last Name\"\r\n                             variant=\"filled\"\r\n                             value={inputField.lastName}\r\n                             onChange={event => handleChangeInput(inputField.id, event)}\r\n                         /> */\n}\n{\n  /* <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                             <RemoveIcon />\r\n                         </IconButton>\r\n                         <IconButton\r\n                             onClick={handleAddFields}\r\n                         >\r\n                             <AddIcon />\r\n                         </IconButton> */\n}\n{\n  /* <Button\r\n                     className={classes.button}\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     type=\"submit\"\r\n                     endIcon={<Icon>send</Icon>}\r\n                     onClick={handleSubmit}\r\n                 >Send</Button> */\n} //// 4 fields\n// <div className=\" col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3 mt-3\" controlId=\"exampleForm.ControlInput1\" >\n//                 <Form.Label>Type</Form.Label>\n//                 <Form.Select aria-label=\"Default select example\">\n//                     <option>Select</option>\n//                     <option>Option A</option>\n//                     <option>Option B</option>\n//                     <option>Option C</option>\n//                     <option>Option D</option>\n//                     <Form.Control type=\"text\" name='type' value={inputField.type}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//                 </Form.Select>\n//                 {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\n//             </Form.Group>\n//         </div>\n//         <div className=\"hint col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Hint</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='hint' value={inputField.hint}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>\n//         <div className=\"ans col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Answer</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='answer' value={inputField.answer}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>\n//         <div className=\"marks col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Marks</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='marks' value={inputField.marks}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Addmoreinput\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/dynamic.js"],"names":["React","useState","useEffect","Container","createQuestion","test","TextField","Button","Input","IconButton","RemoveIcon","AddIcon","Icon","v4","uuidv4","Form","Row","Card","Carousel","makeStyles","Dynfield","useStyles","theme","root","margin","spacing","button","Addmoreinput","classes","question","setQuestion","media","setMedia","inputFields","setInputFields","type","hint","answer","marks","selectedFile","setSelectedFile","preview","setPreview","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","e","target","files","length","handleSubmit","preventDefault","console","log","handleChangeInput","id","event","newInputFields","map","i","name","value","handleAddFields","handleRemoveFields","values","splice","findIndex","addQuestion","inputField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createQuestion} from '../../api/Question/Question'\r\nimport test from './image/logo.png';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\nimport { Button, Input } from '@mui/material'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Row, Card, Carousel } from 'react-bootstrap'\r\nimport './app.css'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dynfield from './dynfield';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n      },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\nfunction Addmoreinput() {\r\n    const classes = useStyles()\r\n    const [question, setQuestion] = useState()\r\n    const [media, setMedia] = useState();\r\n    const [inputFields, setInputFields] = useState([\r\n        { type: '', hint: '', answer: '', marks: '' },\r\n    ]);\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n\r\n        // free memory when ever this component is unmounted\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n\r\n    const onSelectFile = e => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n\r\n        // I've kept this example simple by using the first image instead of multiple\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n    };\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleAddFields = () => {\r\n        setInputFields([...inputFields, { type: '', hint: '', answer: '', marks: '' }])\r\n    }\r\n\r\n    const handleRemoveFields = id => {\r\n        const values = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n    }\r\n    function addQuestion() {\r\n        createQuestion(question, selectedFile)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <form className={classes.root} onSubmit={handleSubmit}>\r\n                {inputFields.map(inputField => (\r\n                    <div key={inputField.id}>\r\n                        {/* <TextField\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                            variant=\"filled\"\r\n                            value={inputField.firstName}\r\n                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                        /> */}\r\n                        {/* <div class=\"ques\">\r\n                            <Row>  <Form.Group className=\"mb-6 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                <Form.Label>Question</Form.Label>\r\n\r\n                                <Form.Control type=\"text\" value={question} onChange={(e) => setQuestion(e.target.value)}  as=\"textarea\" rows={5}   ></Form.Control>\r\n                            </Row>\r\n                            <Row>\r\n                                <div class='IV' >\r\n                                    <h1 class=\"ig\">Media</h1>\r\n                                    <Card style={{ backgroundColor: \"gray\" }} className='imght'>\r\n                                    <Form.Control type=\"file\"  onChange={onSelectFile} onChange1={(e) => setMedia(e.target.value)} />\r\n                                        {selectedFile && <img src={preview} width='80%' />}</Card>\r\n                                        \r\n                                </div>\r\n                                \r\n                            </Row>\r\n                            \r\n                            \r\n                        </div> */}\r\n                        {/* <Button className=\"btn btn-warning\" size='small' onClick={() => addQuestion()} variant=\"contained\">Save Question</Button> */}\r\n\r\n\r\n                        {/* <div class='btnadd'>\r\n                            <Button class=\" btn-secondary btn-sm\" onClick={handleAddFields}><AddIcon /></Button>\r\n                            \r\n                        </div> */}\r\n\r\n                        {/* <span> <Button class=\" btnsub btn-secondary btn-sm ml-3\" onClick={handleRemoveFields}><RemoveIcon /></Button> </span> */}\r\n\r\n\r\n                    </div>\r\n\r\n                ))}\r\n\r\n\r\n                {/* Answer in part checking */}\r\n\r\n                {/* <div class=\"ques\">\r\n                            <Form.Group className=\"mb-6 mt-3 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                            <Form.Label>Answer in Part</Form.Label>\r\n                            \r\n                           \r\n                        </div>\r\n                        <div>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control type=\"text\" name='marks'  ></Form.Control>\r\n                        </div> */}\r\n                {/* <div class='fieldhead'>\r\n                    <div class='type1'><Form.Label>Type</Form.Label></div>\r\n\r\n                    <div class='hint1'>  <Form.Label>Hint</Form.Label></div>\r\n                    <div class='marks1'>  <Form.Label>Marks</Form.Label></div>\r\n                    <div class='answer1'> <Form.Label>Answer</Form.Label></div>\r\n                </div> */}\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Addmoreinput;\r\n\r\n\r\n\r\n\r\n{/* <TextField\r\n                            name=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            variant=\"filled\"\r\n                            value={inputField.lastName}\r\n                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                        /> */}\r\n{/* <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                            <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={handleAddFields}\r\n                        >\r\n                            <AddIcon />\r\n                        </IconButton> */}\r\n\r\n{/* <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    endIcon={<Icon>send</Icon>}\r\n                    onClick={handleSubmit}\r\n                >Send</Button> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                //// 4 fields\r\n                // <div className=\" col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3 mt-3\" controlId=\"exampleForm.ControlInput1\" >\r\n                //                 <Form.Label>Type</Form.Label>\r\n                //                 <Form.Select aria-label=\"Default select example\">\r\n                //                     <option>Select</option>\r\n                //                     <option>Option A</option>\r\n                //                     <option>Option B</option>\r\n                //                     <option>Option C</option>\r\n                //                     <option>Option D</option>\r\n                //                     <Form.Control type=\"text\" name='type' value={inputField.type}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //                 </Form.Select>\r\n                //                 {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                //             </Form.Group>\r\n\r\n                //         </div>\r\n                //         <div className=\"hint col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Hint</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='hint' value={inputField.hint}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>\r\n                //         <div className=\"ans col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Answer</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='answer' value={inputField.answer}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>\r\n                //         <div className=\"marks col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Marks</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='marks' value={inputField.marks}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>"]},"metadata":{},"sourceType":"module"}