{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\general\\\\analytics\\\\AnalyticsOrderTimeline.js\";\nimport PropTypes from 'prop-types'; // @mui\n\nimport { Card, Typography, CardHeader, CardContent } from '@mui/material';\nimport { Timeline, TimelineDot, TimelineItem, TimelineContent, TimelineSeparator, TimelineConnector } from '@mui/lab'; // utils\n\nimport { fDateTime } from '../../../../utils/formatTime'; // _mock_\n\nimport { _analyticOrderTimeline } from '../../../../_mock'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnalyticsOrderTimeline() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      '& .MuiTimelineItem-missingOppositeContent:before': {\n        display: 'none'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Order Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Timeline, {\n        children: _analyticOrderTimeline.map((item, index) => /*#__PURE__*/_jsxDEV(OrderItem, {\n          item: item,\n          isLast: index === _analyticOrderTimeline.length - 1\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_c = AnalyticsOrderTimeline;\nOrderItem.propTypes = {\n  isLast: PropTypes.bool,\n  item: PropTypes.shape({\n    time: PropTypes.instanceOf(Date),\n    title: PropTypes.string,\n    type: PropTypes.string\n  })\n};\n\nfunction OrderItem(_ref) {\n  let {\n    item,\n    isLast\n  } = _ref;\n  const {\n    type,\n    title,\n    time\n  } = item;\n  return /*#__PURE__*/_jsxDEV(TimelineItem, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineSeparator, {\n      children: [/*#__PURE__*/_jsxDEV(TimelineDot, {\n        color: type === 'order1' && 'primary' || type === 'order2' && 'success' || type === 'order3' && 'info' || type === 'order4' && 'warning' || 'error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), isLast ? null : /*#__PURE__*/_jsxDEV(TimelineConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: fDateTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = OrderItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnalyticsOrderTimeline\");\n$RefreshReg$(_c2, \"OrderItem\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/general/analytics/AnalyticsOrderTimeline.js"],"names":["PropTypes","Card","Typography","CardHeader","CardContent","Timeline","TimelineDot","TimelineItem","TimelineContent","TimelineSeparator","TimelineConnector","fDateTime","_analyticOrderTimeline","AnalyticsOrderTimeline","display","map","item","index","length","id","OrderItem","propTypes","isLast","bool","shape","time","instanceOf","Date","title","string","type","color"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,WAAvC,QAA0D,eAA1D;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,YAAhC,EAA8CC,eAA9C,EAA+DC,iBAA/D,EAAkFC,iBAAlF,QAA2G,UAA3G,C,CACA;;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CACA;;AACA,SAASC,sBAAT,QAAuC,mBAAvC,C,CAEA;;;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAC/C,sBACE,QAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACF,0DAAoD;AAClDC,QAAAA,OAAO,EAAE;AADyC;AADlD,KADN;AAAA,4BAOE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,WAAD;AAAA,6BACE,QAAC,QAAD;AAAA,kBACGF,sBAAsB,CAACG,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,kBAC1B,QAAC,SAAD;AAAyB,UAAA,IAAI,EAAED,IAA/B;AAAqC,UAAA,MAAM,EAAEC,KAAK,KAAKL,sBAAsB,CAACM,MAAvB,GAAgC;AAAvF,WAAgBF,IAAI,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;;KArBwBN,sB;AAuBxBO,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,MAAM,EAAEtB,SAAS,CAACuB,IADE;AAEpBP,EAAAA,IAAI,EAAEhB,SAAS,CAACwB,KAAV,CAAgB;AACpBC,IAAAA,IAAI,EAAEzB,SAAS,CAAC0B,UAAV,CAAqBC,IAArB,CADc;AAEpBC,IAAAA,KAAK,EAAE5B,SAAS,CAAC6B,MAFG;AAGpBC,IAAAA,IAAI,EAAE9B,SAAS,CAAC6B;AAHI,GAAhB;AAFc,CAAtB;;AASA,SAAST,SAAT,OAAqC;AAAA,MAAlB;AAAEJ,IAAAA,IAAF;AAAQM,IAAAA;AAAR,GAAkB;AACnC,QAAM;AAAEQ,IAAAA,IAAF;AAAQF,IAAAA,KAAR;AAAeH,IAAAA;AAAf,MAAwBT,IAA9B;AACA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,iBAAD;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,KAAK,EACFc,IAAI,KAAK,QAAT,IAAqB,SAAtB,IACCA,IAAI,KAAK,QAAT,IAAqB,SADtB,IAECA,IAAI,KAAK,QAAT,IAAqB,MAFtB,IAGCA,IAAI,KAAK,QAAT,IAAqB,SAHtB,IAIA;AANJ;AAAA;AAAA;AAAA;AAAA,cADF,EAUGR,MAAM,GAAG,IAAH,gBAAU,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAVnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,eAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAA,kBAAiCM;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAA8B,QAAA,EAAE,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAA,kBACGpB,SAAS,CAACc,IAAD;AADZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;MAxBQL,S","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Card, Typography, CardHeader, CardContent } from '@mui/material';\nimport { Timeline, TimelineDot, TimelineItem, TimelineContent, TimelineSeparator, TimelineConnector } from '@mui/lab';\n// utils\nimport { fDateTime } from '../../../../utils/formatTime';\n// _mock_\nimport { _analyticOrderTimeline } from '../../../../_mock';\n\n// ----------------------------------------------------------------------\n\nexport default function AnalyticsOrderTimeline() {\n  return (\n    <Card\n      sx={{\n        '& .MuiTimelineItem-missingOppositeContent:before': {\n          display: 'none',\n        },\n      }}\n    >\n      <CardHeader title=\"Order Timeline\" />\n      <CardContent>\n        <Timeline>\n          {_analyticOrderTimeline.map((item, index) => (\n            <OrderItem key={item.id} item={item} isLast={index === _analyticOrderTimeline.length - 1} />\n          ))}\n        </Timeline>\n      </CardContent>\n    </Card>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nOrderItem.propTypes = {\n  isLast: PropTypes.bool,\n  item: PropTypes.shape({\n    time: PropTypes.instanceOf(Date),\n    title: PropTypes.string,\n    type: PropTypes.string,\n  }),\n};\n\nfunction OrderItem({ item, isLast }) {\n  const { type, title, time } = item;\n  return (\n    <TimelineItem>\n      <TimelineSeparator>\n        <TimelineDot\n          color={\n            (type === 'order1' && 'primary') ||\n            (type === 'order2' && 'success') ||\n            (type === 'order3' && 'info') ||\n            (type === 'order4' && 'warning') ||\n            'error'\n          }\n        />\n        {isLast ? null : <TimelineConnector />}\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography variant=\"subtitle2\">{title}</Typography>\n        <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n          {fDateTime(time)}\n        </Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}