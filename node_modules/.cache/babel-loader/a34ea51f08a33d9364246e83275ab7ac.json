{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\extra\\\\form\\\\ReactHookForm.js\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useState, useRef } from 'react'; // @mui\n\nimport { Stack, Button, Checkbox, TextField, Typography, IconButton, InputAdornment, FormHelperText, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport DatePicker from '@mui/lab/DatePicker'; // utils\n\nimport { fData } from '../../../../utils/formatNumber';\nimport { fTimestamp } from '../../../../utils/formatTime'; // components\n\nimport Editor from '../../../../components/editor';\nimport Iconify from '../../../../components/Iconify'; //\n\nimport { FormSchema, defaultValues } from '.'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactHookForm() {\n  _s();\n\n  var _errors$startDate, _errors$endDate, _errors$quillEditor, _watchAllFields$photo, _watchAllFields$photo2;\n\n  const fileInputRef = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    watch,\n    reset,\n    control,\n    register,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting,\n      isDirty\n    }\n  } = useForm({\n    mode: 'onTouched',\n    resolver: yupResolver(FormSchema),\n    defaultValues\n  });\n  const watchAllFields = watch();\n\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  const handleClickAttachPhoto = () => {\n    var _fileInputRef$current;\n\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n\n  const onSubmit = async data => {\n    var _data$photo;\n\n    await new Promise(resolve => setTimeout(resolve, 500));\n    alert(JSON.stringify({ ...data,\n      photo: (_data$photo = data.photo) === null || _data$photo === void 0 ? void 0 : _data$photo.name,\n      startDate: data.startDate && fTimestamp(data.startDate),\n      endDate: data.endDate && fTimestamp(data.endDate)\n    }, null, 2));\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"fullName\",\n        control: control,\n        render: _ref => {\n          let {\n            field,\n            fieldState: {\n              error\n            }\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Full Name\",\n            error: Boolean(error),\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"email\",\n        control: control,\n        render: _ref2 => {\n          let {\n            field,\n            fieldState: {\n              error\n            }\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Email address\",\n            error: Boolean(error),\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"age\",\n        control: control,\n        render: _ref3 => {\n          let {\n            field,\n            fieldState: {\n              error\n            }\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Age\",\n            error: Boolean(error),\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: {\n            xs: 2,\n            sm: 3\n          },\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"startDate\",\n            control: control,\n            render: _ref4 => {\n              let {\n                field,\n                fieldState: {\n                  error\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(DatePicker, { ...field,\n                label: \"Start date\",\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  ...params,\n                  error: Boolean(error)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 44\n                }, this),\n                inputFormat: \"dd/MM/yyyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"endDate\",\n            control: control,\n            render: _ref5 => {\n              let {\n                field,\n                fieldState: {\n                  error\n                }\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(DatePicker, { ...field,\n                label: \"End date\",\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  ...params,\n                  error: Boolean(error)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 44\n                }, this),\n                inputFormat: \"dd/MM/yyyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), Boolean(errors.startDate) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          sx: {\n            px: 2\n          },\n          error: true,\n          children: (_errors$startDate = errors.startDate) === null || _errors$startDate === void 0 ? void 0 : _errors$startDate.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), Boolean(errors.endDate) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          sx: {\n            px: 2\n          },\n          error: true,\n          children: (_errors$endDate = errors.endDate) === null || _errors$endDate === void 0 ? void 0 : _errors$endDate.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"password\",\n        control: control,\n        render: _ref6 => {\n          let {\n            field,\n            fieldState: {\n              error\n            }\n          } = _ref6;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Password\",\n            type: showPassword ? 'text' : 'password',\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleShowPassword,\n                  edge: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(Iconify, {\n                    icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            },\n            error: Boolean(error),\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"confirmPassword\",\n        control: control,\n        render: _ref7 => {\n          let {\n            field,\n            fieldState: {\n              error\n            }\n          } = _ref7;\n          return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n            label: \"Confirm Password\",\n            type: showPassword ? 'text' : 'password',\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleShowPassword,\n                  edge: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(Iconify, {\n                    icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            },\n            error: Boolean(error),\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            color: 'text.secondary'\n          },\n          gutterBottom: true,\n          children: \"Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"quillEditor\",\n          control: control,\n          render: _ref8 => {\n            let {\n              field,\n              fieldState: {\n                error\n              }\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(Editor, {\n              id: \"hook-content\",\n              value: field.value,\n              onChange: field.onChange,\n              error: Boolean(error)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), Boolean(errors.quillEditor) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          sx: {\n            px: 2,\n            textTransform: 'capitalize'\n          },\n          children: (_errors$quillEditor = errors.quillEditor) === null || _errors$quillEditor === void 0 ? void 0 : _errors$quillEditor.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"warning\",\n            variant: \"contained\",\n            onClick: handleClickAttachPhoto,\n            startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: 'eva:cloud-upload-fill'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 26\n            }, this),\n            children: \"Upload photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [((_watchAllFields$photo = watchAllFields.photo) === null || _watchAllFields$photo === void 0 ? void 0 : _watchAllFields$photo.name) && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: watchAllFields.photo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 46\n            }, this), ((_watchAllFields$photo2 = watchAllFields.photo) === null || _watchAllFields$photo2 === void 0 ? void 0 : _watchAllFields$photo2.size) && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: fData(watchAllFields.photo.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('photo'),\n            ref: fileInputRef,\n            type: \"file\",\n            onChange: event => {\n              var _event$target$files;\n\n              const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n              setValue('photo', file);\n            },\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), errors.photo && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          sx: {\n            px: 2,\n            display: 'block'\n          },\n          error: true,\n          children: errors.photo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"terms\",\n          control: control,\n          render: _ref9 => {\n            let {\n              field\n            } = _ref9;\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, { ...field,\n                checked: field.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 42\n              }, this),\n              label: \" Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), errors.terms && /*#__PURE__*/_jsxDEV(FormHelperText, {\n          sx: {\n            px: 2\n          },\n          error: true,\n          children: errors.terms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        color: \"info\",\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        disabled: !isDirty,\n        children: \"Submit React Hook Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactHookForm, \"ZR6shwgOFBpRqbXEdIwT6KgCm00=\", false, function () {\n  return [useForm];\n});\n\n_c = ReactHookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactHookForm\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/form/ReactHookForm.js"],"names":["useForm","Controller","yupResolver","useState","useRef","Stack","Button","Checkbox","TextField","Typography","IconButton","InputAdornment","FormHelperText","FormControlLabel","LoadingButton","DatePicker","fData","fTimestamp","Editor","Iconify","FormSchema","defaultValues","ReactHookForm","fileInputRef","showPassword","setShowPassword","watch","reset","control","register","setValue","handleSubmit","formState","errors","isSubmitting","isDirty","mode","resolver","watchAllFields","handleShowPassword","show","handleClickAttachPhoto","current","click","onSubmit","data","Promise","resolve","setTimeout","alert","JSON","stringify","photo","name","startDate","endDate","field","fieldState","error","Boolean","message","xs","sm","params","px","endAdornment","color","value","onChange","quillEditor","textTransform","size","event","file","target","files","display","terms"],"mappings":"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","sourcesContent":["import { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useState, useRef } from 'react';\n// @mui\nimport {\n  Stack,\n  Button,\n  Checkbox,\n  TextField,\n  Typography,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport DatePicker from '@mui/lab/DatePicker';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\nimport { fTimestamp } from '../../../../utils/formatTime';\n// components\nimport Editor from '../../../../components/editor';\nimport Iconify from '../../../../components/Iconify';\n//\nimport { FormSchema, defaultValues } from '.';\n\n// ----------------------------------------------------------------------\n\nexport default function ReactHookForm() {\n  const fileInputRef = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const {\n    watch,\n    reset,\n    control,\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors, isSubmitting, isDirty },\n  } = useForm({\n    mode: 'onTouched',\n    resolver: yupResolver(FormSchema),\n    defaultValues,\n  });\n\n  const watchAllFields = watch();\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  const handleClickAttachPhoto = () => {\n    fileInputRef.current?.click();\n  };\n\n  const onSubmit = async (data) => {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    alert(\n      JSON.stringify(\n        {\n          ...data,\n          photo: data.photo?.name,\n          startDate: data.startDate && fTimestamp(data.startDate),\n          endDate: data.endDate && fTimestamp(data.endDate),\n        },\n        null,\n        2\n      )\n    );\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <Controller\n          name=\"fullName\"\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField {...field} label=\"Full Name\" error={Boolean(error)} helperText={error?.message} />\n          )}\n        />\n\n        <Controller\n          name=\"email\"\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField {...field} label=\"Email address\" error={Boolean(error)} helperText={error?.message} />\n          )}\n        />\n\n        <Controller\n          name=\"age\"\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField {...field} label=\"Age\" error={Boolean(error)} helperText={error?.message} />\n          )}\n        />\n\n        <Stack spacing={1}>\n          <Stack spacing={{ xs: 2, sm: 3 }} direction={{ xs: 'column', sm: 'row' }}>\n            <Controller\n              name=\"startDate\"\n              control={control}\n              render={({ field, fieldState: { error } }) => (\n                <DatePicker\n                  {...field}\n                  label=\"Start date\"\n                  renderInput={(params) => <TextField fullWidth {...params} error={Boolean(error)} />}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n              )}\n            />\n\n            <Controller\n              name=\"endDate\"\n              control={control}\n              render={({ field, fieldState: { error } }) => (\n                <DatePicker\n                  {...field}\n                  label=\"End date\"\n                  renderInput={(params) => <TextField fullWidth {...params} error={Boolean(error)} />}\n                  inputFormat=\"dd/MM/yyyy\"\n                />\n              )}\n            />\n          </Stack>\n\n          {Boolean(errors.startDate) && (\n            <FormHelperText sx={{ px: 2 }} error>\n              {errors.startDate?.message}\n            </FormHelperText>\n          )}\n\n          {Boolean(errors.endDate) && (\n            <FormHelperText sx={{ px: 2 }} error>\n              {errors.endDate?.message}\n            </FormHelperText>\n          )}\n        </Stack>\n\n        <Controller\n          name=\"password\"\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField\n              {...field}\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleShowPassword} edge=\"end\">\n                      <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              error={Boolean(error)}\n              helperText={error?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"confirmPassword\"\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField\n              {...field}\n              label=\"Confirm Password\"\n              type={showPassword ? 'text' : 'password'}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleShowPassword} edge=\"end\">\n                      <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              error={Boolean(error)}\n              helperText={error?.message}\n            />\n          )}\n        />\n\n        <div>\n          <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }} gutterBottom>\n            Editor\n          </Typography>\n          <Controller\n            name=\"quillEditor\"\n            control={control}\n            render={({ field, fieldState: { error } }) => (\n              <Editor id=\"hook-content\" value={field.value} onChange={field.onChange} error={Boolean(error)} />\n            )}\n          />\n          {Boolean(errors.quillEditor) && (\n            <FormHelperText error sx={{ px: 2, textTransform: 'capitalize' }}>\n              {errors.quillEditor?.message}\n            </FormHelperText>\n          )}\n        </div>\n\n        <div>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={3}>\n            <Button\n              color=\"warning\"\n              variant=\"contained\"\n              onClick={handleClickAttachPhoto}\n              startIcon={<Iconify icon={'eva:cloud-upload-fill'} />}\n            >\n              Upload photo\n            </Button>\n\n            <div>\n              {watchAllFields.photo?.name && <Typography variant=\"subtitle2\">{watchAllFields.photo.name}</Typography>}\n              {watchAllFields.photo?.size && (\n                <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                  {fData(watchAllFields.photo.size)}\n                </Typography>\n              )}\n            </div>\n\n            <input\n              {...register('photo')}\n              ref={fileInputRef}\n              type=\"file\"\n              onChange={(event) => {\n                const file = event.target.files?.[0];\n                setValue('photo', file);\n              }}\n              style={{ display: 'none' }}\n            />\n          </Stack>\n\n          {errors.photo && (\n            <FormHelperText sx={{ px: 2, display: 'block' }} error>\n              {errors.photo.message}\n            </FormHelperText>\n          )}\n        </div>\n\n        <div>\n          <Controller\n            name=\"terms\"\n            control={control}\n            render={({ field }) => (\n              <FormControlLabel control={<Checkbox {...field} checked={field.value} />} label=\" Terms and Conditions\" />\n            )}\n          />\n\n          {errors.terms && (\n            <FormHelperText sx={{ px: 2 }} error>\n              {errors.terms.message}\n            </FormHelperText>\n          )}\n        </div>\n\n        <LoadingButton\n          fullWidth\n          color=\"info\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n          disabled={!isDirty}\n        >\n          Submit React Hook Form\n        </LoadingButton>\n      </Stack>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}