{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\user\\\\account\\\\AccountSocialLinks.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik'; // @mui\n\nimport { Stack, Card, TextField, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // components\n\nimport Iconify from '../../../../components/Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCIAL_LINKS = [{\n  value: 'facebookLink',\n  icon: /*#__PURE__*/_jsxDEV(Iconify, {\n    icon: 'eva:facebook-fill',\n    width: 24,\n    height: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this)\n}, {\n  value: 'instagramLink',\n  icon: /*#__PURE__*/_jsxDEV(Iconify, {\n    icon: 'ant-design:instagram-filled',\n    width: 24,\n    height: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this)\n}, {\n  value: 'linkedinLink',\n  icon: /*#__PURE__*/_jsxDEV(Iconify, {\n    icon: 'eva:linkedin-fill',\n    width: 24,\n    height: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this)\n}, {\n  value: 'twitterLink',\n  icon: /*#__PURE__*/_jsxDEV(Iconify, {\n    icon: 'eva:twitter-fill',\n    width: 24,\n    height: 24\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }, this)\n}]; // ----------------------------------------------------------------------\n\nAccountSocialLinks.propTypes = {\n  myProfile: PropTypes.shape({\n    facebookLink: PropTypes.string,\n    instagramLink: PropTypes.string,\n    linkedinLink: PropTypes.string,\n    twitterLink: PropTypes.string\n  })\n};\nexport default function AccountSocialLinks(_ref) {\n  _s();\n\n  let {\n    myProfile\n  } = _ref;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      facebookLink: myProfile.facebookLink,\n      instagramLink: myProfile.instagramLink,\n      linkedinLink: myProfile.linkedinLink,\n      twitterLink: myProfile.twitterLink\n    },\n    onSubmit: async (values, _ref2) => {\n      let {\n        setSubmitting\n      } = _ref2;\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setSubmitting(false);\n      enqueueSnackbar('Save success', {\n        variant: 'success'\n      });\n    }\n  });\n  const {\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          alignItems: \"flex-end\",\n          children: [SOCIAL_LINKS.map(link => /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            ...getFieldProps(link.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: link.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 35\n              }, this)\n            }\n          }, link.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountSocialLinks, \"BjjR/Kr9DAe96J/lcJGFgDHC8O4=\", false, function () {\n  return [useSnackbar, useFormik];\n});\n\n_c = AccountSocialLinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSocialLinks\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/user/account/AccountSocialLinks.js"],"names":["PropTypes","useSnackbar","useFormik","Form","FormikProvider","Stack","Card","TextField","InputAdornment","LoadingButton","Iconify","SOCIAL_LINKS","value","icon","AccountSocialLinks","propTypes","myProfile","shape","facebookLink","string","instagramLink","linkedinLink","twitterLink","enqueueSnackbar","formik","enableReinitialize","initialValues","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","variant","handleSubmit","isSubmitting","getFieldProps","p","map","link","startAdornment"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport { Stack, Card, TextField, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nconst SOCIAL_LINKS = [\n  {\n    value: 'facebookLink',\n    icon: <Iconify icon={'eva:facebook-fill'} width={24} height={24} />,\n  },\n  {\n    value: 'instagramLink',\n    icon: <Iconify icon={'ant-design:instagram-filled'} width={24} height={24} />,\n  },\n  {\n    value: 'linkedinLink',\n    icon: <Iconify icon={'eva:linkedin-fill'} width={24} height={24} />,\n  },\n  {\n    value: 'twitterLink',\n    icon: <Iconify icon={'eva:twitter-fill'} width={24} height={24} />,\n  },\n];\n\n// ----------------------------------------------------------------------\n\nAccountSocialLinks.propTypes = {\n  myProfile: PropTypes.shape({\n    facebookLink: PropTypes.string,\n    instagramLink: PropTypes.string,\n    linkedinLink: PropTypes.string,\n    twitterLink: PropTypes.string,\n  }),\n};\n\nexport default function AccountSocialLinks({ myProfile }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      facebookLink: myProfile.facebookLink,\n      instagramLink: myProfile.instagramLink,\n      linkedinLink: myProfile.linkedinLink,\n      twitterLink: myProfile.twitterLink,\n    },\n    onSubmit: async (values, { setSubmitting }) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      setSubmitting(false);\n      enqueueSnackbar('Save success', { variant: 'success' });\n    },\n  });\n\n  const { handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3} alignItems=\"flex-end\">\n            {SOCIAL_LINKS.map((link) => (\n              <TextField\n                key={link.value}\n                fullWidth\n                {...getFieldProps(link.value)}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">{link.icon}</InputAdornment>,\n                }}\n              />\n            ))}\n\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Save Changes\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}