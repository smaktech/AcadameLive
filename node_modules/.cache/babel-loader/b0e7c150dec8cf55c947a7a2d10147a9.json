{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\LightboxModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox'; // @mui\n\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LightboxModalStyles() {\n  _s();\n\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n  const ICON_SIZE = 32;\n  const ICON_COLOR = theme.palette.grey[600].replace('#', '');\n\n  const getIcon = icon => `url(https://api.iconify.design/carbon/${icon}.svg?color=%23${ICON_COLOR}&width=${ICON_SIZE}&height=${ICON_SIZE})`;\n\n  const Icon = icon => ({\n    opacity: 1,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    backgroundImage: `unset`,\n    backgroundColor: 'transparent',\n    transition: theme.transitions.create('opacity'),\n    '&:before': {\n      display: 'block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      content: getIcon(icon)\n    },\n    '&:hover': {\n      opacity: 0.72\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(GlobalStyles, {\n    styles: {\n      '& .ReactModalPortal': {\n        '& .ril__outer': {\n          backgroundColor: alpha(theme.palette.grey[900], 0.96)\n        },\n        // Toolbar\n        '& .ril__toolbar': {\n          height: 'auto !important',\n          padding: theme.spacing(2, 3),\n          backgroundColor: 'transparent'\n        },\n        '& .ril__toolbarLeftSide': {\n          display: 'none'\n        },\n        '& .ril__toolbarRightSide': {\n          height: 'auto !important',\n          padding: 0,\n          flexGrow: 1,\n          display: 'flex',\n          alignItems: 'center',\n          '& li': {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          '& li:first-of-type': {\n            flexGrow: 1\n          },\n          '& li:not(:first-of-type)': {\n            width: 40,\n            height: 40,\n            justifyContent: 'center',\n            marginLeft: theme.spacing(2)\n          }\n        },\n        // Button\n        '& button:focus': {\n          outline: 'none'\n        },\n        '& .ril__toolbarRightSide button': {\n          width: '100%',\n          height: '100%',\n          '&.ril__zoomInButton': Icon('zoom-in'),\n          '&.ril__zoomOutButton': Icon('zoom-out'),\n          '&.ril__closeButton': Icon('close')\n        },\n        '& .ril__navButtons': {\n          padding: theme.spacing(3),\n          '&.ril__navButtonPrev': {\n            right: 'auto',\n            left: theme.spacing(2),\n            ...Icon(isRTL ? 'arrow-right' : 'arrow-left')\n          },\n          '&.ril__navButtonNext': {\n            left: 'auto',\n            right: theme.spacing(2),\n            ...Icon(isRTL ? 'arrow-left' : 'arrow-right')\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LightboxModalStyles, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = LightboxModalStyles;\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default function LightboxModal(_ref) {\n  _s2();\n\n  let {\n    images,\n    photoIndex,\n    setPhotoIndex,\n    isOpen,\n    ...other\n  } = _ref;\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: `${photoIndex + 1} / ${images.length}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }, this);\n\n  const toolbarButtons = [showIndex];\n  const customStyles = {\n    overlay: {\n      zIndex: 9999\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LightboxModalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n      animationDuration: 160,\n      nextSrc: images[(photoIndex + 1) % images.length],\n      prevSrc: images[(photoIndex + images.length - 1) % images.length],\n      onMovePrevRequest: () => setPhotoIndex((photoIndex + images.length - 1) % images.length),\n      onMoveNextRequest: () => setPhotoIndex((photoIndex + 1) % images.length),\n      toolbarButtons: toolbarButtons,\n      reactModalStyle: customStyles,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(LightboxModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = LightboxModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LightboxModalStyles\");\n$RefreshReg$(_c2, \"LightboxModal\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/LightboxModal.js"],"names":["PropTypes","useEffect","Lightbox","useTheme","alpha","Typography","GlobalStyles","LightboxModalStyles","theme","isRTL","direction","ICON_SIZE","ICON_COLOR","palette","grey","replace","getIcon","icon","Icon","opacity","alignItems","display","justifyContent","backgroundImage","backgroundColor","transition","transitions","create","width","height","content","padding","spacing","flexGrow","marginLeft","outline","right","left","LightboxModal","propTypes","images","array","isRequired","photoIndex","number","setPhotoIndex","func","isOpen","bool","other","document","body","style","overflow","showIndex","length","toolbarButtons","customStyles","overlay","zIndex"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Typography, GlobalStyles } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nfunction LightboxModalStyles() {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  const ICON_SIZE = 32;\n  const ICON_COLOR = theme.palette.grey[600].replace('#', '');\n\n  const getIcon = (icon) =>\n    `url(https://api.iconify.design/carbon/${icon}.svg?color=%23${ICON_COLOR}&width=${ICON_SIZE}&height=${ICON_SIZE})`;\n\n  const Icon = (icon) => ({\n    opacity: 1,\n    alignItems: 'center',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    backgroundImage: `unset`,\n    backgroundColor: 'transparent',\n    transition: theme.transitions.create('opacity'),\n    '&:before': {\n      display: 'block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      content: getIcon(icon),\n    },\n    '&:hover': {\n      opacity: 0.72,\n    },\n  });\n\n  return (\n    <GlobalStyles\n      styles={{\n        '& .ReactModalPortal': {\n          '& .ril__outer': {\n            backgroundColor: alpha(theme.palette.grey[900], 0.96),\n          },\n\n          // Toolbar\n          '& .ril__toolbar': {\n            height: 'auto !important',\n            padding: theme.spacing(2, 3),\n            backgroundColor: 'transparent',\n          },\n          '& .ril__toolbarLeftSide': { display: 'none' },\n          '& .ril__toolbarRightSide': {\n            height: 'auto !important',\n            padding: 0,\n            flexGrow: 1,\n            display: 'flex',\n            alignItems: 'center',\n            '& li': {\n              display: 'flex',\n              alignItems: 'center',\n            },\n            '& li:first-of-type': {\n              flexGrow: 1,\n            },\n            '& li:not(:first-of-type)': {\n              width: 40,\n              height: 40,\n              justifyContent: 'center',\n              marginLeft: theme.spacing(2),\n            },\n          },\n\n          // Button\n          '& button:focus': { outline: 'none' },\n          '& .ril__toolbarRightSide button': {\n            width: '100%',\n            height: '100%',\n            '&.ril__zoomInButton': Icon('zoom-in'),\n            '&.ril__zoomOutButton': Icon('zoom-out'),\n            '&.ril__closeButton': Icon('close'),\n          },\n          '& .ril__navButtons': {\n            padding: theme.spacing(3),\n            '&.ril__navButtonPrev': {\n              right: 'auto',\n              left: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-right' : 'arrow-left'),\n            },\n            '&.ril__navButtonNext': {\n              left: 'auto',\n              right: theme.spacing(2),\n              ...Icon(isRTL ? 'arrow-left' : 'arrow-right'),\n            },\n          },\n        },\n      }}\n    />\n  );\n}\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, ...other }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n\n  const customStyles = {\n    overlay: {\n      zIndex: 9999,\n    },\n  };\n\n  return (\n    <>\n      <LightboxModalStyles />\n\n      {isOpen && (\n        <Lightbox\n          animationDuration={160}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}