{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';// ----------------------------------------------------------------------\nexport default function useCountdown(date){var _useState=useState({days:'00',hours:'00',minutes:'00',seconds:'00'}),_useState2=_slicedToArray(_useState,2),countdown=_useState2[0],setCountdown=_useState2[1];useEffect(function(){var interval=setInterval(function(){return setNewTime();},1000);return function(){return clearInterval(interval);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var setNewTime=function setNewTime(){var startTime=date;var endTime=new Date();var distanceToNow=startTime-endTime;var getDays=Math.floor(distanceToNow/(1000*60*60*24));var getHours=\"0\".concat(Math.floor(distanceToNow%(1000*60*60*24)/(1000*60*60))).slice(-2);var getMinutes=\"0\".concat(Math.floor(distanceToNow%(1000*60*60)/(1000*60))).slice(-2);var getSeconds=\"0\".concat(Math.floor(distanceToNow%(1000*60)/1000)).slice(-2);setCountdown({days:getDays||'000',hours:getHours||'000',minutes:getMinutes||'000',seconds:getSeconds||'000'});};return countdown;}// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/hooks/useCountdown.js"],"names":["useState","useEffect","useCountdown","date","days","hours","minutes","seconds","countdown","setCountdown","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","getDays","Math","floor","getHours","slice","getMinutes","getSeconds"],"mappings":"gKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,IAAtB,CAA4B,CACzC,cAAkCH,QAAQ,CAAC,CACzCI,IAAI,CAAE,IADmC,CAEzCC,KAAK,CAAE,IAFkC,CAGzCC,OAAO,CAAE,IAHgC,CAIzCC,OAAO,CAAE,IAJgC,CAAD,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAOAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,QAAQ,CAAGC,WAAW,CAAC,iBAAMC,CAAAA,UAAU,EAAhB,EAAD,CAAqB,IAArB,CAA5B,CACA,MAAO,kBAAMC,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACA;AACD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAME,CAAAA,SAAS,CAAGX,IAAlB,CACA,GAAMY,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,EAAhB,CACA,GAAMC,CAAAA,aAAa,CAAGH,SAAS,CAAGC,OAAlC,CAEA,GAAMG,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,EAAI,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAArB,CAAxB,CAAhB,CACA,GAAMI,CAAAA,QAAQ,CAAG,WAAIF,IAAI,CAACC,KAAL,CAAYH,aAAa,EAAI,KAAO,EAAP,CAAY,EAAZ,CAAiB,EAArB,CAAd,EAA2C,KAAO,EAAP,CAAY,EAAvD,CAAX,CAAJ,EAA6EK,KAA7E,CAAmF,CAAC,CAApF,CAAjB,CACA,GAAMC,CAAAA,UAAU,CAAG,WAAIJ,IAAI,CAACC,KAAL,CAAYH,aAAa,EAAI,KAAO,EAAP,CAAY,EAAhB,CAAd,EAAsC,KAAO,EAA7C,CAAX,CAAJ,EAAmEK,KAAnE,CAAyE,CAAC,CAA1E,CAAnB,CACA,GAAME,CAAAA,UAAU,CAAG,WAAIL,IAAI,CAACC,KAAL,CAAYH,aAAa,EAAI,KAAO,EAAX,CAAd,CAAgC,IAA3C,CAAJ,EAAuDK,KAAvD,CAA6D,CAAC,CAA9D,CAAnB,CAEAb,YAAY,CAAC,CACXL,IAAI,CAAEc,OAAO,EAAI,KADN,CAEXb,KAAK,CAAEgB,QAAQ,EAAI,KAFR,CAGXf,OAAO,CAAEiB,UAAU,EAAI,KAHZ,CAIXhB,OAAO,CAAEiB,UAAU,EAAI,KAJZ,CAAD,CAAZ,CAMD,CAhBD,CAkBA,MAAOhB,CAAAA,SAAP,CACD,CAED;AACA","sourcesContent":["import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCountdown(date) {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setNewTime = () => {\n    const startTime = date;\n    const endTime = new Date();\n    const distanceToNow = startTime - endTime;\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n    const getHours = `0${Math.floor((distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}`.slice(-2);\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000'\n    });\n  };\n\n  return countdown;\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n"]},"metadata":{},"sourceType":"module"}