{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\extra\\\\animate\\\\dialog\\\\ContainerView.js\";\nimport PropTypes from 'prop-types'; // @mui\n\nimport { Paper, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@mui/material'; // components\n\nimport { DialogAnimate } from '../../../../../components/animate'; //\n\nimport getVariant from '../getVariant'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nContainerView.propTypes = {\n  isOpen: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  selectVariant: PropTypes.string\n};\nexport default function ContainerView(_ref) {\n  let {\n    isOpen,\n    onOpen,\n    onClose,\n    selectVariant,\n    ...other\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: 480,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.neutral'\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onOpen,\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogAnimate, {\n      open: isOpen,\n      onClose: onClose,\n      variants: getVariant(selectVariant),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: onClose,\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = ContainerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerView\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/animate/dialog/ContainerView.js"],"names":["PropTypes","Paper","Button","DialogTitle","DialogActions","DialogContent","DialogContentText","DialogAnimate","getVariant","ContainerView","propTypes","isOpen","bool","onOpen","func","onClose","selectVariant","string","other","height","display","alignItems","justifyContent","bgcolor"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,aAArC,EAAoDC,aAApD,EAAmEC,iBAAnE,QAA4F,eAA5F,C,CACA;;AACA,SAASC,aAAT,QAA8B,mCAA9B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,MAAM,EAAEX,SAAS,CAACY,IADM;AAExBC,EAAAA,MAAM,EAAEb,SAAS,CAACc,IAFM;AAGxBC,EAAAA,OAAO,EAAEf,SAAS,CAACc,IAHK;AAIxBE,EAAAA,aAAa,EAAEhB,SAAS,CAACiB;AAJD,CAA1B;AAOA,eAAe,SAASR,aAAT,OAA6E;AAAA,MAAtD;AAAEE,IAAAA,MAAF;AAAUE,IAAAA,MAAV;AAAkBE,IAAAA,OAAlB;AAA2BC,IAAAA,aAA3B;AAA0C,OAAGE;AAA7C,GAAsD;AAC1F,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,MAAM,EAAE,GADN;AAEFC,MAAAA,OAAO,EAAE,MAFP;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE;AALP,KADN;AAAA,OAQML,KARN;AAAA,4BAUE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEL,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEF,MAArB;AAA6B,MAAA,OAAO,EAAEI,OAAtC;AAA+C,MAAA,QAAQ,EAAEP,UAAU,CAACQ,aAAD,CAAnE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,OAArC;AAA8C,UAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;KAhCuBN,a","sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport { Paper, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@mui/material';\n// components\nimport { DialogAnimate } from '../../../../../components/animate';\n//\nimport getVariant from '../getVariant';\n\n// ----------------------------------------------------------------------\n\nContainerView.propTypes = {\n  isOpen: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  selectVariant: PropTypes.string,\n};\n\nexport default function ContainerView({ isOpen, onOpen, onClose, selectVariant, ...other }) {\n  return (\n    <Paper\n      sx={{\n        height: 480,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.neutral',\n      }}\n      {...other}\n    >\n      <Button variant=\"contained\" onClick={onOpen}>\n        Click Me!\n      </Button>\n      <DialogAnimate open={isOpen} onClose={onClose} variants={getVariant(selectVariant)}>\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\n            apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Disagree</Button>\n          <Button variant=\"contained\" onClick={onClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </DialogAnimate>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}