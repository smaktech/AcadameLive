{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{findIndex}from'lodash';import{useEffect,useState,useRef}from'react';//\nimport Scrollbar from'../../../components/Scrollbar';import LightboxModal from'../../../components/LightboxModal';import ChatMessageItem from'./ChatMessageItem';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatMessageList(_ref){var conversation=_ref.conversation;var scrollRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openLightbox=_useState2[0],setOpenLightbox=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedImage=_useState4[0],setSelectedImage=_useState4[1];useEffect(function(){var scrollMessagesToBottom=function scrollMessagesToBottom(){if(scrollRef.current){scrollRef.current.scrollTop=scrollRef.current.scrollHeight;}};scrollMessagesToBottom();},[conversation.messages]);var imagesLightbox=conversation.messages.filter(function(messages){return messages.contentType==='image';}).map(function(messages){return messages.body;});var handleOpenLightbox=function handleOpenLightbox(url){var selectedImage=findIndex(imagesLightbox,function(index){return index===url;});setOpenLightbox(true);setSelectedImage(selectedImage);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Scrollbar,{scrollableNodeProps:{ref:scrollRef},sx:{p:3,height:1},children:conversation.messages.map(function(message){return/*#__PURE__*/_jsx(ChatMessageItem,{message:message,conversation:conversation,onOpenLightbox:handleOpenLightbox},message.id);})}),/*#__PURE__*/_jsx(LightboxModal,{images:imagesLightbox,mainSrc:imagesLightbox[selectedImage],photoIndex:selectedImage,setPhotoIndex:setSelectedImage,isOpen:openLightbox,onCloseRequest:function onCloseRequest(){return setOpenLightbox(false);}})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/chat/ChatMessageList.js"],"names":["findIndex","useEffect","useState","useRef","Scrollbar","LightboxModal","ChatMessageItem","ChatMessageList","conversation","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollMessagesToBottom","current","scrollTop","scrollHeight","messages","imagesLightbox","filter","contentType","map","body","handleOpenLightbox","url","index","ref","p","height","message","id"],"mappings":"gKACA,OAASA,SAAT,KAA0B,QAA1B,CACA,OAASC,SAAT,CAAoBC,QAApB,CAA8BC,MAA9B,KAA4C,OAA5C,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;6IAMA,cAAe,SAASC,CAAAA,eAAT,MAA2C,IAAhBC,CAAAA,YAAgB,MAAhBA,YAAgB,CACxD,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CAEA,cAAwCD,QAAQ,CAAC,KAAD,CAAhD,wCAAOQ,YAAP,eAAqBC,eAArB,eAEA,eAA0CT,QAAQ,CAAC,CAAD,CAAlD,yCAAOU,aAAP,eAAsBC,gBAAtB,eAEAZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnC,GAAIL,SAAS,CAACM,OAAd,CAAuB,CACrBN,SAAS,CAACM,OAAV,CAAkBC,SAAlB,CAA8BP,SAAS,CAACM,OAAV,CAAkBE,YAAhD,CACD,CACF,CAJD,CAKAH,sBAAsB,GACvB,CAPQ,CAON,CAACN,YAAY,CAACU,QAAd,CAPM,CAAT,CASA,GAAMC,CAAAA,cAAc,CAAGX,YAAY,CAACU,QAAb,CACpBE,MADoB,CACb,SAACF,QAAD,QAAcA,CAAAA,QAAQ,CAACG,WAAT,GAAyB,OAAvC,EADa,EAEpBC,GAFoB,CAEhB,SAACJ,QAAD,QAAcA,CAAAA,QAAQ,CAACK,IAAvB,EAFgB,CAAvB,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAS,CAClC,GAAMb,CAAAA,aAAa,CAAGZ,SAAS,CAACmB,cAAD,CAAiB,SAACO,KAAD,QAAWA,CAAAA,KAAK,GAAKD,GAArB,EAAjB,CAA/B,CACAd,eAAe,CAAC,IAAD,CAAf,CACAE,gBAAgB,CAACD,aAAD,CAAhB,CACD,CAJD,CAMA,mBACE,wCACE,KAAC,SAAD,EAAW,mBAAmB,CAAE,CAAEe,GAAG,CAAElB,SAAP,CAAhC,CAAoD,EAAE,CAAE,CAAEmB,CAAC,CAAE,CAAL,CAAQC,MAAM,CAAE,CAAhB,CAAxD,UACGrB,YAAY,CAACU,QAAb,CAAsBI,GAAtB,CAA0B,SAACQ,OAAD,qBACzB,KAAC,eAAD,EAEE,OAAO,CAAEA,OAFX,CAGE,YAAY,CAAEtB,YAHhB,CAIE,cAAc,CAAEgB,kBAJlB,EACOM,OAAO,CAACC,EADf,CADyB,EAA1B,CADH,EADF,cAYE,KAAC,aAAD,EACE,MAAM,CAAEZ,cADV,CAEE,OAAO,CAAEA,cAAc,CAACP,aAAD,CAFzB,CAGE,UAAU,CAAEA,aAHd,CAIE,aAAa,CAAEC,gBAJjB,CAKE,MAAM,CAAEH,YALV,CAME,cAAc,CAAE,gCAAMC,CAAAA,eAAe,CAAC,KAAD,CAArB,EANlB,EAZF,GADF,CAuBD","sourcesContent":["import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../../components/Scrollbar';\nimport LightboxModal from '../../../components/LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired,\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef(null);\n\n  const [openLightbox, setOpenLightbox] = useState(false);\n\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const imagesLightbox = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, height: 1 }}>\n        {conversation.messages.map((message) => (\n          <ChatMessageItem\n            key={message.id}\n            message={message}\n            conversation={conversation}\n            onOpenLightbox={handleOpenLightbox}\n          />\n        ))}\n      </Scrollbar>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}