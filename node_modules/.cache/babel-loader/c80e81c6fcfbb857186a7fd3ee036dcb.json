{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useSnackbar}from'notistack';import{useSelector}from'react-redux';import{Droppable,Draggable}from'react-beautiful-dnd';// @mui\nimport{Paper,Stack,Button}from'@mui/material';// redux\nimport{useDispatch}from'../../../redux/store';import{deleteColumn,updateColumn,addTask,deleteTask}from'../../../redux/slices/kanban';// components\nimport Iconify from'../../../components/Iconify';//\nimport KanbanAddTask from'./KanbanTaskAdd';import KanbanTaskCard from'./KanbanTaskCard';import KanbanColumnToolBar from'./KanbanColumnToolBar';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function KanbanColumn(_ref){var column=_ref.column,index=_ref.index;var dispatch=useDispatch();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useSelector=useSelector(function(state){return state.kanban;}),board=_useSelector.board;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var name=column.name,cardIds=column.cardIds,id=column.id;var handleOpenAddTask=function handleOpenAddTask(){setOpen(function(prev){return!prev;});};var handleCloseAddTask=function handleCloseAddTask(){setOpen(false);};var handleDeleteTask=function handleDeleteTask(cardId){dispatch(deleteTask({cardId:cardId,columnId:id}));enqueueSnackbar('Delete success',{variant:'success'});};var handleUpdateColumn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newName){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{if(newName!==name){dispatch(updateColumn(id,_objectSpread(_objectSpread({},column),{},{name:newName})));enqueueSnackbar('Update success',{variant:'success'});}}catch(error){console.error(error);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleUpdateColumn(_x){return _ref2.apply(this,arguments);};}();var handleDeleteColumn=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{dispatch(deleteColumn(id));enqueueSnackbar('Delete success',{variant:'success'});}catch(error){console.error(error);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDeleteColumn(){return _ref3.apply(this,arguments);};}();var handleAddTask=function handleAddTask(task){dispatch(addTask({card:task,columnId:id}));enqueueSnackbar('Add success',{variant:'success'});handleCloseAddTask();};return/*#__PURE__*/_jsx(Draggable,{draggableId:id,index:index,children:function children(provided){return/*#__PURE__*/_jsx(Paper,_objectSpread(_objectSpread({},provided.draggableProps),{},{ref:provided.innerRef,variant:\"outlined\",sx:{px:2,bgcolor:'grey.5008'},children:/*#__PURE__*/_jsxs(Stack,_objectSpread(_objectSpread({spacing:3},provided.dragHandleProps),{},{children:[/*#__PURE__*/_jsx(KanbanColumnToolBar,{columnName:name,onDelete:handleDeleteColumn,onUpdate:handleUpdateColumn}),/*#__PURE__*/_jsx(Droppable,{droppableId:id,type:\"task\",children:function children(provided){return/*#__PURE__*/_jsxs(Stack,_objectSpread(_objectSpread({ref:provided.innerRef},provided.droppableProps),{},{spacing:2,width:280,children:[cardIds.map(function(cardId,index){return/*#__PURE__*/_jsx(KanbanTaskCard,{onDeleteTask:handleDeleteTask,card:board===null||board===void 0?void 0:board.cards[cardId],index:index},cardId);}),provided.placeholder]}));}}),/*#__PURE__*/_jsxs(Stack,{spacing:2,sx:{pb:3},children:[open&&/*#__PURE__*/_jsx(KanbanAddTask,{onAddTask:handleAddTask,onCloseAddTask:handleCloseAddTask}),/*#__PURE__*/_jsx(Button,{fullWidth:true,size:\"large\",color:\"inherit\",startIcon:/*#__PURE__*/_jsx(Iconify,{icon:'eva:plus-fill',width:20,height:20}),onClick:handleOpenAddTask,sx:{fontSize:14},children:\"Add Task\"})]})]}))}));}});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/kanban/KanbanColumn.js"],"names":["useState","useSnackbar","useSelector","Droppable","Draggable","Paper","Stack","Button","useDispatch","deleteColumn","updateColumn","addTask","deleteTask","Iconify","KanbanAddTask","KanbanTaskCard","KanbanColumnToolBar","KanbanColumn","column","index","dispatch","enqueueSnackbar","state","kanban","board","open","setOpen","name","cardIds","id","handleOpenAddTask","prev","handleCloseAddTask","handleDeleteTask","cardId","columnId","variant","handleUpdateColumn","newName","error","console","handleDeleteColumn","handleAddTask","task","card","provided","draggableProps","innerRef","px","bgcolor","dragHandleProps","droppableProps","map","cards","placeholder","pb","fontSize"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n// @mui\nimport { Paper, Stack, Button } from '@mui/material';\n// redux\nimport { useDispatch } from '../../../redux/store';\nimport { deleteColumn, updateColumn, addTask, deleteTask } from '../../../redux/slices/kanban';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport KanbanAddTask from './KanbanTaskAdd';\nimport KanbanTaskCard from './KanbanTaskCard';\nimport KanbanColumnToolBar from './KanbanColumnToolBar';\n\n// ----------------------------------------------------------------------\n\nKanbanColumn.propTypes = {\n  column: PropTypes.object,\n  index: PropTypes.number,\n};\n\nexport default function KanbanColumn({ column, index }) {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { board } = useSelector((state) => state.kanban);\n  const [open, setOpen] = useState(false);\n\n  const { name, cardIds, id } = column;\n\n  const handleOpenAddTask = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleCloseAddTask = () => {\n    setOpen(false);\n  };\n\n  const handleDeleteTask = (cardId) => {\n    dispatch(deleteTask({ cardId, columnId: id }));\n    enqueueSnackbar('Delete success', { variant: 'success' });\n  };\n\n  const handleUpdateColumn = async (newName) => {\n    try {\n      if (newName !== name) {\n        dispatch(updateColumn(id, { ...column, name: newName }));\n        enqueueSnackbar('Update success', { variant: 'success' });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteColumn = async () => {\n    try {\n      dispatch(deleteColumn(id));\n      enqueueSnackbar('Delete success', { variant: 'success' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAddTask = (task) => {\n    dispatch(addTask({ card: task, columnId: id }));\n    enqueueSnackbar('Add success', { variant: 'success' });\n    handleCloseAddTask();\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <Paper\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          variant=\"outlined\"\n          sx={{ px: 2, bgcolor: 'grey.5008' }}\n        >\n          <Stack spacing={3} {...provided.dragHandleProps}>\n            <KanbanColumnToolBar columnName={name} onDelete={handleDeleteColumn} onUpdate={handleUpdateColumn} />\n\n            <Droppable droppableId={id} type=\"task\">\n              {(provided) => (\n                <Stack ref={provided.innerRef} {...provided.droppableProps} spacing={2} width={280}>\n                  {cardIds.map((cardId, index) => (\n                    <KanbanTaskCard\n                      key={cardId}\n                      onDeleteTask={handleDeleteTask}\n                      card={board?.cards[cardId]}\n                      index={index}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </Stack>\n              )}\n            </Droppable>\n\n            <Stack spacing={2} sx={{ pb: 3 }}>\n              {open && <KanbanAddTask onAddTask={handleAddTask} onCloseAddTask={handleCloseAddTask} />}\n\n              <Button\n                fullWidth\n                size=\"large\"\n                color=\"inherit\"\n                startIcon={<Iconify icon={'eva:plus-fill'} width={20} height={20} />}\n                onClick={handleOpenAddTask}\n                sx={{ fontSize: 14 }}\n              >\n                Add Task\n              </Button>\n            </Stack>\n          </Stack>\n        </Paper>\n      )}\n    </Draggable>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}