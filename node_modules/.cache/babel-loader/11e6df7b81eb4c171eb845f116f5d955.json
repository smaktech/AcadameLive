{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"children\",\"size\"];import PropTypes from'prop-types';import{m}from'framer-motion';import{forwardRef}from'react';// @mui\nimport{Box,IconButton}from'@mui/material';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";var IconButtonAnimate=/*#__PURE__*/forwardRef(function(_ref,ref){var children=_ref.children,_ref$size=_ref.size,size=_ref$size===void 0?'medium':_ref$size,other=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(AnimateWrap,{size:size,children:/*#__PURE__*/_jsx(IconButton,_objectSpread(_objectSpread({size:size,ref:ref},other),{},{children:children}))});});IconButtonAnimate.propTypes={children:PropTypes.node.isRequired,color:PropTypes.oneOf(['inherit','default','primary','secondary','info','success','warning','error']),size:PropTypes.oneOf(['small','medium','large'])};export default IconButtonAnimate;// ----------------------------------------------------------------------\nvar varSmall={hover:{scale:1.1},tap:{scale:0.95}};var varMedium={hover:{scale:1.09},tap:{scale:0.97}};var varLarge={hover:{scale:1.08},tap:{scale:0.99}};function AnimateWrap(_ref2){var size=_ref2.size,children=_ref2.children;var isSmall=size==='small';var isLarge=size==='large';return/*#__PURE__*/_jsx(Box,{component:m.div,whileTap:\"tap\",whileHover:\"hover\",variants:isSmall&&varSmall||isLarge&&varLarge||varMedium,sx:{display:'inline-flex'},children:children});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/animate/IconButtonAnimate.js"],"names":["PropTypes","m","forwardRef","Box","IconButton","IconButtonAnimate","ref","children","size","other","propTypes","node","isRequired","color","oneOf","varSmall","hover","scale","tap","varMedium","varLarge","AnimateWrap","isSmall","isLarge","div","display"],"mappings":"qXAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,CAAT,KAAkB,eAAlB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA;AACA,OAASC,GAAT,CAAcC,UAAd,KAAgC,eAAhC,CAEA;2CAEA,GAAMC,CAAAA,iBAAiB,cAAGH,UAAU,CAAC,cAA0CI,GAA1C,KAAGC,CAAAA,QAAH,MAAGA,QAAH,gBAAaC,IAAb,CAAaA,IAAb,oBAAoB,QAApB,WAAiCC,KAAjC,6DACnC,KAAC,WAAD,EAAa,IAAI,CAAED,IAAnB,uBACE,KAAC,UAAD,8BAAY,IAAI,CAAEA,IAAlB,CAAwB,GAAG,CAAEF,GAA7B,EAAsCG,KAAtC,eACGF,QADH,GADF,EADmC,EAAD,CAApC,CAQAF,iBAAiB,CAACK,SAAlB,CAA8B,CAC5BH,QAAQ,CAAEP,SAAS,CAACW,IAAV,CAAeC,UADG,CAE5BC,KAAK,CAAEb,SAAS,CAACc,KAAV,CAAgB,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,WAAlC,CAA+C,MAA/C,CAAuD,SAAvD,CAAkE,SAAlE,CAA6E,OAA7E,CAAhB,CAFqB,CAG5BN,IAAI,CAAER,SAAS,CAACc,KAAV,CAAgB,CAAC,OAAD,CAAU,QAAV,CAAoB,OAApB,CAAhB,CAHsB,CAA9B,CAMA,cAAeT,CAAAA,iBAAf,CAEA;AAEA,GAAMU,CAAAA,QAAQ,CAAG,CACfC,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAT,CADQ,CAEfC,GAAG,CAAE,CAAED,KAAK,CAAE,IAAT,CAFU,CAAjB,CAKA,GAAME,CAAAA,SAAS,CAAG,CAChBH,KAAK,CAAE,CAAEC,KAAK,CAAE,IAAT,CADS,CAEhBC,GAAG,CAAE,CAAED,KAAK,CAAE,IAAT,CAFW,CAAlB,CAKA,GAAMG,CAAAA,QAAQ,CAAG,CACfJ,KAAK,CAAE,CAAEC,KAAK,CAAE,IAAT,CADQ,CAEfC,GAAG,CAAE,CAAED,KAAK,CAAE,IAAT,CAFU,CAAjB,CAUA,QAASI,CAAAA,WAAT,OAAyC,IAAlBb,CAAAA,IAAkB,OAAlBA,IAAkB,CAAZD,QAAY,OAAZA,QAAY,CACvC,GAAMe,CAAAA,OAAO,CAAGd,IAAI,GAAK,OAAzB,CACA,GAAMe,CAAAA,OAAO,CAAGf,IAAI,GAAK,OAAzB,CAEA,mBACE,KAAC,GAAD,EACE,SAAS,CAAEP,CAAC,CAACuB,GADf,CAEE,QAAQ,CAAC,KAFX,CAGE,UAAU,CAAC,OAHb,CAIE,QAAQ,CAAGF,OAAO,EAAIP,QAAZ,EAA0BQ,OAAO,EAAIH,QAArC,EAAkDD,SAJ9D,CAKE,EAAE,CAAE,CACFM,OAAO,CAAE,aADP,CALN,UASGlB,QATH,EADF,CAaD","sourcesContent":["import PropTypes from 'prop-types';\nimport { m } from 'framer-motion';\nimport { forwardRef } from 'react';\n// @mui\nimport { Box, IconButton } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst IconButtonAnimate = forwardRef(({ children, size = 'medium', ...other }, ref) => (\n  <AnimateWrap size={size}>\n    <IconButton size={size} ref={ref} {...other}>\n      {children}\n    </IconButton>\n  </AnimateWrap>\n));\n\nIconButtonAnimate.propTypes = {\n  children: PropTypes.node.isRequired,\n  color: PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nexport default IconButtonAnimate;\n\n// ----------------------------------------------------------------------\n\nconst varSmall = {\n  hover: { scale: 1.1 },\n  tap: { scale: 0.95 }\n};\n\nconst varMedium = {\n  hover: { scale: 1.09 },\n  tap: { scale: 0.97 }\n};\n\nconst varLarge = {\n  hover: { scale: 1.08 },\n  tap: { scale: 0.99 }\n};\n\nAnimateWrap.propTypes = {\n  children: PropTypes.node.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nfunction AnimateWrap({ size, children }) {\n  const isSmall = size === 'small';\n  const isLarge = size === 'large';\n\n  return (\n    <Box\n      component={m.div}\n      whileTap=\"tap\"\n      whileHover=\"hover\"\n      variants={(isSmall && varSmall) || (isLarge && varLarge) || varMedium}\n      sx={{\n        display: 'inline-flex'\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}