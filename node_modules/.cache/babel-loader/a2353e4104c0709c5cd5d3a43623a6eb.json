{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// @mui\nimport{Grid,Card}from'@mui/material';//\nimport Toolbar from'./Toolbar';import ControlPanel from'../ControlPanel';import ContainerView from'./ContainerView';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function BackgroundView(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState('kenburnsTop'),_useState4=_slicedToArray(_useState3,2),selectVariant=_useState4[0],setSelectVariant=_useState4[1];var handleChangeVariant=function handleChangeVariant(event){setCount(count+1);setSelectVariant(event.target.value);};return/*#__PURE__*/_jsxs(Card,{sx:{p:3},children:[/*#__PURE__*/_jsx(Grid,{container:true,sx:{mb:3},children:/*#__PURE__*/_jsx(Grid,{item:true,xs:9,children:/*#__PURE__*/_jsx(Toolbar,{onRefresh:function onRefresh(){return setCount(count+1);}})})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:9,children:/*#__PURE__*/_jsx(ContainerView,{selectVariant:selectVariant},count)}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(ControlPanel,{variantKey:variantKey,selectVariant:selectVariant,onChangeVariant:handleChangeVariant})})]})]});}// ----------------------------------------------------------------------\nvar variantKey=[{type:'kenburns',values:['kenburnsTop','kenburnsBottom','kenburnsLeft','kenburnsRight']},{type:'pan',values:['panTop','panBottom','panLeft','panRight']},{type:'color change',values:['color2x','color3x','color4x','color5x']}];","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/animate/background/index.js"],"names":["useState","Grid","Card","Toolbar","ControlPanel","ContainerView","BackgroundView","count","setCount","selectVariant","setSelectVariant","handleChangeVariant","event","target","value","p","mb","variantKey","type","values"],"mappings":"gKAAA,OAASA,QAAT,KAAyB,OAAzB,CACA;AACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,eAA3B,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA;wFAEA,cAAe,SAASC,CAAAA,cAAT,EAA0B,CACvC,cAA0BN,QAAQ,CAAC,CAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAA0CR,QAAQ,CAAC,aAAD,CAAlD,yCAAOS,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACrCJ,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACAG,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CACD,CAHD,CAKA,mBACE,MAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAV,wBACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAApB,uBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACE,KAAC,OAAD,EAAS,SAAS,CAAE,2BAAMR,CAAAA,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAd,EAApB,EADF,EADF,EADF,cAOE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACE,KAAC,aAAD,EAA2B,aAAa,CAAEE,aAA1C,EAAoBF,KAApB,CADF,EADF,cAIE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACE,KAAC,YAAD,EAAc,UAAU,CAAEU,UAA1B,CAAsC,aAAa,CAAER,aAArD,CAAoE,eAAe,CAAEE,mBAArF,EADF,EAJF,GAPF,GADF,CAkBD,CAED;AAEA,GAAMM,CAAAA,UAAU,CAAG,CACjB,CACEC,IAAI,CAAE,UADR,CAEEC,MAAM,CAAE,CAAC,aAAD,CAAgB,gBAAhB,CAAkC,cAAlC,CAAkD,eAAlD,CAFV,CADiB,CAKjB,CACED,IAAI,CAAE,KADR,CAEEC,MAAM,CAAE,CAAC,QAAD,CAAW,WAAX,CAAwB,SAAxB,CAAmC,UAAnC,CAFV,CALiB,CASjB,CACED,IAAI,CAAE,cADR,CAEEC,MAAM,CAAE,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAFV,CATiB,CAAnB","sourcesContent":["import { useState } from 'react';\n// @mui\nimport { Grid, Card } from '@mui/material';\n//\nimport Toolbar from './Toolbar';\nimport ControlPanel from '../ControlPanel';\nimport ContainerView from './ContainerView';\n\n// ----------------------------------------------------------------------\n\nexport default function BackgroundView() {\n  const [count, setCount] = useState(0);\n  const [selectVariant, setSelectVariant] = useState('kenburnsTop');\n\n  const handleChangeVariant = (event) => {\n    setCount(count + 1);\n    setSelectVariant(event.target.value);\n  };\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <Grid container sx={{ mb: 3 }}>\n        <Grid item xs={9}>\n          <Toolbar onRefresh={() => setCount(count + 1)} />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={9}>\n          <ContainerView key={count} selectVariant={selectVariant} />\n        </Grid>\n        <Grid item xs={3}>\n          <ControlPanel variantKey={variantKey} selectVariant={selectVariant} onChangeVariant={handleChangeVariant} />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst variantKey = [\n  {\n    type: 'kenburns',\n    values: ['kenburnsTop', 'kenburnsBottom', 'kenburnsLeft', 'kenburnsRight'],\n  },\n  {\n    type: 'pan',\n    values: ['panTop', 'panBottom', 'panLeft', 'panRight'],\n  },\n  {\n    type: 'color change',\n    values: ['color2x', 'color3x', 'color4x', 'color5x'],\n  },\n];\n"]},"metadata":{},"sourceType":"module"}