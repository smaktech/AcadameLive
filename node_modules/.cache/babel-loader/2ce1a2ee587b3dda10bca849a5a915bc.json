{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\kanban\\\\KanbanTaskCommentList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useState } from 'react'; // @mui\n\nimport { Stack, Avatar, Typography } from '@mui/material'; // utils\n\nimport { fToNow } from '../../../utils/formatTime'; // components\n\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nKanbanTaskCommentList.propTypes = {\n  comments: PropTypes.array\n};\nexport default function KanbanTaskCommentList(_ref) {\n  _s();\n\n  let {\n    comments\n  } = _ref;\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n  const imagesLightbox = comments.filter(comment => comment.messageType === 'image').map(item => item.message);\n\n  const handleOpenLightbox = url => {\n    const selectedImage = findIndex(imagesLightbox, index => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      sx: {\n        py: 3,\n        px: 2.5,\n        bgcolor: 'background.neutral'\n      },\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: comment.avatar,\n          sx: {\n            width: 32,\n            height: 32\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: [\" \", comment.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: fToNow(comment.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), comment.messageType === 'image' ? /*#__PURE__*/_jsxDEV(Image, {\n            src: comment.message,\n            onClick: () => handleOpenLightbox(comment.message),\n            sx: {\n              mt: 2,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 0.5\n            },\n            children: comment.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightboxModal, {\n      images: imagesLightbox,\n      mainSrc: imagesLightbox[selectedImage],\n      photoIndex: selectedImage,\n      setPhotoIndex: setSelectedImage,\n      isOpen: openLightbox,\n      onCloseRequest: () => setOpenLightbox(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KanbanTaskCommentList, \"m/A+V1lU3o/gw40HVDT1uKDOFoA=\");\n\n_c = KanbanTaskCommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanTaskCommentList\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/kanban/KanbanTaskCommentList.js"],"names":["PropTypes","findIndex","useState","Stack","Avatar","Typography","fToNow","Image","LightboxModal","KanbanTaskCommentList","propTypes","comments","array","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","imagesLightbox","filter","comment","messageType","map","item","message","handleOpenLightbox","url","index","py","px","bgcolor","avatar","width","height","name","color","createdAt","mt","borderRadius","id"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useState } from 'react';\n// @mui\nimport { Stack, Avatar, Typography } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCommentList.propTypes = {\n  comments: PropTypes.array,\n};\n\nexport default function KanbanTaskCommentList({ comments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const imagesLightbox = comments.filter((comment) => comment.messageType === 'image').map((item) => item.message);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Stack spacing={3} sx={{ py: 3, px: 2.5, bgcolor: 'background.neutral' }}>\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatar} sx={{ width: 32, height: 32 }} />\n            <div>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Image\n                  src={comment.message}\n                  onClick={() => handleOpenLightbox(comment.message)}\n                  sx={{ mt: 2, borderRadius: 1 }}\n                />\n              ) : (\n                <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                  {comment.message}\n                </Typography>\n              )}\n            </div>\n          </Stack>\n        ))}\n      </Stack>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}