{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\general\\\\banking\\\\BankingQuickTransfer.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link as RouterLink } from 'react-router-dom'; // @mui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Card, Link, Stack, Input, Button, Avatar, Dialog, Tooltip, TextField, Typography, CardHeader, DialogTitle, DialogActions, Slider as MuiSlider } from '@mui/material'; // utils\n\nimport { fCurrency } from '../../../../utils/formatNumber'; // _mock_\n\nimport { _bankingQuickTransfer } from '../../../../_mock'; // components\n\nimport { CarouselArrows } from '../../../../components/carousel'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MIN_AMOUNT = 0;\nconst MAX_AMOUNT = 1000;\nconst STEP = 50;\nconst RootStyle = styled(Card)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    boxShadow: 'none',\n    backgroundColor: theme.palette.background.neutral\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function BankingQuickTransfer() {\n  _s();\n\n  const theme = useTheme();\n  const carouselRef = useRef(null);\n  const [autoWidth, setAutoWidth] = useState(24);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [selectContact, setSelectContact] = useState(0);\n  const [amount, setAmount] = useState(0);\n\n  const getContactInfo = _bankingQuickTransfer.find((_, index) => index === selectContact);\n\n  const sliderSettings = {\n    dots: false,\n    arrows: false,\n    slidesToShow: 7,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    centerPadding: '0px',\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setSelectContact(next),\n    responsive: [{\n      breakpoint: theme.breakpoints.values.xl,\n      settings: {\n        slidesToShow: 5\n      }\n    }]\n  };\n  useEffect(() => {\n    if (amount) {\n      handleAutoWidth();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [amount]);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleAutoWidth = () => {\n    const getNumberLength = amount.toString().length;\n    setAutoWidth(getNumberLength * 22);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setAmount(newValue);\n  };\n\n  const handleInputChange = event => {\n    setAmount(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (amount < 0) {\n      setAmount(0);\n    } else if (amount > MAX_AMOUNT) {\n      setAmount(MAX_AMOUNT);\n    }\n  };\n\n  const handlePrevious = () => {\n    var _carouselRef$current;\n\n    (_carouselRef$current = carouselRef.current) === null || _carouselRef$current === void 0 ? void 0 : _carouselRef$current.slickPrev();\n  };\n\n  const handleNext = () => {\n    var _carouselRef$current2;\n\n    (_carouselRef$current2 = carouselRef.current) === null || _carouselRef$current2 === void 0 ? void 0 : _carouselRef$current2.slickNext();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RootStyle, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Quick Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            to: \"#\",\n            sx: {\n              typography: 'button'\n            },\n            children: \"View All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(CarouselArrows, {\n            filled: true,\n            onPrevious: handlePrevious,\n            onNext: handleNext,\n            customIcon: 'eva:arrow-ios-forward-fill',\n            sx: {\n              '& .arrow': {\n                mt: '-14px',\n                '&.left': {\n                  left: -16\n                },\n                '&.right': {\n                  right: -16\n                },\n                '& button': {\n                  width: 28,\n                  height: 28,\n                  borderRadius: '50%',\n                  p: 0.75\n                }\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              ref: carouselRef,\n              ...sliderSettings,\n              children: _bankingQuickTransfer.map((contact, index) => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  py: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: 40,\n                    height: 40\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: contact.name,\n                    arrow: true,\n                    placement: \"top\",\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: contact.avatar,\n                      sx: {\n                        opacity: 0.48,\n                        cursor: 'pointer',\n                        transition: theme => theme.transitions.create('all'),\n                        ...(selectContact === index && {\n                          opacity: 1,\n                          transform: 'scale(1.25)',\n                          boxShadow: '-4px 12px 24px 0 rgb(0,0,0,0.24)'\n                        })\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 25\n                    }, this)\n                  }, contact.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, contact.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: \"insert amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputAmount, {\n            onBlur: handleBlur,\n            onChange: handleInputChange,\n            autoWidth: autoWidth,\n            amount: amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiSlider, {\n            value: typeof amount === 'number' ? amount : 0,\n            valueLabelDisplay: \"auto\",\n            step: STEP,\n            marks: true,\n            min: MIN_AMOUNT,\n            max: MAX_AMOUNT,\n            onChange: handleSliderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: \"Your Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: fCurrency(34212)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            disabled: amount === 0,\n            onClick: handleOpenConfirm,\n            children: \"Transfer Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmTransferDialog, {\n      open: openConfirm,\n      autoWidth: autoWidth,\n      amount: amount,\n      contactInfo: getContactInfo,\n      onClose: handleCloseConfirm,\n      onBlur: handleBlur,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\n_s(BankingQuickTransfer, \"QuQZ9HVRNxWe8uuSlOfF4MTabWk=\", false, function () {\n  return [useTheme];\n});\n\n_c = BankingQuickTransfer;\nInputAmount.propTypes = {\n  amount: PropTypes.number,\n  autoWidth: PropTypes.number,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  sx: PropTypes.object\n};\n\nfunction InputAmount(_ref2) {\n  let {\n    autoWidth,\n    amount,\n    onBlur,\n    onChange,\n    sx,\n    ...other\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    justifyContent: \"center\",\n    spacing: 1,\n    sx: sx,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      disableUnderline: true,\n      size: \"small\",\n      value: amount,\n      onChange: onChange,\n      onBlur: onBlur,\n      inputProps: {\n        step: STEP,\n        min: MIN_AMOUNT,\n        max: MAX_AMOUNT,\n        type: 'number'\n      },\n      sx: {\n        typography: 'h3',\n        '& input': {\n          p: 0,\n          textAlign: 'center',\n          width: autoWidth\n        }\n      },\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_c2 = InputAmount;\nConfirmTransferDialog.propTypes = {\n  amount: PropTypes.number,\n  autoWidth: PropTypes.any,\n  contactInfo: PropTypes.shape({\n    avatar: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string\n  }),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nfunction ConfirmTransferDialog(_ref3) {\n  let {\n    open,\n    amount,\n    autoWidth,\n    contactInfo,\n    onClose,\n    onBlur,\n    onChange\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Transfer to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      sx: {\n        p: 3,\n        pb: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: contactInfo === null || contactInfo === void 0 ? void 0 : contactInfo.avatar,\n          sx: {\n            width: 48,\n            height: 48\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: contactInfo === null || contactInfo === void 0 ? void 0 : contactInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: contactInfo === null || contactInfo === void 0 ? void 0 : contactInfo.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputAmount, {\n        onBlur: onBlur,\n        onChange: onChange,\n        autoWidth: autoWidth,\n        amount: amount,\n        disableUnderline: false,\n        sx: {\n          justifyContent: 'flex-end'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        placeholder: \"Write a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        disabled: amount === 0,\n        onClick: onClose,\n        children: \"Confirm & Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ConfirmTransferDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BankingQuickTransfer\");\n$RefreshReg$(_c2, \"InputAmount\");\n$RefreshReg$(_c3, \"ConfirmTransferDialog\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/general/banking/BankingQuickTransfer.js"],"names":["PropTypes","Slider","useState","useEffect","useRef","Link","RouterLink","styled","useTheme","Box","Card","Stack","Input","Button","Avatar","Dialog","Tooltip","TextField","Typography","CardHeader","DialogTitle","DialogActions","MuiSlider","fCurrency","_bankingQuickTransfer","CarouselArrows","MIN_AMOUNT","MAX_AMOUNT","STEP","RootStyle","theme","boxShadow","backgroundColor","palette","background","neutral","BankingQuickTransfer","carouselRef","autoWidth","setAutoWidth","openConfirm","setOpenConfirm","selectContact","setSelectContact","amount","setAmount","getContactInfo","find","_","index","sliderSettings","dots","arrows","slidesToShow","centerMode","swipeToSlide","focusOnSelect","centerPadding","rtl","Boolean","direction","beforeChange","current","next","responsive","breakpoint","breakpoints","values","xl","settings","handleAutoWidth","handleOpenConfirm","handleCloseConfirm","getNumberLength","toString","length","handleSliderChange","event","newValue","handleInputChange","target","value","Number","handleBlur","handlePrevious","slickPrev","handleNext","slickNext","p","color","typography","position","mt","left","right","width","height","borderRadius","map","contact","py","name","avatar","opacity","cursor","transition","transitions","create","transform","id","InputAmount","propTypes","number","onBlur","func","onChange","sx","object","other","step","min","max","type","textAlign","ConfirmTransferDialog","any","contactInfo","shape","string","email","onClose","open","bool","pb","justifyContent"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,sBAAjC;AACA,SACEC,GADF,EAEEC,IAFF,EAGEL,IAHF,EAIEM,KAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,MARF,EASEC,OATF,EAUEC,SAVF,EAWEC,UAXF,EAYEC,UAZF,EAaEC,WAbF,EAcEC,aAdF,EAeEpB,MAAM,IAAIqB,SAfZ,QAgBO,eAhBP,C,CAiBA;;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CACA;;AACA,SAASC,qBAAT,QAAsC,mBAAtC,C,CACA;;AACA,SAASC,cAAT,QAA+B,iCAA/B,C,CAEA;;;;AAEA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,IAAI,GAAG,EAAb;AAEA,MAAMC,SAAS,GAAGtB,MAAM,CAACG,IAAD,CAAN,CAAa;AAAA,MAAC;AAAEoB,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC7CC,IAAAA,SAAS,EAAE,MADkC;AAE7CC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC;AAFG,GAAhB;AAAA,CAAb,CAAlB,C,CAKA;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAMN,KAAK,GAAGtB,QAAQ,EAAtB;AACA,QAAM6B,WAAW,GAAGjC,MAAM,CAAC,IAAD,CAA1B;AAEA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsC,WAAD,EAAcC,cAAd,IAAgCvC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACwC,aAAD,EAAgBC,gBAAhB,IAAoCzC,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAAC0C,MAAD,EAASC,SAAT,IAAsB3C,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAM4C,cAAc,GAAGtB,qBAAqB,CAACuB,IAAtB,CAA2B,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKP,aAAnD,CAAvB;;AAEA,QAAMQ,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,KADe;AAErBC,IAAAA,MAAM,EAAE,KAFa;AAGrBC,IAAAA,YAAY,EAAE,CAHO;AAIrBC,IAAAA,UAAU,EAAE,IAJS;AAKrBC,IAAAA,YAAY,EAAE,IALO;AAMrBC,IAAAA,aAAa,EAAE,IANM;AAOrBC,IAAAA,aAAa,EAAE,KAPM;AAQrBC,IAAAA,GAAG,EAAEC,OAAO,CAAC7B,KAAK,CAAC8B,SAAN,KAAoB,KAArB,CARS;AASrBC,IAAAA,YAAY,EAAE,CAACC,OAAD,EAAUC,IAAV,KAAmBpB,gBAAgB,CAACoB,IAAD,CAT5B;AAUrBC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,UAAU,EAAEnC,KAAK,CAACoC,WAAN,CAAkBC,MAAlB,CAAyBC,EADvC;AAEEC,MAAAA,QAAQ,EAAE;AACRhB,QAAAA,YAAY,EAAE;AADN;AAFZ,KADU;AAVS,GAAvB;AAoBAlD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyC,MAAJ,EAAY;AACV0B,MAAAA,eAAe;AAChB,KAHa,CAId;;AACD,GALQ,EAKN,CAAC1B,MAAD,CALM,CAAT;;AAOA,QAAM2B,iBAAiB,GAAG,MAAM;AAC9B9B,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAM+B,kBAAkB,GAAG,MAAM;AAC/B/B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAM6B,eAAe,GAAG,MAAM;AAC5B,UAAMG,eAAe,GAAG7B,MAAM,CAAC8B,QAAP,GAAkBC,MAA1C;AACApC,IAAAA,YAAY,CAACkC,eAAe,GAAG,EAAnB,CAAZ;AACD,GAHD;;AAKA,QAAMG,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9CjC,IAAAA,SAAS,CAACiC,QAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIF,KAAD,IAAW;AACnChC,IAAAA,SAAS,CAACgC,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GAA4B,EAA5B,GAAiCC,MAAM,CAACL,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAxC,CAAT;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvB,QAAIvC,MAAM,GAAG,CAAb,EAAgB;AACdC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD,KAFD,MAEO,IAAID,MAAM,GAAGjB,UAAb,EAAyB;AAC9BkB,MAAAA,SAAS,CAAClB,UAAD,CAAT;AACD;AACF,GAND;;AAQA,QAAMyD,cAAc,GAAG,MAAM;AAAA;;AAC3B,4BAAA/C,WAAW,CAACyB,OAAZ,8EAAqBuB,SAArB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,6BAAAjD,WAAW,CAACyB,OAAZ,gFAAqByB,SAArB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAAT;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAuB,UAAA,UAAU,EAAC,QAAlC;AAA2C,UAAA,cAAc,EAAC,eAA1D;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,UAApB;AAA+B,YAAA,EAAE,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEnF,UAAjB;AAA6B,YAAA,EAAE,EAAC,GAAhC;AAAoC,YAAA,EAAE,EAAE;AAAEoF,cAAAA,UAAU,EAAE;AAAd,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAA,iCACE,QAAC,cAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,UAAU,EAAEP,cAFd;AAGE,YAAA,MAAM,EAAEE,UAHV;AAIE,YAAA,UAAU,EAAE,4BAJd;AAKE,YAAA,EAAE,EAAE;AACF,0BAAY;AACVM,gBAAAA,EAAE,EAAE,OADM;AAEV,0BAAU;AAAEC,kBAAAA,IAAI,EAAE,CAAC;AAAT,iBAFA;AAGV,2BAAW;AAAEC,kBAAAA,KAAK,EAAE,CAAC;AAAV,iBAHD;AAIV,4BAAY;AAAEC,kBAAAA,KAAK,EAAE,EAAT;AAAaC,kBAAAA,MAAM,EAAE,EAArB;AAAyBC,kBAAAA,YAAY,EAAE,KAAvC;AAA8CT,kBAAAA,CAAC,EAAE;AAAjD;AAJF;AADV,aALN;AAAA,mCAcE,QAAC,MAAD;AAAQ,cAAA,GAAG,EAAEnD,WAAb;AAAA,iBAA8Ba,cAA9B;AAAA,wBACG1B,qBAAqB,CAAC0E,GAAtB,CAA0B,CAACC,OAAD,EAAUlD,KAAV,kBACzB,QAAC,GAAD;AAAsB,gBAAA,EAAE,EAAE;AAAEmD,kBAAAA,EAAE,EAAE;AAAN,iBAA1B;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE;AAAEL,oBAAAA,KAAK,EAAE,EAAT;AAAaC,oBAAAA,MAAM,EAAE;AAArB,mBAAT;AAAA,yCACE,QAAC,OAAD;AAA0B,oBAAA,KAAK,EAAEG,OAAO,CAACE,IAAzC;AAA+C,oBAAA,KAAK,MAApD;AAAqD,oBAAA,SAAS,EAAC,KAA/D;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,GAAG,EAAEF,OAAO,CAACG,MADf;AAEE,sBAAA,EAAE,EAAE;AACFC,wBAAAA,OAAO,EAAE,IADP;AAEFC,wBAAAA,MAAM,EAAE,SAFN;AAGFC,wBAAAA,UAAU,EAAG3E,KAAD,IAAWA,KAAK,CAAC4E,WAAN,CAAkBC,MAAlB,CAAyB,KAAzB,CAHrB;AAIF,4BAAIjE,aAAa,KAAKO,KAAlB,IAA2B;AAC7BsD,0BAAAA,OAAO,EAAE,CADoB;AAE7BK,0BAAAA,SAAS,EAAE,aAFkB;AAG7B7E,0BAAAA,SAAS,EAAE;AAHkB,yBAA/B;AAJE;AAFN;AAAA;AAAA;AAAA;AAAA;AADF,qBAAcoE,OAAO,CAACU,EAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUV,OAAO,CAACU,EAAlB;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmDE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,UAApB;AAA+B,YAAA,EAAE,EAAE;AAAEpB,cAAAA,KAAK,EAAE;AAAT,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEN,UAArB;AAAiC,YAAA,QAAQ,EAAEJ,iBAA3C;AAA8D,YAAA,SAAS,EAAEzC,SAAzE;AAAoF,YAAA,MAAM,EAAEM;AAA5F;AAAA;AAAA;AAAA;AAAA,kBALF,eAOE,QAAC,SAAD;AACE,YAAA,KAAK,EAAE,OAAOA,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,CAD/C;AAEE,YAAA,iBAAiB,EAAC,MAFpB;AAGE,YAAA,IAAI,EAAEhB,IAHR;AAIE,YAAA,KAAK,MAJP;AAKE,YAAA,GAAG,EAAEF,UALP;AAME,YAAA,GAAG,EAAEC,UANP;AAOE,YAAA,QAAQ,EAAEiD;AAPZ;AAAA;AAAA;AAAA;AAAA,kBAPF,eAiBE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,KAAjB;AAAuB,YAAA,UAAU,EAAC,QAAlC;AAA2C,YAAA,cAAc,EAAC,eAA1D;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAgC,cAAA,EAAE,EAAE;AAAEa,gBAAAA,KAAK,EAAE;AAAT,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAA,wBAAiClE,SAAS,CAAC,KAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAwBE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,QAAQ,EAAEqB,MAAM,KAAK,CAA9D;AAAiE,YAAA,OAAO,EAAE2B,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqFE,QAAC,qBAAD;AACE,MAAA,IAAI,EAAE/B,WADR;AAEE,MAAA,SAAS,EAAEF,SAFb;AAGE,MAAA,MAAM,EAAEM,MAHV;AAIE,MAAA,WAAW,EAAEE,cAJf;AAKE,MAAA,OAAO,EAAE0B,kBALX;AAME,MAAA,MAAM,EAAEW,UANV;AAOE,MAAA,QAAQ,EAAEJ;AAPZ;AAAA;AAAA;AAAA;AAAA,YArFF;AAAA,kBADF;AAiGD,C,CAED;;GA9KwB3C,oB;UACR5B,Q;;;KADQ4B,oB;AAgLxB0E,WAAW,CAACC,SAAZ,GAAwB;AACtBnE,EAAAA,MAAM,EAAE5C,SAAS,CAACgH,MADI;AAEtB1E,EAAAA,SAAS,EAAEtC,SAAS,CAACgH,MAFC;AAGtBC,EAAAA,MAAM,EAAEjH,SAAS,CAACkH,IAHI;AAItBC,EAAAA,QAAQ,EAAEnH,SAAS,CAACkH,IAJE;AAKtBE,EAAAA,EAAE,EAAEpH,SAAS,CAACqH;AALQ,CAAxB;;AAQA,SAASP,WAAT,QAA4E;AAAA,MAAvD;AAAExE,IAAAA,SAAF;AAAaM,IAAAA,MAAb;AAAqBqE,IAAAA,MAArB;AAA6BE,IAAAA,QAA7B;AAAuCC,IAAAA,EAAvC;AAA2C,OAAGE;AAA9C,GAAuD;AAC1E,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,cAAc,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAE,CAAxD;AAA2D,IAAA,EAAE,EAAEF,EAA/D;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,gBAAgB,MADlB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAExE,MAHT;AAIE,MAAA,QAAQ,EAAEuE,QAJZ;AAKE,MAAA,MAAM,EAAEF,MALV;AAME,MAAA,UAAU,EAAE;AAAEM,QAAAA,IAAI,EAAE3F,IAAR;AAAc4F,QAAAA,GAAG,EAAE9F,UAAnB;AAA+B+F,QAAAA,GAAG,EAAE9F,UAApC;AAAgD+F,QAAAA,IAAI,EAAE;AAAtD,OANd;AAOE,MAAA,EAAE,EAAE;AACFhC,QAAAA,UAAU,EAAE,IADV;AAEF,mBAAW;AACTF,UAAAA,CAAC,EAAE,CADM;AAETmC,UAAAA,SAAS,EAAE,QAFF;AAGT5B,UAAAA,KAAK,EAAEzD;AAHE;AAFT,OAPN;AAAA,SAeMgF;AAfN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,C,CAED;;;MAzBSR,W;AA2BTc,qBAAqB,CAACb,SAAtB,GAAkC;AAChCnE,EAAAA,MAAM,EAAE5C,SAAS,CAACgH,MADc;AAEhC1E,EAAAA,SAAS,EAAEtC,SAAS,CAAC6H,GAFW;AAGhCC,EAAAA,WAAW,EAAE9H,SAAS,CAAC+H,KAAV,CAAgB;AAC3BzB,IAAAA,MAAM,EAAEtG,SAAS,CAACgI,MADS;AAE3BC,IAAAA,KAAK,EAAEjI,SAAS,CAACgI,MAFU;AAG3B3B,IAAAA,IAAI,EAAErG,SAAS,CAACgI;AAHW,GAAhB,CAHmB;AAQhCf,EAAAA,MAAM,EAAEjH,SAAS,CAACkH,IARc;AAShCC,EAAAA,QAAQ,EAAEnH,SAAS,CAACkH,IATY;AAUhCgB,EAAAA,OAAO,EAAElI,SAAS,CAACkH,IAVa;AAWhCiB,EAAAA,IAAI,EAAEnI,SAAS,CAACoI;AAXgB,CAAlC;;AAcA,SAASR,qBAAT,QAAoG;AAAA,MAArE;AAAEO,IAAAA,IAAF;AAAQvF,IAAAA,MAAR;AAAgBN,IAAAA,SAAhB;AAA2BwF,IAAAA,WAA3B;AAAwCI,IAAAA,OAAxC;AAAiDjB,IAAAA,MAAjD;AAAyDE,IAAAA;AAAzD,GAAqE;AAClG,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEgB,IAAd;AAAoB,IAAA,SAAS,MAA7B;AAA8B,IAAA,QAAQ,EAAC,IAAvC;AAA4C,IAAA,OAAO,EAAED,OAArD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE;AAAE1C,QAAAA,CAAC,EAAE,CAAL;AAAQ6C,QAAAA,EAAE,EAAE;AAAZ,OAAvB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,UAAU,EAAC,QAAlC;AAA2C,QAAA,OAAO,EAAE,CAApD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEP,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAExB,MAA1B;AAAkC,UAAA,EAAE,EAAE;AAAEP,YAAAA,KAAK,EAAE,EAAT;AAAaC,YAAAA,MAAM,EAAE;AAArB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA,sBAAiC8B,WAAjC,aAAiCA,WAAjC,uBAAiCA,WAAW,CAAEzB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,EAAE,EAAE;AAAEZ,cAAAA,KAAK,EAAE;AAAT,aAAhC;AAAA,sBACGqC,WADH,aACGA,WADH,uBACGA,WAAW,CAAEG;AADhB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,WAAD;AACE,QAAA,MAAM,EAAEhB,MADV;AAEE,QAAA,QAAQ,EAAEE,QAFZ;AAGE,QAAA,SAAS,EAAE7E,SAHb;AAIE,QAAA,MAAM,EAAEM,MAJV;AAKE,QAAA,gBAAgB,EAAE,KALpB;AAME,QAAA,EAAE,EAAE;AAAE0F,UAAAA,cAAc,EAAE;AAAlB;AANN;AAAA;AAAA;AAAA;AAAA,cAXF,eAoBE,QAAC,SAAD;AAAW,QAAA,SAAS,MAApB;AAAqB,QAAA,SAAS,MAA9B;AAA+B,QAAA,IAAI,EAAE,CAArC;AAAwC,QAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAyBE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE1F,MAAM,KAAK,CAAjD;AAAoD,QAAA,OAAO,EAAEsF,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;MAnCQN,qB","sourcesContent":["import PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { styled, useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Link,\n  Stack,\n  Input,\n  Button,\n  Avatar,\n  Dialog,\n  Tooltip,\n  TextField,\n  Typography,\n  CardHeader,\n  DialogTitle,\n  DialogActions,\n  Slider as MuiSlider,\n} from '@mui/material';\n// utils\nimport { fCurrency } from '../../../../utils/formatNumber';\n// _mock_\nimport { _bankingQuickTransfer } from '../../../../_mock';\n// components\nimport { CarouselArrows } from '../../../../components/carousel';\n\n// ----------------------------------------------------------------------\n\nconst MIN_AMOUNT = 0;\nconst MAX_AMOUNT = 1000;\nconst STEP = 50;\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  backgroundColor: theme.palette.background.neutral,\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function BankingQuickTransfer() {\n  const theme = useTheme();\n  const carouselRef = useRef(null);\n\n  const [autoWidth, setAutoWidth] = useState(24);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [selectContact, setSelectContact] = useState(0);\n  const [amount, setAmount] = useState(0);\n\n  const getContactInfo = _bankingQuickTransfer.find((_, index) => index === selectContact);\n\n  const sliderSettings = {\n    dots: false,\n    arrows: false,\n    slidesToShow: 7,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    centerPadding: '0px',\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setSelectContact(next),\n    responsive: [\n      {\n        breakpoint: theme.breakpoints.values.xl,\n        settings: {\n          slidesToShow: 5,\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (amount) {\n      handleAutoWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [amount]);\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const handleAutoWidth = () => {\n    const getNumberLength = amount.toString().length;\n    setAutoWidth(getNumberLength * 22);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setAmount(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setAmount(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (amount < 0) {\n      setAmount(0);\n    } else if (amount > MAX_AMOUNT) {\n      setAmount(MAX_AMOUNT);\n    }\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current?.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current?.slickNext();\n  };\n\n  return (\n    <>\n      <RootStyle>\n        <CardHeader title=\"Quick Transfer\" />\n        <Box sx={{ p: 3 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n              Recent\n            </Typography>\n            <Link component={RouterLink} to=\"#\" sx={{ typography: 'button' }}>\n              View All\n            </Link>\n          </Stack>\n\n          <Box sx={{ position: 'relative' }}>\n            <CarouselArrows\n              filled\n              onPrevious={handlePrevious}\n              onNext={handleNext}\n              customIcon={'eva:arrow-ios-forward-fill'}\n              sx={{\n                '& .arrow': {\n                  mt: '-14px',\n                  '&.left': { left: -16 },\n                  '&.right': { right: -16 },\n                  '& button': { width: 28, height: 28, borderRadius: '50%', p: 0.75 },\n                },\n              }}\n            >\n              <Slider ref={carouselRef} {...sliderSettings}>\n                {_bankingQuickTransfer.map((contact, index) => (\n                  <Box key={contact.id} sx={{ py: 5 }}>\n                    <Box sx={{ width: 40, height: 40 }}>\n                      <Tooltip key={contact.id} title={contact.name} arrow placement=\"top\">\n                        <Avatar\n                          src={contact.avatar}\n                          sx={{\n                            opacity: 0.48,\n                            cursor: 'pointer',\n                            transition: (theme) => theme.transitions.create('all'),\n                            ...(selectContact === index && {\n                              opacity: 1,\n                              transform: 'scale(1.25)',\n                              boxShadow: '-4px 12px 24px 0 rgb(0,0,0,0.24)',\n                            }),\n                          }}\n                        />\n                      </Tooltip>\n                    </Box>\n                  </Box>\n                ))}\n              </Slider>\n            </CarouselArrows>\n          </Box>\n\n          <Stack spacing={3}>\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n              insert amount\n            </Typography>\n\n            <InputAmount onBlur={handleBlur} onChange={handleInputChange} autoWidth={autoWidth} amount={amount} />\n\n            <MuiSlider\n              value={typeof amount === 'number' ? amount : 0}\n              valueLabelDisplay=\"auto\"\n              step={STEP}\n              marks\n              min={MIN_AMOUNT}\n              max={MAX_AMOUNT}\n              onChange={handleSliderChange}\n            />\n\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                Your Balance\n              </Typography>\n              <Typography variant=\"subtitle1\">{fCurrency(34212)}</Typography>\n            </Stack>\n\n            <Button variant=\"contained\" size=\"large\" disabled={amount === 0} onClick={handleOpenConfirm}>\n              Transfer Now\n            </Button>\n          </Stack>\n        </Box>\n      </RootStyle>\n\n      <ConfirmTransferDialog\n        open={openConfirm}\n        autoWidth={autoWidth}\n        amount={amount}\n        contactInfo={getContactInfo}\n        onClose={handleCloseConfirm}\n        onBlur={handleBlur}\n        onChange={handleInputChange}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nInputAmount.propTypes = {\n  amount: PropTypes.number,\n  autoWidth: PropTypes.number,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  sx: PropTypes.object,\n};\n\nfunction InputAmount({ autoWidth, amount, onBlur, onChange, sx, ...other }) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"center\" spacing={1} sx={sx}>\n      <Typography variant=\"h5\">$</Typography>\n      <Input\n        disableUnderline\n        size=\"small\"\n        value={amount}\n        onChange={onChange}\n        onBlur={onBlur}\n        inputProps={{ step: STEP, min: MIN_AMOUNT, max: MAX_AMOUNT, type: 'number' }}\n        sx={{\n          typography: 'h3',\n          '& input': {\n            p: 0,\n            textAlign: 'center',\n            width: autoWidth,\n          },\n        }}\n        {...other}\n      />\n    </Stack>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nConfirmTransferDialog.propTypes = {\n  amount: PropTypes.number,\n  autoWidth: PropTypes.any,\n  contactInfo: PropTypes.shape({\n    avatar: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nfunction ConfirmTransferDialog({ open, amount, autoWidth, contactInfo, onClose, onBlur, onChange }) {\n  return (\n    <Dialog open={open} fullWidth maxWidth=\"xs\" onClose={onClose}>\n      <DialogTitle>Transfer to</DialogTitle>\n\n      <Stack spacing={3} sx={{ p: 3, pb: 0 }}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Avatar src={contactInfo?.avatar} sx={{ width: 48, height: 48 }} />\n          <div>\n            <Typography variant=\"subtitle2\">{contactInfo?.name}</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {contactInfo?.email}\n            </Typography>\n          </div>\n        </Stack>\n\n        <InputAmount\n          onBlur={onBlur}\n          onChange={onChange}\n          autoWidth={autoWidth}\n          amount={amount}\n          disableUnderline={false}\n          sx={{ justifyContent: 'flex-end' }}\n        />\n\n        <TextField fullWidth multiline rows={2} placeholder=\"Write a message...\" />\n      </Stack>\n      <DialogActions>\n        <Button variant=\"contained\" disabled={amount === 0} onClick={onClose}>\n          Confirm & Transfer\n        </Button>\n        <Button onClick={onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}