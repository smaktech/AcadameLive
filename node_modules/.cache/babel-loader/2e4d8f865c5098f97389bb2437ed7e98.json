{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\subjects\\\\AddEditSubject.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { useParams } from 'react-router-dom';\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { fetchSubjects, editSubject, deleteSubject, getSubjectById } from \"../../api/Subject/Subject\";\nimport { createSubject } from '../../api/Subject/Subject';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, Input, TextField } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditSubject(props) {\n  _s();\n\n  const {\n    subjectId,\n    subjectStatus\n  } = useParams();\n  const [mode, setMode] = useState(subjectId ? \"edit\" : \"add\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //setting subjects data into a variable\n\n  const [subjects, setSubjects] = useState({}); //sets the loader for add subject button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the subject user want to add\n\n  const [subjectName, setSubjectName] = useState();\n  const [subjectIcon, setSubjectIcon] = useState(null); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false); //updating mode state on change of subject id\n\n  useEffect(() => {\n    setMode(subjectId ? \"edit\" : \"add\");\n  }, [subjectId]);\n  useEffect(() => {\n    setMode(subjectId ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getSubjectById(subjectId).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched subject by id into state variable\n        setSubjects(res.course);\n        setSubjectName(res.course.name);\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [subjectId]); //edit the details basically the name of the existing subject\n\n  function editSubjectDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (subjectName != '') {\n      console.log(subjectName);\n      editSubject(subjectId, subjectName, subjectStatus, subjectIcon).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Subject details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the subject name');\n    }\n  } //adds new subject \n\n\n  function addNewSubject() {\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false);\n\n    if (subjectName != '') {\n      createSubject(subjectName, 'active', subjectIcon).then(res => {\n        // console.log(res);\n        if (res.status) {\n          console.log(res);\n          setAddLoader(false);\n          setModalLine1('New Subject Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the subject name');\n    }\n  } // function to reset \n\n\n  const reSetForm = () => {\n    setSubjectName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Subject Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"pageHeaderCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"   text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-6 col-sm-6 col-12\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Subject Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"name\",\n                      value: subjectName,\n                      type: \"text\",\n                      placeholder: \"Enter Sub Topic Name\",\n                      onChange: e => setSubjectName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Choose Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"image\",\n                      type: \"file\",\n                      placeholder: \"choose Sub Topic Exam Zip\",\n                      onChange: e => setSubjectIcon(e.target.files[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                className: \" py-2 px-6 me-3\",\n                onClick: () => navigate('/dashboard/subjects'),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                className: \" py-2 px-6 me-3\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  editSubjectDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => addNewSubject(),\n              children: \"Add Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : navigate('/dashboard/subjects/addSubject');\n              },\n              children: \"Add New Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/subjects'),\n              children: \"Back To Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditSubject, \"S5+qAXQFzjwj2yoKbK8SmsD7oV4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditSubject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditSubject\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/subjects/AddEditSubject.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","useParams","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchSubjects","editSubject","deleteSubject","getSubjectById","createSubject","CircularProgress","Card","CardContent","Button","Input","TextField","Modal","BootstrapModal","Grid","Box","modalStyle","AddEditSubject","props","subjectId","subjectStatus","mode","setMode","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","subjects","setSubjects","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","subjectName","setSubjectName","subjectIcon","setSubjectIcon","errorMessage","setErrorMessage","error","showError","then","res","console","log","status","course","name","catch","err","editSubjectDetails","addNewSubject","reSetForm","display","height","justifyContent","alignItems","margin","e","target","value","files","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\nimport { useParams } from 'react-router-dom'\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchSubjects, editSubject, deleteSubject, getSubjectById } from \"../../api/Subject/Subject\"\nimport { createSubject } from '../../api/Subject/Subject'\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, Input, TextField } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\n\nexport default function AddEditSubject(props) {\n    const { subjectId, subjectStatus } = useParams();\n\n    const [mode, setMode] = useState(subjectId ? \"edit\" : \"add\")\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //setting subjects data into a variable\n    const [subjects, setSubjects] = useState({});\n\n    //sets the loader for add subject button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editLoader, setEditLoader] = useState(false)\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the subject user want to add\n    const [subjectName, setSubjectName] = useState();\n\n    const [subjectIcon, setSubjectIcon] = useState(null);\n\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n\n\n    //updating mode state on change of subject id\n    useEffect(() => {\n        setMode(subjectId ? \"edit\" : \"add\")\n    }, [subjectId])\n\n    useEffect(() => {\n        setMode(subjectId ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getSubjectById(subjectId).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched subject by id into state variable\n                setSubjects(res.course);\n                setSubjectName(res.course.name)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [subjectId])\n\n    //edit the details basically the name of the existing subject\n    function editSubjectDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (subjectName != '') {\n            console.log(subjectName)\n            editSubject(subjectId, subjectName, subjectStatus,subjectIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Subject details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the subject name');\n        }\n\n    }\n\n    //adds new subject \n    function addNewSubject() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (subjectName != '') {\n            createSubject(subjectName, 'active', subjectIcon)\n                .then((res) => {\n                    // console.log(res);\n                    if (res.status) {\n                        console.log(res)\n                        setAddLoader(false);\n                        setModalLine1('New Subject Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the subject name');\n        }\n    }\n\n    // function to reset \n    const reSetForm = () => {\n        setSubjectName('')\n    }\n\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Subject Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    {/* <Loader\n                        type=\"Puff\"\n                        color=\"blue\"\n                        height={30}\n                        width={30}\n                    /> */}\n                    <CircularProgress size={20} />\n\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div className=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div className=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n                                        {/* <InputGroup className=\"mb-3\" >\n\n                                            <FormControl\n                                                placeholder=\"Enter Subject Name\"\n                                                aria-label=\"Search\"\n                                                aria-describedby=\"basic-addon1\"\n                                                onChange={(e) => setSubjectName(e.target.value)}\n                                                value={subjectName}\n                                            />\n\n                                        </InputGroup> */}\n                                        <Form>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Subject Name</Form.Label>\n                                                <Form.Control name='name' value={subjectName} type=\"text\" placeholder=\"Enter Sub Topic Name\" onChange={(e) => setSubjectName(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Choose Icon</Form.Label>\n                                                <Form.Control name='image' type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setSubjectIcon(e.target.files[0])} />\n                                            </Form.Group>\n                                        </Form>\n                                    </div>\n\n\n                                </div>\n                                <div className=\"row\">\n                                    {/* <form onSubmit={createSub}>\n                                        <TextField\n                                            sx={{ width: '50%' }}\n                                            label=\"Enter Subject Name\"\n                                            variant=\"outlined\"\n                                            placeholder='Enter Subject Name'\n                                            onChange={(e) => setSubjectName(e.target.value)} />\n                                        <br />\n                                        <Input\n                                            sx={{ width: '50%' }}\n                                            accept=\"image/*\"\n                                            type=\"file\"\n                                            onChange={(e) => setSubjectIcon(e.target.files[0])} />\n                                        <br />\n                                        <Button\n                                            variant=\"contained\"\n                                            type='submit'\n                                        >\n                                            Upload\n                                        </Button>\n                                    </form> */}\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        <Button variant=\"outlined\" className=\" py-2 px-6 me-3\" onClick={() => navigate('/dashboard/subjects')}>Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\" className=\" py-2 px-6 me-3\" >\n                                                {/* <Loader\n                                                    type=\"Puff\"\n                                                    color=\"white\"\n                                                    height={30}\n                                                    width={30}\n                                                /> */}\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editSubjectDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\"  >\n                                            {/* <Loader\n                                                type=\"Puff\"\n                                                color=\"white\"\n                                                height={30}\n                                                width={30}\n                                            /> */}\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\"\n                                            onClick={() => addNewSubject()}\n                                        >Add Subject</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalVisible(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (navigate('/dashboard/subjects/addSubject')) }}\n                            >Add New Subject</Button>\n                            &emsp;\n                            <Button variant=\"contained\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/subjects')}\n                            >Back To Subjects</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}