{"ast":null,"code":"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit'; // utils\n\nimport axios from '../../utils/axios'; //\n\nimport { dispatch } from '../store'; // ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  events: [],\n  isOpenModal: false,\n  selectedEventId: null,\n  selectedRange: null\n};\nconst slice = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET EVENTS\n    getEventsSuccess(state, action) {\n      state.isLoading = false;\n      state.events = action.payload;\n    },\n\n    // CREATE EVENT\n    createEventSuccess(state, action) {\n      const newEvent = action.payload;\n      state.isLoading = false;\n      state.events = [...state.events, newEvent];\n    },\n\n    // UPDATE EVENT\n    updateEventSuccess(state, action) {\n      const event = action.payload;\n      const updateEvent = map(state.events, _event => {\n        if (_event.id === event.id) {\n          return event;\n        }\n\n        return _event;\n      });\n      state.isLoading = false;\n      state.events = updateEvent;\n    },\n\n    // DELETE EVENT\n    deleteEventSuccess(state, action) {\n      const {\n        eventId\n      } = action.payload;\n      const deleteEvent = filter(state.events, user => user.id !== eventId);\n      state.events = deleteEvent;\n    },\n\n    // SELECT EVENT\n    selectEvent(state, action) {\n      const eventId = action.payload;\n      state.isOpenModal = true;\n      state.selectedEventId = eventId;\n    },\n\n    // SELECT RANGE\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isOpenModal = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    // OPEN MODAL\n    openModal(state) {\n      state.isOpenModal = true;\n    },\n\n    // CLOSE MODAL\n    closeModal(state) {\n      state.isOpenModal = false;\n      state.selectedEventId = null;\n      state.selectedRange = null;\n    }\n\n  }\n}); // Reducer\n\nexport default slice.reducer; // Actions\n\nexport const {\n  openModal,\n  closeModal,\n  selectEvent\n} = slice.actions; // ----------------------------------------------------------------------\n\nexport function getEvents() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.get('/api/calendar/events');\n      dispatch(slice.actions.getEventsSuccess(response.data.events));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function createEvent(newEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.post('/api/calendar/events/new', newEvent);\n      dispatch(slice.actions.createEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function updateEvent(eventId, updateEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId,\n        updateEvent\n      });\n      dispatch(slice.actions.updateEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function deleteEvent(eventId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      await axios.post('/api/calendar/events/delete', {\n        eventId\n      });\n      dispatch(slice.actions.deleteEventSuccess({\n        eventId\n      }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function selectRange(start, end) {\n  return async () => {\n    dispatch(slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/redux/slices/calendar.js"],"names":["map","filter","createSlice","axios","dispatch","initialState","isLoading","error","events","isOpenModal","selectedEventId","selectedRange","slice","name","reducers","startLoading","state","hasError","action","payload","getEventsSuccess","createEventSuccess","newEvent","updateEventSuccess","event","updateEvent","_event","id","deleteEventSuccess","eventId","deleteEvent","user","selectEvent","selectRange","start","end","openModal","closeModal","reducer","actions","getEvents","response","get","data","createEvent","post","getTime"],"mappings":"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","sourcesContent":["import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  events: [],\n  isOpenModal: false,\n  selectedEventId: null,\n  selectedRange: null,\n};\n\nconst slice = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET EVENTS\n    getEventsSuccess(state, action) {\n      state.isLoading = false;\n      state.events = action.payload;\n    },\n\n    // CREATE EVENT\n    createEventSuccess(state, action) {\n      const newEvent = action.payload;\n      state.isLoading = false;\n      state.events = [...state.events, newEvent];\n    },\n\n    // UPDATE EVENT\n    updateEventSuccess(state, action) {\n      const event = action.payload;\n      const updateEvent = map(state.events, (_event) => {\n        if (_event.id === event.id) {\n          return event;\n        }\n        return _event;\n      });\n\n      state.isLoading = false;\n      state.events = updateEvent;\n    },\n\n    // DELETE EVENT\n    deleteEventSuccess(state, action) {\n      const { eventId } = action.payload;\n      const deleteEvent = filter(state.events, (user) => user.id !== eventId);\n      state.events = deleteEvent;\n    },\n\n    // SELECT EVENT\n    selectEvent(state, action) {\n      const eventId = action.payload;\n      state.isOpenModal = true;\n      state.selectedEventId = eventId;\n    },\n\n    // SELECT RANGE\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n      state.isOpenModal = true;\n      state.selectedRange = { start, end };\n    },\n\n    // OPEN MODAL\n    openModal(state) {\n      state.isOpenModal = true;\n    },\n\n    // CLOSE MODAL\n    closeModal(state) {\n      state.isOpenModal = false;\n      state.selectedEventId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { openModal, closeModal, selectEvent } = slice.actions;\n\n// ----------------------------------------------------------------------\n\nexport function getEvents() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/calendar/events');\n      dispatch(slice.actions.getEventsSuccess(response.data.events));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function createEvent(newEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/calendar/events/new', newEvent);\n      dispatch(slice.actions.createEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function updateEvent(eventId, updateEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId,\n        updateEvent,\n      });\n      dispatch(slice.actions.updateEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteEvent(eventId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.post('/api/calendar/events/delete', { eventId });\n      dispatch(slice.actions.deleteEventSuccess({ eventId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function selectRange(start, end) {\n  return async () => {\n    dispatch(\n      slice.actions.selectRange({\n        start: start.getTime(),\n        end: end.getTime(),\n      })\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}