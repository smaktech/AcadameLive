{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\subBoard\\\\SubBoard.js\",\n    _s = $RefreshSig$();\n\n//page for all subBoards listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { fetchBoards, editBoards, deleteBoards, getBoardByFilter, getAllBoard } from \"../../api/Boards/Boards\";\nimport { materialTableIcons } from '../../config';\nimport { dataLimit, modalStyle } from '../../config';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useParams } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport SingleSubBoardRow from './SingleSubBoardRow';\nimport { deleteSubBoards, editSubBoards, getAllSubBoard, getSubBoardByFilter } from 'src/api/SubBoard/SubBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SubBoards(props) {\n  _s();\n\n  const tableIcons = materialTableIcons;\n  const {\n    boardID\n  } = useParams(); //setting subBoards data into a variable\n\n  const [subBoards, setsubBoards] = useState([]);\n  const [nosubBoards, setNosubBoards] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the Boards who is blocked or deleted\n\n  const [actionBoardsId, setBoardsId] = useState();\n  const [BoardsName, setBoardsName] = useState(''); //unblock or block vairbale \n\n  const [subBoardstatus, setsubBoardstatus] = useState(true); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false);\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const navigate = useNavigate();\n  const materialTableRef = useRef(); //useEffect for calling the function for filter onchange of search or filter data continue button\n\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      getSubBoardByFilter(boardID, search, filterStatus, filterDateFrom, filterDateTo).then(res => {\n        if (res.status) {\n          setsubBoards(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setsubBoards([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false);\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]); //sets the filter data to null\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  }\n\n  useEffect(() => {\n    setNosubBoards(false);\n    setTableDataLoading(true);\n    getAllSubBoard(boardID, page, rowLimit).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched Boards into state variable\n        setsubBoards(res.results.data);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //setting no Boards found variable true \n        setNosubBoards(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [page, rowLimit]);\n\n  function openDeleteAlertModal(id, index) {\n    setBoardsId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the Boards?');\n    setInfo('All the details of the Boards will be removed from the Platform');\n    setModalAlertTitle(true);\n  } //function to change the status of the Boards to blocked!\n\n\n  function changesubBoardstatus(id, name, index, status) {\n    editSubBoards(id, name, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        // const index = rowData.tableData.id;\n        //updating Boards status in state array\n        const updatedRows = [...subBoards];\n        updatedRows[index].status = status;\n        setsubBoards(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  } //function to delete the Boards from the database\n\n\n  function deleteBoardsProfile() {\n    setActionLoader(true);\n    deleteSubBoards(actionBoardsId).then(res => {\n      // console.log(res)\n      if (res.status) {\n        const index = rowId; //removing deleted Boards from state array \n\n        const updatedRows = [...subBoards];\n        updatedRows.splice(index, 1);\n        setsubBoards(updatedRows);\n        setModalContent('Boards Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Sub Board Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3 \",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mr: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\",\n                onClick: () => navigate('/dashboard/boards/subBoard/addSubBoard/' + boardID),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New Sub Board\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Added On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: subBoards.map((row, index) => /*#__PURE__*/_jsxDEV(SingleSubBoardRow, {\n              boardID: boardID,\n              changeBoardStatus: changesubBoardstatus,\n              row: row,\n              index: index,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 60\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [1, 2, 5, 10, 25],\n        colSpan: 3,\n        count: totalPages * rowLimit,\n        rowsPerPage: rowLimit,\n        page: page - 1,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: onPageChange,\n        onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this Board?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteBoardsProfile() : changesubBoardstatus();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: completionModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Updated Boards!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: modalContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary px-5\",\n              onClick: () => setCompletionModal(false),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\" // onClick={()=>resetFilterData()}\n                  ,\n                  onClick: () => resetFilterData(),\n                  children: \"Reset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: \" px-5\",\n                  onClick: () => {\n                    applyFilters();\n                  },\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SubBoards, \"sVMwdAloV6U/wu42eTItug+HbDw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = SubBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubBoards\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/subBoard/SubBoard.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchBoards","editBoards","deleteBoards","getBoardByFilter","getAllBoard","materialTableIcons","dataLimit","modalStyle","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","useParams","Button","SingleSubBoardRow","deleteSubBoards","editSubBoards","getAllSubBoard","getSubBoardByFilter","SubBoards","props","tableIcons","boardID","subBoards","setsubBoards","nosubBoards","setNosubBoards","months","modalTitle","setModalTitle","info","setInfo","tableDataLoading","setTableDataLoading","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionBoardsId","setBoardsId","BoardsName","setBoardsName","subBoardstatus","setsubBoardstatus","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","sortByDate","setSortByDate","filterLoader","setFilterLoader","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","navigate","materialTableRef","then","res","status","results","data","catch","err","console","log","resetFilterData","applyFilters","error","openDeleteAlertModal","id","index","changesubBoardstatus","name","updatedRows","alert","deleteBoardsProfile","splice","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","e","p","mr","map","row","inputProps","native","marginTop"],"mappings":";;;AAAA;AACA,OAAOA,eAAP,MAA4B,+BAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D,C,CACA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,QAA4C,kBAA5C;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,QAAwD,2BAAxD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,OAAzC,QAAwD,gBAAxD;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,gBAAhD,EAAkEC,WAAlE,QAAqF,yBAArF;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AAGA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,iBAAxC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOH,KAAP,MAAkB,qBAAlB;AACA,OAAOI,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,cAAzC,EAAyDC,mBAAzD,QAAoF,2BAApF;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAErC,QAAMC,UAAU,GAAG5B,kBAAnB;AACA,QAAM;AAAC6B,IAAAA;AAAD,MAAYV,SAAS,EAA3B,CAHqC,CAIrC;;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BrD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsD,WAAD,EAAcC,cAAd,IAAgCvD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMwD,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf,CAPqC,CASrC;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1D,QAAQ,CAAC,EAAD,CAA5C,CAVqC,CAYrC;;AACA,QAAM,CAAC2D,IAAD,EAAOC,OAAP,IAAkB5D,QAAQ,CAAC,EAAD,CAAhC,CAbqC,CAerC;;AACA,QAAM,CAAC6D,gBAAD,EAAmBC,mBAAnB,IAA0C9D,QAAQ,CAAC,IAAD,CAAxD,CAhBqC,CAkBrC;;AACA,QAAM,CAAC+D,SAAD,EAAYC,YAAZ,IAA4BhE,QAAQ,CAAC,EAAD,CAA1C,CAnBqC,CAqBrC;;AACA,QAAM,CAACiE,eAAD,EAAkBC,kBAAlB,IAAwClE,QAAQ,CAAC,KAAD,CAAtD,CAtBqC,CAwBrC;;AACA,QAAM,CAACmE,eAAD,EAAkBC,kBAAlB,IAAwCpE,QAAQ,CAAC,KAAD,CAAtD,CAzBqC,CA2BrC;;AACA,QAAM,CAACqE,YAAD,EAAeC,eAAf,IAAkCtE,QAAQ,CAAC,EAAD,CAAhD,CA5BqC,CA8BrC;;AACA,QAAM,CAACuE,cAAD,EAAiBC,WAAjB,IAAgCxE,QAAQ,EAA9C;AACA,QAAM,CAACyE,UAAD,EAAaC,aAAb,IAA8B1E,QAAQ,CAAC,EAAD,CAA5C,CAhCqC,CAkCrC;;AACA,QAAM,CAAC2E,cAAD,EAAiBC,iBAAjB,IAAsC5E,QAAQ,CAAC,IAAD,CAApD,CAnCqC,CAqCrC;;AACA,QAAM,CAAC6E,KAAD,EAAQC,QAAR,IAAoB9E,QAAQ,EAAlC,CAtCqC,CAwCrC;;AACA,QAAM,CAAC+E,YAAD,EAAeC,eAAf,IAAkChF,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAACiF,WAAD,EAAcC,cAAd,IAAgClF,QAAQ,CAAC,KAAD,CAA9C,CA3CqC,CA6CrC;;AACA,QAAM,CAACmF,MAAD,EAASC,SAAT,IAAsBpF,QAAQ,EAApC,CA9CqC,CAgDrC;;AACA,QAAM,CAACqF,cAAD,EAAiBC,iBAAjB,IAAsCtF,QAAQ,EAApD;AACA,QAAM,CAACuF,YAAD,EAAeC,eAAf,IAAkCxF,QAAQ,EAAhD;AACA,QAAM,CAACyF,YAAD,EAAeC,eAAf,IAAkC1F,QAAQ,EAAhD;AAIA,QAAM,CAAC2F,UAAD,EAAaC,aAAb,IAA8B5F,QAAQ,EAA5C,CAvDqC,CAyDrC;;AACA,QAAM,CAAC6F,YAAD,EAAeC,eAAf,IAAkC9F,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAAC+F,IAAD,EAAOC,OAAP,IAAkBhG,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACiG,QAAD,EAAWC,WAAX,IAA0BlG,QAAQ,CAACuB,SAAD,CAAxC;AACA,QAAM,CAAC4E,UAAD,EAAaC,aAAb,IAA8BpG,QAAQ,EAA5C;AACA,QAAMqG,QAAQ,GAAG9F,WAAW,EAA5B;AAEA,QAAM+F,gBAAgB,GAAGnG,MAAM,EAA/B,CAjEqC,CAmErC;;AACAF,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI4F,YAAY,IAAIV,MAAM,IAAI,IAA9B,EAAoC;AAChC;AACA;AACArB,MAAAA,mBAAmB,CAAC,IAAD,CAAnB,CAHgC,CAIhC;;AACAf,MAAAA,mBAAmB,CAACI,OAAD,EAASgC,MAAT,EAAiBM,YAAjB,EAA+BJ,cAA/B,EAA+CE,YAA/C,CAAnB,CACKgB,IADL,CACWC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAR,EAAgB;AACZpD,UAAAA,YAAY,CAACmD,GAAG,CAACE,OAAJ,CAAYC,IAAb,CAAZ;AACAP,UAAAA,aAAa,CAACI,GAAG,CAACE,OAAJ,CAAYP,UAAb,CAAb;AACH,SAHD,MAIK;AACD9C,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;;AACDyC,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAhC,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAoB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OAZL,EAaK0B,KAbL,CAaYC,GAAD,IAAS;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OAhBL,EALgC,CAsBhC;AACH;AAEJ,GA3BQ,EA2BN,CAACX,MAAD,EAASU,YAAT,CA3BM,CAAT,CApEqC,CAkGrC;;AACA,WAASmB,eAAT,GAA2B;AACvB5B,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAzGoC,CA2GrC;;;AACA,WAASmB,YAAT,GAAwB;AACpBnB,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEH;;AAGD7F,EAAAA,SAAS,CAAC,MAAM;AACZsD,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAO,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAhB,IAAAA,cAAc,CAACK,OAAD,EAAS4C,IAAT,EAAeE,QAAf,CAAd,CAAuCM,IAAvC,CAA6CC,GAAD,IAAS;AACjDM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,GAAnB;;AACA,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACZ;AACApD,QAAAA,YAAY,CAACmD,GAAG,CAACE,OAAJ,CAAYC,IAAb,CAAZ;AACAP,QAAAA,aAAa,CAACI,GAAG,CAACE,OAAJ,CAAYP,UAAb,CAAb;AACH,OAJD,MAKK;AACD;AACA5C,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AACDO,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KAZD,EAaK8C,KAbL,CAaYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACI,KAAR,CAAcL,GAAd;AACH,KAfL;AAiBH,GApBQ,EAoBN,CAACd,IAAD,EAAOE,QAAP,CApBM,CAAT;;AAsBA,WAASkB,oBAAT,CAA8BC,EAA9B,EAAkCC,KAAlC,EAAyC;AACrC7C,IAAAA,WAAW,CAAC4C,EAAD,CAAX;AACAtC,IAAAA,QAAQ,CAACuC,KAAD,CAAR;AACArD,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACAN,IAAAA,aAAa,CAAC,oBAAD,CAAb;AACAE,IAAAA,OAAO,CAAC,iEAAD,CAAP;AACAM,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GA/IoC,CAiJrC;;;AACA,WAASoD,oBAAT,CAA8BF,EAA9B,EAAkCG,IAAlC,EAAwCF,KAAxC,EAA+CZ,MAA/C,EAAuD;AACnD5D,IAAAA,aAAa,CAACuE,EAAD,EAAKG,IAAL,EAAWd,MAAX,CAAb,CACKF,IADL,CACWC,GAAG,IAAI;AACV;AACA,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACZ;AACA;AACA,cAAMe,WAAW,GAAG,CAAC,GAAGpE,SAAJ,CAApB;AACAoE,QAAAA,WAAW,CAACH,KAAD,CAAX,CAAmBZ,MAAnB,GAA4BA,MAA5B;AACApD,QAAAA,YAAY,CAACmE,WAAD,CAAZ;AACH,OAND,MAOK;AACDC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACH;AACJ,KAbL,EAcKb,KAdL,CAcYC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACH,KAhBL;AAiBH,GApKoC,CAsKrC;;;AACA,WAASa,mBAAT,GAA+B;AAC3B1C,IAAAA,eAAe,CAAC,IAAD,CAAf;AACApC,IAAAA,eAAe,CAAC2B,cAAD,CAAf,CACKgC,IADL,CACWC,GAAD,IAAS;AACX;AACA,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACZ,cAAMY,KAAK,GAAGxC,KAAd,CADY,CAEZ;;AACA,cAAM2C,WAAW,GAAG,CAAC,GAAGpE,SAAJ,CAApB;AACAoE,QAAAA,WAAW,CAACG,MAAZ,CAAmBN,KAAnB,EAA0B,CAA1B;AACAhE,QAAAA,YAAY,CAACmE,WAAD,CAAZ;AACAlD,QAAAA,eAAe,CAAC,8BAAD,CAAf;AACAJ,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAY,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,KAdL,EAeK4B,KAfL,CAeYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACI,KAAR,CAAcL,GAAd;AACH,KAjBL;AAkBH,GA3LoC,CA6LrC;;;AACA,WAASe,UAAT,CAAoBC,IAApB,EAA0B;AACtB,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAhB;AACA,UAAMG,UAAU,GAAGxE,MAAM,CAACsE,OAAO,CAACG,QAAR,EAAD,CAAN,GAA6B,GAA7B,GAAmCH,OAAO,CAACI,OAAR,EAAnC,GAAuD,GAAvD,GAA6DJ,OAAO,CAACK,WAAR,EAAhF;AACA,WAAOH,UAAP;AACH,GAlMoC,CAoMrC;;;AACA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACrC;AACAtC,IAAAA,OAAO,CAACsC,OAAO,GAAG,CAAX,CAAP;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,OAAO,GAAG,CAAtB;AACH,GAJD;;AAMA,QAAMC,cAAc,GAAIF,KAAD,IAAW;AAC9BnC,IAAAA,WAAW,CAACmC,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAX;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAzC,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAKA,sBACI;AAAA,4BAII;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,gBAAvB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,yDAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,SAAS,MADb;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,KAAK,EAAC,gBAHV;AAII,gBAAA,OAAO,EAAC,UAJZ;AAKI,gBAAA,QAAQ,EAAG0C,CAAD,IAAOtD,SAAS,CAACsD,CAAC,CAACF,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB,CACI;AADJ;AAEI,gBAAA,EAAE,EAAE;AAAEE,kBAAAA,CAAC,EAAE,CAAL;AAAQC,kBAAAA,EAAE,EAAE;AAAZ,iBAFR;AAGI,gBAAA,OAAO,EAAE,MAAM1D,cAAc,CAAC,IAAD,CAHjC;AAAA,uCAKI,QAAC,aAAD;AAAe,kBAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAiBI;AAAK,cAAA,SAAS,EAAC,8CAAf;AAAA,sCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,SAAS,EAAC,sBAAtC;AACI,gBAAA,OAAO,EAAE,MAAMmB,QAAQ,CAAC,4CAA0ClD,OAA3C,CAD3B;AAAA,wCAGI;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,SAAS,EAAC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eA4BI;AAAA;AAAA;AAAA;AAAA,kBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAqFI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BAGI,QAAC,cAAD;AAAA,+BACI,QAAC,KAAD;AAAA,kCACI,QAAC,SAAD;AAAA,oCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI,QAAC,SAAD;AAAA,sBACKC,SAAS,CAACyF,GAAV,CAAc,CAACC,GAAD,EAAMzB,KAAN,kBAAgB,QAAC,iBAAD;AAAmB,cAAA,OAAO,EAAElE,OAA5B;AAAqC,cAAA,iBAAiB,EAAEmE,oBAAxD;AAA8E,cAAA,GAAG,EAAEwB,GAAnF;AAAwF,cAAA,KAAK,EAAEzB,KAA/F;AAAsG,cAAA,oBAAoB,EAAEF;AAA5H;AAAA;AAAA;AAAA;AAAA,oBAA9B;AADL;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YArFJ,eAuKI;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA,6BACI,QAAC,eAAD;AAEI,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,CAFxB;AAGI,QAAA,OAAO,EAAE,CAHb;AAII,QAAA,KAAK,EAAEhB,UAAU,GAAGF,QAJxB;AAKI,QAAA,WAAW,EAAEA,QALjB;AAMI,QAAA,IAAI,EAAEF,IAAI,GAAG,CANjB;AAOI,QAAA,WAAW,EAAE;AACTgD,UAAAA,UAAU,EAAE;AACR,0BAAc;AADN,WADH;AAITC,UAAAA,MAAM,EAAE;AAJC,SAPjB;AAaI,QAAA,YAAY,EAAEZ,YAblB;AAcI,QAAA,mBAAmB,EAAEG,cAdzB,CAeA;;AAfA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvKJ,eA6LI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEtE,eADV;AAEI,MAAA,IAAI,EAAC,IAFT;AAGI,yBAAgB,+BAHpB;AAII,MAAA,QAAQ,MAJZ;AAKI,MAAA,OAAO,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CALrC;AAAA,6BAOI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE1C,UAAT;AAAA,gCACI,QAAC,cAAD,CAAgB,MAAhB;AAAuB,UAAA,SAAS,EAAC,sBAAjC;AAAA,iCAGI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,EAAvB;AAA2B,cAAA,EAAE,EAAE,EAA/B;AAAmC,cAAA,EAAE,EAAE,EAAvC;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA,0BACKiC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMS,kBAAkB,CAAC,KAAD,CAAzC;AAAA,uCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoBI,QAAC,cAAD,CAAgB,IAAhB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,6BAAf;AAAA,oCACI;AAAA,6CAAoBH,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCAAG;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAAH,OAA2CJ,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,SAAS,EAAC,gCAArC;AACI,cAAA,OAAO,EAAE,MAAMO,kBAAkB,CAAC,KAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,YAKKa,YAAY,gBACT,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,SAAS,EAAC,sBAArC;AAAA,qCACI,QAAC,gBAAD;AAAkB,gBAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADS,gBAKT,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,SAAS,EAAC,sBAAtC;AACI,cAAA,OAAO,EAAE,MAAM;AAAEhB,gBAAAA,SAAS,IAAI,QAAb,GAAyB2D,mBAAmB,EAA5C,GAAmDJ,oBAAoB,EAAvE;AAA4E,eADjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YA7LJ,eAkPI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEnD,eADV;AAEI,MAAA,IAAI,EAAC,IAFT;AAGI,yBAAgB,+BAHpB;AAII,MAAA,QAAQ,MAJZ;AAAA,6BAMI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE3C,UAAZ;AAAA,gCACI,QAAC,cAAD,CAAgB,MAAhB;AAAuB,UAAA,SAAS,EAAC,sBAAjC;AAAA,iCAGI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,EAAvB;AAA2B,cAAA,EAAE,EAAE,EAA/B;AAAmC,cAAA,EAAE,EAAE,EAAvC;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAM0C,kBAAkB,CAAC,KAAD,CAAzC;AAAA,uCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI,QAAC,cAAD,CAAgB,IAAhB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,6BAAf;AAAA,mCACI;AAAA,wBAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,sBAAlB;AACI,cAAA,OAAO,EAAE,MAAMD,kBAAkB,CAAC,KAAD,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAlPJ,eA0RI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEa,WADV;AAEI,yBAAgB,+BAFpB;AAGI,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD,CAHjC;AAAA,6BAMI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE1D,UAAT;AAAA,gCACI,QAAC,cAAD,CAAgB,MAAhB;AAAuB,UAAA,SAAS,EAAC,sBAAjC;AAAA,iCAGI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,EAAvB;AAA2B,cAAA,EAAE,EAAE,EAA/B;AAAmC,cAAA,EAAE,EAAE,EAAvC;AAAA,qCACI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAyB,cAAA,EAAE,EAAE,CAA7B;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAM0D,cAAc,CAAC,KAAD,CAArC;AAAA,uCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI,QAAC,cAAD,CAAgB,IAAhB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,yBAA7B;AAAuD,gBAAA,WAAW,EAAC,MAAnE;AAA0E,gBAAA,QAAQ,EAAGwD,CAAD,IAAOpD,iBAAiB,CAACoD,CAAC,CAACF,MAAF,CAASC,KAAV,CAA5G;AAA8H,gBAAA,KAAK,EAAEpD;AAArI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,yBAA7B;AAAuD,gBAAA,QAAQ,EAAGqD,CAAD,IAAOlD,eAAe,CAACkD,CAAC,CAACF,MAAF,CAASC,KAAV,CAAvF;AAAyG,gBAAA,KAAK,EAAElD;AAAhH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ,eASI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAqB,cAAA,KAAK,EAAE;AAAE0D,gBAAAA,SAAS,EAAE;AAAb,eAA5B;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,kBAAA,SAAS,EAAC,yBAAlB;AAA4C,kBAAA,QAAQ,EAAGP,CAAD,IAAOhD,eAAe,CAACgD,CAAC,CAACF,MAAF,CAASC,KAAV,CAA5E;AAA8F,kBAAA,KAAK,EAAEhD,YAArG;AAAA,0CACI;AAAQ,oBAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAQ,oBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAQ,oBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqBI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAwBI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAyB,gBAAA,EAAE,EAAE,CAA7B;AAAgC,gBAAA,EAAE,EAAE,CAApC;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,UAAhB;AAA2B,kBAAA,SAAS,EAAC,OAArC,CACI;AADJ;AAEI,kBAAA,OAAO,EAAE,MAAMuB,eAAe,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,yBAQI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAyB,gBAAA,EAAE,EAAE,CAA7B;AAAgC,gBAAA,EAAE,EAAE,CAApC;AAAA,0BACKnB,YAAY,gBACT,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,UAAhB;AAA2B,kBAAA,SAAS,EAAC,OAArC;AAAA,yCAEI,QAAC,gBAAD;AAAkB,oBAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,wBADS,gBAMT,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,SAAS,EAAC,OAAtC;AACI,kBAAA,OAAO,EAAE,MAAM;AAAEoB,oBAAAA,YAAY;AAAI,mBADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YA1RJ;AAAA,kBADJ;AA0WH;;GA1jBuBjE,S;UAGFP,S,EA4DDlC,W;;;KA/DGyC,S","sourcesContent":["//page for all subBoards listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\n// import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchBoards, editBoards, deleteBoards, getBoardByFilter, getAllBoard } from \"../../api/Boards/Boards\"\nimport { materialTableIcons } from '../../config';\nimport { dataLimit, modalStyle } from '../../config';\n\n\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {useParams} from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport SingleSubBoardRow from './SingleSubBoardRow';\nimport { deleteSubBoards, editSubBoards, getAllSubBoard, getSubBoardByFilter } from 'src/api/SubBoard/SubBoard';\n\nexport default function SubBoards(props) {\n\n    const tableIcons = materialTableIcons\n    const {boardID} = useParams();\n    //setting subBoards data into a variable\n    const [subBoards, setsubBoards] = useState([]);\n    const [nosubBoards, setNosubBoards] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id and name of the Boards who is blocked or deleted\n    const [actionBoardsId, setBoardsId] = useState();\n    const [BoardsName, setBoardsName] = useState('');\n\n    //unblock or block vairbale \n    const [subBoardstatus, setsubBoardstatus] = useState(true);\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n\n\n\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [totalPages, setTotalPages] = useState();\n    const navigate = useNavigate();\n\n    const materialTableRef = useRef()\n\n    //useEffect for calling the function for filter onchange of search or filter data continue button\n    useEffect(() => {\n\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            getSubBoardByFilter(boardID,search, filterStatus, filterDateFrom, filterDateTo)\n                .then((res) => {\n                    if (res.status) {\n                        setsubBoards(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setsubBoards([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n\n    }, [search, filterLoader])\n\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n\n    useEffect(() => {\n        setNosubBoards(false)\n        setTableDataLoading(true)\n        getAllSubBoard(boardID,page, rowLimit).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Boards into state variable\n                setsubBoards(res.results.data);\n                setTotalPages(res.results.totalPages)\n            }\n            else {\n                //setting no Boards found variable true \n                setNosubBoards(true);\n            }\n            setTableDataLoading(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [page, rowLimit])\n\n    function openDeleteAlertModal(id, index) {\n        setBoardsId(id);\n        setRowId(index)\n        setModalMode('delete');\n        setModalTitle('Delete the Boards?');\n        setInfo('All the details of the Boards will be removed from the Platform');\n        setModalAlertTitle(true)\n    }\n\n    //function to change the status of the Boards to blocked!\n    function changesubBoardstatus(id, name, index, status) {\n        editSubBoards(id, name, status)\n            .then((res => {\n                // console.log('res',res);\n                if (res.status) {\n                    // const index = rowData.tableData.id;\n                    //updating Boards status in state array\n                    const updatedRows = [...subBoards];\n                    updatedRows[index].status = status;\n                    setsubBoards(updatedRows);\n                }\n                else {\n                    alert(\"error occured\")\n                }\n            }))\n            .catch((err => {\n                console.log('err', err);\n            }))\n    }\n\n    //function to delete the Boards from the database\n    function deleteBoardsProfile() {\n        setActionLoader(true)\n        deleteSubBoards(actionBoardsId)\n            .then((res) => {\n                // console.log(res)\n                if (res.status) {\n                    const index = rowId;\n                    //removing deleted Boards from state array \n                    const updatedRows = [...subBoards]\n                    updatedRows.splice(index, 1)\n                    setsubBoards(updatedRows);\n                    setModalContent('Boards Deleted successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                    setActionLoader(false)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n    // function for pagination\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Sub Board Management</h5>\n            {/* <hr className=\"mt-4\" /> */}\n            <div className=\"d-flex align-items-center mt-3 \">\n                <Card className=\"w-100\">\n                    <CardContent className=\"pageHeaderCard\">\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\n                                    onClick={() => navigate('/dashboard/boards/subBoard/addSubBoard/'+boardID)}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Sub Board</Button>\n                                <Button variant=\"contained\" className=\"\" >Export</Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            {/* <div className=\"row\" style={{ marginBottom: 10, marginLeft: 50 }}>\n                            <div className=\"col-lg-5 col-sm-6 col-12\">\n                            </div>\n                            <div className=\"col-lg-3 col-md-2 col-6 \">\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-12\">\n                                <Button variant=\"contained\" className=\"btn btn-primary py-2 px-5 me-3\"\n                                    onClick={() => navigate('/dashboard/subBoards/addBoard')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Board</Button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <InputGroup className=\"mb-3\" >\n                                    <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-lg-4 col-md-2 col-6 \">\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className=\"col-lg-2 col-md-2 col-6 \">\n                                <Button variant=\"contained\" className=\"py-2 px-5 me-3\" >Export</Button>\n                            </div>\n                        </div> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying Boards details  */}\n\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell >Name</TableCell>\n                            <TableCell >Added On</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Action</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {subBoards.map((row, index) => <SingleSubBoardRow boardID={boardID} changeBoardStatus={changesubBoardstatus} row={row} index={index} openDeleteAlertModal={openDeleteAlertModal} />\n                            )}\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <MaterialTable\n                    columns={[\n                        {\n                            title: 'S No.',\n                            field: 'Serial',\n                            render: rowData => <>{rowData.tableData.id + 1}</>\n                        },\n                        {\n                            title: 'Name',\n                            field: 'name',\n                            render: rowData => <>{rowData.name}</>\n                        },\n                        {\n                            title: 'Added On',\n                            field: 'createdAt',\n                            render: rowData => <>{renderDate(rowData.createdAt)}</>\n                        },\n                        {\n                            title: 'Status',\n                            render: rowData => <>{rowData.status == 'inactive' ? ('In Active') : ('Active')}</>\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => <>\n                                {rowData.status == 'inactive' ? (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changesubBoardstatus(rowData, 'active')}\n                                    >\n                                        <i class=\"fas fa-toggle-off txt-5282F0\"></i>\n                                    </a>\n                                ) : (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changesubBoardstatus(rowData, 'inactive')}>\n                                        <i class=\"fas fa-toggle-on txt-5282F0\"></i>\n                                    </a>\n                                )}\n                                &emsp;\n                                <a href=\"javascript:void(0)\"\n                                    onClick={() => navigate('/app/editBoard/' + rowData._id + '/' + rowData.status + '/' + rowData.name)}>\n                                    <i className=\"fas fa-pen txt-5282F0\"></i>\n                                </a>\n                                &emsp;\n                                <a href=\"javascript:void(0)\" onClick={() => openDeleteAlertModal(rowData)}>\n                                    <i className=\"fas fa-trash txt-5282F0\"></i>\n                                </a>\n                            </>\n                        },\n                    ]}\n                    data={subBoards}\n                    isLoading={tableDataLoading}\n                    title=\"subBoards\"\n                    \n                    options={{\n                        sorting: true,\n                        exportButton: true,\n                        toolbar: true,\n                        showTitle: false,\n                        search: false,\n                        paging:false\n                    }}\n                    icons={tableIcons}\n                /> */}\n            </div>\n            <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                <TablePagination\n\n                    rowsPerPageOptions={[1, 2, 5, 10, 25]}\n                    colSpan={3}\n                    count={totalPages * rowLimit}\n                    rowsPerPage={rowLimit}\n                    page={page - 1}\n                    SelectProps={{\n                        inputProps: {\n                            'aria-label': 'rows per page',\n                        },\n                        native: true,\n                    }}\n                    onPageChange={onPageChange}\n                    onRowsPerPageChange={onRowPerChange}\n                // ActionsComponent={TablePaginationActions}\n                />\n            </div>\n            {/* </div> */}\n\n            {/* Modal for delete or blocking confirmation */}\n            <Modal\n                open={modalAlertTitle}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalAlertTitle(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    {modalTitle}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>Are you sure to {modalMode} this Board?</p>\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\n                                onClick={() => setModalAlertTitle(false)}\n                            >Cancel</Button>\n                            &emsp;\n                            {actionLodaer ? (\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\n                                    onClick={() => { modalMode == 'delete' ? (deleteBoardsProfile()) : (changesubBoardstatus()) }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for successful deletion and block */}\n            <Modal\n                show={completionModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Box style={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Updated Boards!\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </Modal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>{modalContent}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <button className=\"btn btn-primary px-5\"\n                                onClick={() => setCompletionModal(false)}\n                            >OK</button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                onClose={() => setFilterModal(false)}\n\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\" >\n                        {/* <BootstrapModal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n                        {/* <Box> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        {/* </Box> */}\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Added Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option value={null}>Status</option>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"inactive\">Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Grid container>\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    <Button variant=\"outlined\" className=\" px-5\"\n                                        // onClick={()=>resetFilterData()}\n                                        onClick={() => resetFilterData()}\n                                    >Reset </Button>\n                                </Grid>\n                                &emsp;\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    {filterLoader ? (\n                                        <Button variant=\"outlined\" className=\" px-5\" >\n\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" className=\" px-5\"\n                                            onClick={() => { applyFilters() }}\n                                        >Confirm</Button>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}