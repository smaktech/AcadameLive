{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\mail\\\\MailSidebar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // @mui\n\nimport { Box, List, Drawer, Button, Divider } from '@mui/material'; // redux\n\nimport { useSelector } from '../../../redux/store'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive'; // config\n\nimport { DRAWER_WIDTH } from '../../../config'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport { SkeletonMailSidebarItem } from '../../../components/skeleton'; //\n\nimport MailSidebarItem from './MailSidebarItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMailSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onOpenCompose: PropTypes.func,\n  onCloseSidebar: PropTypes.func\n};\nexport default function MailSidebar(_ref) {\n  _s();\n\n  let {\n    isOpenSidebar,\n    onOpenCompose,\n    onCloseSidebar\n  } = _ref;\n  const {\n    pathname\n  } = useLocation();\n  const {\n    labels\n  } = useSelector(state => state.mail);\n  const isDesktop = useResponsive('up', 'md');\n  const loading = !labels.length;\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const handleOpenCompose = () => {\n    onCloseSidebar();\n    onOpenCompose();\n  };\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:plus-fill'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this),\n        onClick: handleOpenCompose,\n        children: \"Compose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: (loading ? [...Array(8)] : labels).map((label, index) => label ? /*#__PURE__*/_jsxDEV(MailSidebarItem, {\n        label: label\n      }, label.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(SkeletonMailSidebarItem, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 70\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDesktop ? /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      PaperProps: {\n        sx: {\n          width: DRAWER_WIDTH,\n          position: 'relative'\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Drawer, {\n      open: isOpenSidebar,\n      onClose: onCloseSidebar,\n      ModalProps: {\n        keepMounted: true\n      },\n      PaperProps: {\n        sx: {\n          width: DRAWER_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MailSidebar, \"Metm4sihYAXDrsSmvyUkLp6gO7w=\", false, function () {\n  return [useLocation, useSelector, useResponsive];\n});\n\n_c = MailSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailSidebar\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/mail/MailSidebar.js"],"names":["PropTypes","useEffect","useLocation","Box","List","Drawer","Button","Divider","useSelector","useResponsive","DRAWER_WIDTH","Iconify","Scrollbar","SkeletonMailSidebarItem","MailSidebarItem","MailSidebar","propTypes","isOpenSidebar","bool","onOpenCompose","func","onCloseSidebar","pathname","labels","state","mail","isDesktop","loading","length","handleOpenCompose","renderContent","p","Array","map","label","index","id","sx","width","position","keepMounted"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n// @mui\nimport { Box, List, Drawer, Button, Divider } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// config\nimport { DRAWER_WIDTH } from '../../../config';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport { SkeletonMailSidebarItem } from '../../../components/skeleton';\n//\nimport MailSidebarItem from './MailSidebarItem';\n\n// ----------------------------------------------------------------------\n\nMailSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onOpenCompose: PropTypes.func,\n  onCloseSidebar: PropTypes.func,\n};\n\nexport default function MailSidebar({ isOpenSidebar, onOpenCompose, onCloseSidebar }) {\n  const { pathname } = useLocation();\n  const { labels } = useSelector((state) => state.mail);\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const loading = !labels.length;\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const handleOpenCompose = () => {\n    onCloseSidebar();\n    onOpenCompose();\n  };\n\n  const renderContent = (\n    <Scrollbar>\n      <Box sx={{ p: 3 }}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          startIcon={<Iconify icon={'eva:plus-fill'} />}\n          onClick={handleOpenCompose}\n        >\n          Compose\n        </Button>\n      </Box>\n\n      <Divider />\n\n      <List disablePadding>\n        {(loading ? [...Array(8)] : labels).map((label, index) =>\n          label ? <MailSidebarItem key={label.id} label={label} /> : <SkeletonMailSidebarItem key={index} />\n        )}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {isDesktop ? (\n        <Drawer variant=\"permanent\" PaperProps={{ sx: { width: DRAWER_WIDTH, position: 'relative' } }}>\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{ sx: { width: DRAWER_WIDTH } }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}