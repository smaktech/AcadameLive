{"ast":null,"code":"import _toConsumableArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{useEffect}from'react';import{useLocation}from'react-router-dom';// @mui\nimport{Box,List,Drawer,Button,Divider}from'@mui/material';// redux\nimport{useSelector}from'../../../redux/store';// hooks\nimport useResponsive from'../../../hooks/useResponsive';// config\nimport{DRAWER_WIDTH}from'../../../config';// components\nimport Iconify from'../../../components/Iconify';import Scrollbar from'../../../components/Scrollbar';import{SkeletonMailSidebarItem}from'../../../components/skeleton';//\nimport MailSidebarItem from'./MailSidebarItem';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MailSidebar(_ref){var isOpenSidebar=_ref.isOpenSidebar,onOpenCompose=_ref.onOpenCompose,onCloseSidebar=_ref.onCloseSidebar;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useSelector=useSelector(function(state){return state.mail;}),labels=_useSelector.labels;var isDesktop=useResponsive('up','md');var loading=!labels.length;useEffect(function(){if(isOpenSidebar){onCloseSidebar();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[pathname]);var handleOpenCompose=function handleOpenCompose(){onCloseSidebar();onOpenCompose();};var renderContent=/*#__PURE__*/_jsxs(Scrollbar,{children:[/*#__PURE__*/_jsx(Box,{sx:{p:3},children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Iconify,{icon:'eva:plus-fill'}),onClick:handleOpenCompose,children:\"Compose\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(List,{disablePadding:true,children:(loading?_toConsumableArray(Array(8)):labels).map(function(label,index){return label?/*#__PURE__*/_jsx(MailSidebarItem,{label:label},label.id):/*#__PURE__*/_jsx(SkeletonMailSidebarItem,{},index);})})]});return/*#__PURE__*/_jsx(_Fragment,{children:isDesktop?/*#__PURE__*/_jsx(Drawer,{variant:\"permanent\",PaperProps:{sx:{width:DRAWER_WIDTH,position:'relative'}},children:renderContent}):/*#__PURE__*/_jsx(Drawer,{open:isOpenSidebar,onClose:onCloseSidebar,ModalProps:{keepMounted:true},PaperProps:{sx:{width:DRAWER_WIDTH}},children:renderContent})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/mail/MailSidebar.js"],"names":["useEffect","useLocation","Box","List","Drawer","Button","Divider","useSelector","useResponsive","DRAWER_WIDTH","Iconify","Scrollbar","SkeletonMailSidebarItem","MailSidebarItem","MailSidebar","isOpenSidebar","onOpenCompose","onCloseSidebar","pathname","state","mail","labels","isDesktop","loading","length","handleOpenCompose","renderContent","p","Array","map","label","index","id","sx","width","position","keepMounted"],"mappings":"wKACA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA;AACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,OAApC,KAAmD,eAAnD,CACA;AACA,OAASC,WAAT,KAA4B,sBAA5B,CACA;AACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA;AACA,OAASC,YAAT,KAA6B,iBAA7B,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,OAASC,uBAAT,KAAwC,8BAAxC,CACA;AACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;6IAQA,cAAe,SAASC,CAAAA,WAAT,MAAuE,IAAhDC,CAAAA,aAAgD,MAAhDA,aAAgD,CAAjCC,aAAiC,MAAjCA,aAAiC,CAAlBC,cAAkB,MAAlBA,cAAkB,CACpF,iBAAqBhB,WAAW,EAAhC,CAAQiB,QAAR,cAAQA,QAAR,CACA,iBAAmBX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAA9B,CAAQC,MAAR,cAAQA,MAAR,CAEA,GAAMC,CAAAA,SAAS,CAAGd,aAAa,CAAC,IAAD,CAAO,IAAP,CAA/B,CAEA,GAAMe,CAAAA,OAAO,CAAG,CAACF,MAAM,CAACG,MAAxB,CAEAxB,SAAS,CAAC,UAAM,CACd,GAAIe,aAAJ,CAAmB,CACjBE,cAAc,GACf,CACD;AACD,CALQ,CAKN,CAACC,QAAD,CALM,CAAT,CAOA,GAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BR,cAAc,GACdD,aAAa,GACd,CAHD,CAKA,GAAMU,CAAAA,aAAa,cACjB,MAAC,SAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAT,uBACE,KAAC,MAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAC,WAFV,CAGE,SAAS,cAAE,KAAC,OAAD,EAAS,IAAI,CAAE,eAAf,EAHb,CAIE,OAAO,CAAEF,iBAJX,qBADF,EADF,cAYE,KAAC,OAAD,IAZF,cAcE,KAAC,IAAD,EAAM,cAAc,KAApB,UACG,CAACF,OAAO,oBAAOK,KAAK,CAAC,CAAD,CAAZ,EAAmBP,MAA3B,EAAmCQ,GAAnC,CAAuC,SAACC,KAAD,CAAQC,KAAR,QACtCD,CAAAA,KAAK,cAAG,KAAC,eAAD,EAAgC,KAAK,CAAEA,KAAvC,EAAsBA,KAAK,CAACE,EAA5B,CAAH,cAAsD,KAAC,uBAAD,IAA8BD,KAA9B,CADrB,EAAvC,CADH,EAdF,GADF,CAuBA,mBACE,yBACGT,SAAS,cACR,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,UAAU,CAAE,CAAEW,EAAE,CAAE,CAAEC,KAAK,CAAEzB,YAAT,CAAuB0B,QAAQ,CAAE,UAAjC,CAAN,CAAxC,UACGT,aADH,EADQ,cAKR,KAAC,MAAD,EACE,IAAI,CAAEX,aADR,CAEE,OAAO,CAAEE,cAFX,CAGE,UAAU,CAAE,CAAEmB,WAAW,CAAE,IAAf,CAHd,CAIE,UAAU,CAAE,CAAEH,EAAE,CAAE,CAAEC,KAAK,CAAEzB,YAAT,CAAN,CAJd,UAMGiB,aANH,EANJ,EADF,CAkBD","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n// @mui\nimport { Box, List, Drawer, Button, Divider } from '@mui/material';\n// redux\nimport { useSelector } from '../../../redux/store';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// config\nimport { DRAWER_WIDTH } from '../../../config';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport { SkeletonMailSidebarItem } from '../../../components/skeleton';\n//\nimport MailSidebarItem from './MailSidebarItem';\n\n// ----------------------------------------------------------------------\n\nMailSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onOpenCompose: PropTypes.func,\n  onCloseSidebar: PropTypes.func,\n};\n\nexport default function MailSidebar({ isOpenSidebar, onOpenCompose, onCloseSidebar }) {\n  const { pathname } = useLocation();\n  const { labels } = useSelector((state) => state.mail);\n\n  const isDesktop = useResponsive('up', 'md');\n\n  const loading = !labels.length;\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const handleOpenCompose = () => {\n    onCloseSidebar();\n    onOpenCompose();\n  };\n\n  const renderContent = (\n    <Scrollbar>\n      <Box sx={{ p: 3 }}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          startIcon={<Iconify icon={'eva:plus-fill'} />}\n          onClick={handleOpenCompose}\n        >\n          Compose\n        </Button>\n      </Box>\n\n      <Divider />\n\n      <List disablePadding>\n        {(loading ? [...Array(8)] : labels).map((label, index) =>\n          label ? <MailSidebarItem key={label.id} label={label} /> : <SkeletonMailSidebarItem key={index} />\n        )}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <>\n      {isDesktop ? (\n        <Drawer variant=\"permanent\" PaperProps={{ sx: { width: DRAWER_WIDTH, position: 'relative' } }}>\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{ sx: { width: DRAWER_WIDTH } }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}