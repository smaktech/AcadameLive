{"ast":null,"code":"/*\nLanguage: .properties\nContributors: Valentin Aitken <valentin@nalisbg.com>, Egor Rogov <e.rogov@postgrespro.ru>\nWebsite: https://en.wikipedia.org/wiki/.properties\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction properties(hljs) {\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+'; // delimiter\n\n  var EQUAL_DELIM = WS0 + '[:=]' + WS0;\n  var WS_DELIM = WS1;\n  var DELIM = '(' + EQUAL_DELIM + '|' + WS_DELIM + ')';\n  var KEY = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var DELIM_AND_VALUE = {\n    // skip DELIM\n    end: DELIM,\n    relevance: 0,\n    starts: {\n      // value: everything until end of line (again, taking into account backslashes)\n      className: 'string',\n      end: /$/,\n      relevance: 0,\n      contains: [{\n        begin: '\\\\\\\\\\\\\\\\'\n      }, {\n        begin: '\\\\\\\\\\\\n'\n      }]\n    }\n  };\n  return {\n    name: '.properties',\n    disableAutodetect: true,\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [hljs.COMMENT('^\\\\s*[!#]', '$'), // key: everything until whitespace or = or : (taking into account backslashes)\n    // case of a key-value pair\n    {\n      returnBegin: true,\n      variants: [{\n        begin: KEY + EQUAL_DELIM\n      }, {\n        begin: KEY + WS_DELIM\n      }],\n      contains: [{\n        className: 'attr',\n        begin: KEY,\n        endsParent: true\n      }],\n      starts: DELIM_AND_VALUE\n    }, // case of an empty key\n    {\n      className: 'attr',\n      begin: KEY + WS0 + '$'\n    }]\n  };\n}\n\nmodule.exports = properties;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/properties.js"],"names":["properties","hljs","WS0","WS1","EQUAL_DELIM","WS_DELIM","DELIM","KEY","DELIM_AND_VALUE","end","relevance","starts","className","contains","begin","name","disableAutodetect","case_insensitive","illegal","COMMENT","returnBegin","variants","endsParent","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACxB;AACA,MAAMC,GAAG,GAAG,YAAZ;AACA,MAAMC,GAAG,GAAG,YAAZ,CAHwB,CAIxB;;AACA,MAAMC,WAAW,GAAGF,GAAG,GAAG,MAAN,GAAeA,GAAnC;AACA,MAAMG,QAAQ,GAAGF,GAAjB;AACA,MAAMG,KAAK,GAAG,MAAMF,WAAN,GAAoB,GAApB,GAA0BC,QAA1B,GAAqC,GAAnD;AACA,MAAME,GAAG,GAAG,8BAAZ;AAEA,MAAMC,eAAe,GAAG;AACtB;AACAC,IAAAA,GAAG,EAAEH,KAFiB;AAGtBI,IAAAA,SAAS,EAAE,CAHW;AAItBC,IAAAA,MAAM,EAAE;AACN;AACAC,MAAAA,SAAS,EAAE,QAFL;AAGNH,MAAAA,GAAG,EAAE,GAHC;AAINC,MAAAA,SAAS,EAAE,CAJL;AAKNG,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE;AADT,OADQ,EAIR;AACEA,QAAAA,KAAK,EAAE;AADT,OAJQ;AALJ;AAJc,GAAxB;AAoBA,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,iBAAiB,EAAE,IAFd;AAGLC,IAAAA,gBAAgB,EAAE,IAHb;AAILC,IAAAA,OAAO,EAAE,IAJJ;AAKLL,IAAAA,QAAQ,EAAE,CACRZ,IAAI,CAACkB,OAAL,CAAa,WAAb,EAA0B,GAA1B,CADQ,EAER;AACA;AACA;AACEC,MAAAA,WAAW,EAAE,IADf;AAEEC,MAAAA,QAAQ,EAAE,CACR;AACEP,QAAAA,KAAK,EAAEP,GAAG,GAAGH;AADf,OADQ,EAIR;AACEU,QAAAA,KAAK,EAAEP,GAAG,GAAGF;AADf,OAJQ,CAFZ;AAUEQ,MAAAA,QAAQ,EAAE,CACR;AACED,QAAAA,SAAS,EAAE,MADb;AAEEE,QAAAA,KAAK,EAAEP,GAFT;AAGEe,QAAAA,UAAU,EAAE;AAHd,OADQ,CAVZ;AAiBEX,MAAAA,MAAM,EAAEH;AAjBV,KAJQ,EAuBR;AACA;AACEI,MAAAA,SAAS,EAAE,MADb;AAEEE,MAAAA,KAAK,EAAEP,GAAG,GAAGL,GAAN,GAAY;AAFrB,KAxBQ;AALL,GAAP;AAmCD;;AAEDqB,MAAM,CAACC,OAAP,GAAiBxB,UAAjB","sourcesContent":["/*\nLanguage: .properties\nContributors: Valentin Aitken <valentin@nalisbg.com>, Egor Rogov <e.rogov@postgrespro.ru>\nWebsite: https://en.wikipedia.org/wiki/.properties\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction properties(hljs) {\n  // whitespaces: space, tab, formfeed\n  const WS0 = '[ \\\\t\\\\f]*';\n  const WS1 = '[ \\\\t\\\\f]+';\n  // delimiter\n  const EQUAL_DELIM = WS0 + '[:=]' + WS0;\n  const WS_DELIM = WS1;\n  const DELIM = '(' + EQUAL_DELIM + '|' + WS_DELIM + ')';\n  const KEY = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n\n  const DELIM_AND_VALUE = {\n    // skip DELIM\n    end: DELIM,\n    relevance: 0,\n    starts: {\n      // value: everything until end of line (again, taking into account backslashes)\n      className: 'string',\n      end: /$/,\n      relevance: 0,\n      contains: [\n        {\n          begin: '\\\\\\\\\\\\\\\\'\n        },\n        {\n          begin: '\\\\\\\\\\\\n'\n        }\n      ]\n    }\n  };\n\n  return {\n    name: '.properties',\n    disableAutodetect: true,\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT('^\\\\s*[!#]', '$'),\n      // key: everything until whitespace or = or : (taking into account backslashes)\n      // case of a key-value pair\n      {\n        returnBegin: true,\n        variants: [\n          {\n            begin: KEY + EQUAL_DELIM\n          },\n          {\n            begin: KEY + WS_DELIM\n          }\n        ],\n        contains: [\n          {\n            className: 'attr',\n            begin: KEY,\n            endsParent: true\n          }\n        ],\n        starts: DELIM_AND_VALUE\n      },\n      // case of an empty key\n      {\n        className: 'attr',\n        begin: KEY + WS0 + '$'\n      }\n    ]\n  };\n}\n\nmodule.exports = properties;\n"]},"metadata":{},"sourceType":"script"}