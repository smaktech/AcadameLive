{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{useEffect}from'react';import{useLocation}from'react-router-dom';// @mui\nimport{styled,useTheme}from'@mui/material/styles';import{Box,Stack,Drawer}from'@mui/material';// hooks\nimport useResponsive from'../../../hooks/useResponsive';import useCollapseDrawer from'../../../hooks/useCollapseDrawer';// utils\nimport cssStyles from'../../../utils/cssStyles';// config\nimport{DASHBOARD_NAVBAR_WIDTH,DASHBOARD_NAVBAR_COLLAPSE_WIDTH}from'../../../config';// components\nimport Logo from'../../../components/Logo';import Scrollbar from'../../../components/Scrollbar';import NavSection from'../../../components/nav-section';//\nimport NavbarAccount from'./NavbarAccount';import NavbarDocs from'./NavbarDocs';import CollapseButton from'./CollapseButton';import navConfig from'./NavConfig';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RootStyle=styled('div')(function(_ref){var theme=_ref.theme;return _defineProperty({},theme.breakpoints.up('lg'),{flexShrink:0,transition:theme.transitions.create('width',{duration:theme.transitions.duration.shorter})});});// ----------------------------------------------------------------------\nexport default function DashboardNavbar(_ref3){var isOpenSidebar=_ref3.isOpenSidebar,onCloseSidebar=_ref3.onCloseSidebar;var theme=useTheme();var _useLocation=useLocation(),pathname=_useLocation.pathname;var isDesktop=useResponsive('up','lg');var _useCollapseDrawer=useCollapseDrawer(),isCollapse=_useCollapseDrawer.isCollapse,collapseClick=_useCollapseDrawer.collapseClick,collapseHover=_useCollapseDrawer.collapseHover,onToggleCollapse=_useCollapseDrawer.onToggleCollapse,onHoverEnter=_useCollapseDrawer.onHoverEnter,onHoverLeave=_useCollapseDrawer.onHoverLeave;useEffect(function(){if(isOpenSidebar){onCloseSidebar();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[pathname]);var renderContent=/*#__PURE__*/_jsxs(Scrollbar,{sx:{height:1,'& .simplebar-content':{height:1,display:'flex',flexDirection:'column'}},children:[/*#__PURE__*/_jsxs(Stack,{spacing:3,sx:_objectSpread({pt:3,pb:2,px:2.5,flexShrink:0},isCollapse&&{alignItems:'center'}),children:[/*#__PURE__*/_jsx(Stack,{direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",children:/*#__PURE__*/_jsx(Logo,{})}),/*#__PURE__*/_jsx(NavbarAccount,{isCollapse:isCollapse})]}),/*#__PURE__*/_jsx(NavSection,{navConfig:navConfig,isCollapse:isCollapse}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1}})]});return/*#__PURE__*/_jsxs(RootStyle,{sx:_objectSpread({width:{lg:isCollapse?DASHBOARD_NAVBAR_COLLAPSE_WIDTH:DASHBOARD_NAVBAR_WIDTH}},collapseClick&&{position:'absolute'}),children:[!isDesktop&&/*#__PURE__*/_jsx(Drawer,{open:isOpenSidebar,onClose:onCloseSidebar,PaperProps:{sx:{width:DASHBOARD_NAVBAR_WIDTH}},children:renderContent}),isDesktop&&/*#__PURE__*/_jsx(Drawer,{open:true,variant:\"persistent\",onMouseEnter:onHoverEnter,onMouseLeave:onHoverLeave,PaperProps:{sx:_objectSpread(_objectSpread({cursor:'pointer',width:DASHBOARD_NAVBAR_WIDTH,borderRightStyle:'dashed',bgcolor:'background.default',transition:function transition(theme){return theme.transitions.create('width',{duration:theme.transitions.duration.standard});}},isCollapse&&{width:DASHBOARD_NAVBAR_COLLAPSE_WIDTH}),collapseHover&&_objectSpread(_objectSpread({},cssStyles(theme).bgBlur()),{},{boxShadow:function boxShadow(theme){return theme.customShadows.z24;}}))},children:renderContent})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/navbar/index.js"],"names":["useEffect","useLocation","styled","useTheme","Box","Stack","Drawer","useResponsive","useCollapseDrawer","cssStyles","DASHBOARD_NAVBAR_WIDTH","DASHBOARD_NAVBAR_COLLAPSE_WIDTH","Logo","Scrollbar","NavSection","NavbarAccount","NavbarDocs","CollapseButton","navConfig","RootStyle","theme","breakpoints","up","flexShrink","transition","transitions","create","duration","shorter","DashboardNavbar","isOpenSidebar","onCloseSidebar","pathname","isDesktop","isCollapse","collapseClick","collapseHover","onToggleCollapse","onHoverEnter","onHoverLeave","renderContent","height","display","flexDirection","pt","pb","px","alignItems","flexGrow","width","lg","position","sx","cursor","borderRightStyle","bgcolor","standard","bgBlur","boxShadow","customShadows","z24"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n// @mui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Stack, Drawer } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\nimport useCollapseDrawer from '../../../hooks/useCollapseDrawer';\n// utils\nimport cssStyles from '../../../utils/cssStyles';\n// config\nimport { DASHBOARD_NAVBAR_WIDTH, DASHBOARD_NAVBAR_COLLAPSE_WIDTH } from '../../../config';\n// components\nimport Logo from '../../../components/Logo';\nimport Scrollbar from '../../../components/Scrollbar';\nimport NavSection from '../../../components/nav-section';\n//\nimport NavbarAccount from './NavbarAccount';\nimport NavbarDocs from './NavbarDocs';\nimport CollapseButton from './CollapseButton';\nimport navConfig from './NavConfig';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    transition: theme.transitions.create('width', {\n      duration: theme.transitions.duration.shorter,\n    }),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardNavbar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func,\n};\n\nexport default function DashboardNavbar({ isOpenSidebar, onCloseSidebar }) {\n  const theme = useTheme();\n\n  const { pathname } = useLocation();\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\n    useCollapseDrawer();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: 1,\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\n      }}\n    >\n      <Stack\n        spacing={3}\n        sx={{\n          pt: 3,\n          pb: 2,\n          px: 2.5,\n          flexShrink: 0,\n          ...(isCollapse && { alignItems: 'center' }),\n        }}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Logo />\n\n          {/* {isDesktop && !isCollapse && (\n            <CollapseButton onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\n          )} */}\n        </Stack>\n\n        <NavbarAccount isCollapse={isCollapse} />\n      </Stack>\n\n      <NavSection navConfig={navConfig} isCollapse={isCollapse} />\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      {/* {!isCollapse && <NavbarDocs />} */}\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle\n      sx={{\n        width: {\n          lg: isCollapse ? DASHBOARD_NAVBAR_COLLAPSE_WIDTH : DASHBOARD_NAVBAR_WIDTH,\n        },\n        ...(collapseClick && {\n          position: 'absolute',\n        }),\n      }}\n    >\n      {!isDesktop && (\n        <Drawer open={isOpenSidebar} onClose={onCloseSidebar} PaperProps={{ sx: { width: DASHBOARD_NAVBAR_WIDTH } }}>\n          {renderContent}\n        </Drawer>\n      )}\n\n      {isDesktop && (\n        <Drawer\n          open\n          variant=\"persistent\"\n          onMouseEnter={onHoverEnter}\n          onMouseLeave={onHoverLeave}\n          PaperProps={{\n            sx: {\n              cursor: 'pointer',\n              width: DASHBOARD_NAVBAR_WIDTH,\n              borderRightStyle: 'dashed',\n              bgcolor: 'background.default',\n              transition: (theme) =>\n                theme.transitions.create('width', {\n                  duration: theme.transitions.duration.standard,\n                }),\n              ...(isCollapse && {\n                width: DASHBOARD_NAVBAR_COLLAPSE_WIDTH,\n              }),\n              ...(collapseHover && {\n                ...cssStyles(theme).bgBlur(),\n                boxShadow: (theme) => theme.customShadows.z24,\n              }),\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}