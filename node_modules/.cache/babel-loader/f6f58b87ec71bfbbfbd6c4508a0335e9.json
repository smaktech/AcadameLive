{"ast":null,"code":"import _toConsumableArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//page for all users listing!\nimport React,{useState,useEffect,forwardRef,useRef}from'react';import{InputGroup,FormControl,Table,Form,Row,Col}from'react-bootstrap';import ModalHeader from'react-bootstrap/ModalHeader';import{useSelector}from'react-redux';import{Link,useNavigate,Redirect}from'react-router-dom';import{updatePassword,changeName,uploadImage}from'../../api/Profile/Profile';import Loader from\"react-loader-spinner\";import{createTopic,editTopic,getTopicById}from'../../api/Topic/Topic';import{createCourse,editCourse,getCourseById}from'../../api/Courses/Courses';import{getAllBoard}from'../../api/Boards/Boards';import{getAllClasses}from'../../api/Classes/Classes';import{getAllSubjects}from'../../api/Subject/Subject';import{getAllTopics,getTopicByFilter}from'../../api/Topic/Topic';import{imageBaseUrl}from'../..';// import Button from '@restart/ui/esm/Button'\nimport TopicSelector from'./TopicSelector';import CircularProgress from'@mui/material/CircularProgress';import Card from'@mui/material/Card';import CardContent from'@mui/material/CardContent';import{Button}from'@mui/material';import{Modal as BootstrapModal}from'react-bootstrap';import Grid from'@mui/material/Grid';import Modal from'@mui/material/Modal';import Box from'@mui/material/Box';import{modalStyle}from'src/config';import{useParams}from'react-router-dom';import{getAllSubBoard}from'src/api/SubBoard/SubBoard';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var className='';var boardName='';var subBoardName='';var subjectName='';export default function AddEditCourse(props){// const courseID = props.match.params.courseId;\n// const courseStatus = props.match.params.courseStatus;\nvar _useParams=useParams(),courseID=_useParams.courseID,courseStatus=_useParams.courseStatus;// console.log(props)\n// const subjectStatus = props.match.params.subjectStatus;\nvar _useState=useState(courseID?\"edit\":\"add\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];//setting subjects data into a variable\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),course=_useState4[0],setCourse=_useState4[1];//setting course data into a variable\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),boardData=_useState6[0],setBoardData=_useState6[1];//setting course data into a variable\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),classesData=_useState8[0],setClassesData=_useState8[1];//setting course data into a variable\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),subjectData=_useState10[0],setSubjectData=_useState10[1];//setting course data into a variable\nvar topicData=useRef([]);var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),modalVisible=_useState12[0],setModalVisible=_useState12[1];var navigate=useNavigate();//sets and display the line in the success modal!\nvar _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),modalLine1=_useState14[0],setModalLine1=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),modalLine2=_useState16[0],setModalLine2=_useState16[1];//sets the loader for add course button\nvar _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),addLoader=_useState18[0],setAddLoader=_useState18[1];//sets the loader for edit subject button\nvar _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),editLoader=_useState20[0],setEditLoader=_useState20[1];//sets the loader for edit subject button\nvar _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),editFormLoader=_useState22[0],setEditFormLoader=_useState22[1];//sets the name of the course name user want to add\nvar _useState23=useState(),_useState24=_slicedToArray(_useState23,2),name=_useState24[0],setName=_useState24[1];//sets topic description user want to add\nvar _useState25=useState(),_useState26=_slicedToArray(_useState25,2),description=_useState26[0],setDescription=_useState26[1];//sets board user want to add\nvar _useState27=useState(),_useState28=_slicedToArray(_useState27,2),board=_useState28[0],setBoard=_useState28[1];//sets classes user want to add\nvar _useState29=useState(),_useState30=_slicedToArray(_useState29,2),classes=_useState30[0],setClasses=_useState30[1];//sets subject user want to add\nvar _useState31=useState(),_useState32=_slicedToArray(_useState31,2),subject=_useState32[0],setSubject=_useState32[1];//sets topic  user want to add\nvar _useState33=useState([]),_useState34=_slicedToArray(_useState33,2),topic=_useState34[0],setTopic=_useState34[1];var _useState35=useState([]),_useState36=_slicedToArray(_useState35,2),chooseTopic=_useState36[0],setChooseTopic=_useState36[1];var _useState37=useState(1),_useState38=_slicedToArray(_useState37,2),newTopic=_useState38[0],setNewTopic=_useState38[1];// console.log(chooseTopic)\nvar _useState39=useState([]),_useState40=_slicedToArray(_useState39,2),subBoardsData=_useState40[0],setSubBoardsData=_useState40[1];console.log(subBoardsData);var _useState41=useState(),_useState42=_slicedToArray(_useState41,2),selectedSubBoard=_useState42[0],setSelectedSubBoard=_useState42[1];//sets course picture user want to add\nvar _useState43=useState(),_useState44=_slicedToArray(_useState43,2),coursePicture=_useState44[0],setCoursePicture=_useState44[1];//sets course picture preview user want to add\nvar _useState45=useState(null),_useState46=_slicedToArray(_useState45,2),picturePreview=_useState46[0],setPicturePreview=_useState46[1];//referance variable for video file choose\nvar chooseCoursePictureRef=useRef();var chooseTopicRef=useRef();// sets varialbe for video status\nvar _useState47=useState(false),_useState48=_slicedToArray(_useState47,2),videoStatus=_useState48[0],setVideoStatus=_useState48[1];//shows the error when users try to add subject without name\nvar _useState49=useState(false),_useState50=_slicedToArray(_useState49,2),errorMessage=_useState50[0],setErrorMessage=_useState50[1];var _useState51=useState(false),_useState52=_slicedToArray(_useState51,2),error=_useState52[0],showError=_useState52[1];var _useState53=useState(1),_useState54=_slicedToArray(_useState53,2),page=_useState54[0],setPage=_useState54[1];var _useState55=useState(100),_useState56=_slicedToArray(_useState55,2),limit=_useState56[0],setLimit=_useState56[1];var _useState57=useState(''),_useState58=_slicedToArray(_useState57,2),classState=_useState58[0],setClassState=_useState58[1];var _useState59=useState(''),_useState60=_slicedToArray(_useState59,2),boardState=_useState60[0],setBoardState=_useState60[1];var _useState61=useState(''),_useState62=_slicedToArray(_useState61,2),subBoardState=_useState62[0],setSubBoardState=_useState62[1];var _useState63=useState(''),_useState64=_slicedToArray(_useState63,2),subjectState=_useState64[0],setSubjectState=_useState64[1];var _useState65=useState(null),_useState66=_slicedToArray(_useState65,2),courseImage=_useState66[0],setCourseImage=_useState66[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!board){_context.next=5;break;}_context.next=3;return getAllSubBoard(board,1,1000);case 3:response=_context.sent;if(response.status){setSubBoardsData(response.results.data);}case 5:case\"end\":return _context.stop();}}},_callee);})),[board]);useEffect(function(){setMode(courseID?\"edit\":\"add\");setEditFormLoader(true);getCourseById(courseID).then(function(res){console.log('res',res);if(res.status){var _res$course,_res$course$boardID,_res$course2,_res$course2$subBoard;//setting the fetched Course by id into state variable\nsetCourse(res.course);setName(res.course.name);setDescription(res.course.description);setBoard(res===null||res===void 0?void 0:(_res$course=res.course)===null||_res$course===void 0?void 0:(_res$course$boardID=_res$course.boardID)===null||_res$course$boardID===void 0?void 0:_res$course$boardID._id);setSelectedSubBoard(res===null||res===void 0?void 0:(_res$course2=res.course)===null||_res$course2===void 0?void 0:(_res$course2$subBoard=_res$course2.subBoardID)===null||_res$course2$subBoard===void 0?void 0:_res$course2$subBoard._id);setClasses(res.course.classesID._id);setSubject(res.course.subjectID._id);setTopic(res.course.topicIDs);setCoursePicture(res.course.coursePicture);}setEditFormLoader(false);}).catch(function(err){console.error(err);});},[courseID]);useEffect(function(){// fetching all boards\ngetAllBoard(page,limit).then(function(res){console.log('Boards',res);if(res.status){//setting the fetched board into state variable\nsetBoardData(res.results.data);}}).catch(function(err){console.error(err);});// fetching all topics\ngetAllTopics(page,limit).then(function(res){console.log('Topics',res);if(res.status){//setting the fetched topic into state variable\ntopicData.current=res.results.data;chooseTopicHandler();}}).catch(function(err){console.error(err);});// fetching all classes\ngetAllClasses(page,limit).then(function(res){console.log('Classes',res);if(res.status){//setting the fetched classes into state variable\nsetClassesData(res.results.data);}}).catch(function(err){console.error(err);});// fetching all subjects\ngetAllSubjects(page,limit).then(function(res){console.log('Subjects',res);if(res.status){//setting the fetched Subject into state variable\nsetSubjectData(res.results.data);}}).catch(function(err){console.error(err);});},[]);//edit the details  of the existing Course\nfunction editCourseDetails(){setModalVisible(false);setEditLoader(true);showError(false);if(courseID!=''){editCourse(courseID,name,board,selectedSubBoard,classes,subject,description,courseStatus,courseImage).then(function(res){console.log(res);if(res.status){setEditLoader(false);setModalLine1('Subject details has been');setModalLine2('updated successfully');setModalVisible(true);}else{setEditLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.error(err);setEditLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill all the Course details');}}//adds new Course \nfunction addNewCourse(){className='';boardName='';subBoardName='';subjectName='';setModalVisible(false);setAddLoader(true);showError(false);// console.log(name, board, classes, subject, topic, description)\nconsole.log(name,\" \",board,\" \",classes,\" \",subject,\" \",description,\"\",courseImage);if(name&&board&&classes&&subject&&description&&courseImage!=''){createCourse(name,board,selectedSubBoard,classes,subject,description,'active',courseImage).then(function(res){console.log(res);if(res.status){setAddLoader(false);setModalLine1('New Course Added');setModalLine2('Successfully');setModalVisible(true);}else{setAddLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.log(err);setAddLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the Course details');}}// // on change Picture handler\n// const onChangePictureHandler = (e) => {\n//     var url = URL.createObjectURL(e.target.files[0]);\n//     console.log(e.target.files[0])\n//     setPicturePreview(url)\n//     setCoursePicture(e.target.files[0])\n// }\n// function to reset \nvar reSetForm=function reSetForm(){setName(null);setDescription(null);setBoard(null);setClasses(null);setSubject(null);setTopic(null);setSelectedSubBoard(null);setCoursePicture(null);};// function for choose topic\nvar actionForChooseTopic=function actionForChooseTopic(e,index){// setTopic(e.target.value)\nvar newDAta=e.target.value;var all=_toConsumableArray(topic);all[index]=newDAta;setTopic(all);console.log(all);};// function to add new topic\nvar chooseTopicHandler=function chooseTopicHandler(){var all=_toConsumableArray(topic);all.push(\"-1\");setTopic(all);};//function to delete the selected topic from state array\nfunction deleteTopic(index){//removing selected topic from state array \nvar updatedTopic=_toConsumableArray(topic);updatedTopic.splice(index,1);setTopic(updatedTopic);console.log(\"working\");}console.log(className);var classSeparator=function classSeparator(e){setClassState(e.target.value);var classId=e.target.value.split('*')[0];setClasses(classId);className=e.target.value.split('*')[1];setName(className+' '+boardName+' '+subjectName);};var boardSeparator=function boardSeparator(e){setBoardState(e.target.value);var boardId=e.target.value.split('*')[0];setBoard(boardId);boardName=e.target.value.split('*')[1];setName(className+' '+boardName+' '+subjectName);};var subBoardSeparator=function subBoardSeparator(e){setSubBoardState(e.target.value);var subBoardId=e.target.value.split('*')[0];setSelectedSubBoard(subBoardId);subBoardName=e.target.value.split('*')[1];setName(className+' '+boardName+' '+subBoardName);};var subjectSeparator=function subjectSeparator(e){setSubjectState(e.target.value);var subjectId=e.target.value.split('*')[0];setSubject(subjectId);subjectName=e.target.value.split('*')[1];setName(className+' '+boardName+' '+subBoardName+' '+subjectName);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mt-3 txt-5282F0 fw-bold\",children:\"Courses Management\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"mt-4\"}),editFormLoader?/*#__PURE__*/_jsx(\"div\",{className:\"w-100 py-2 px-6 me-3\",style:{display:'flex',height:'100vh',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\" align-items-center\",children:[/*#__PURE__*/_jsx(Card,{className:\"w-100\",children:/*#__PURE__*/_jsx(CardContent,{className:\"pageHeaderCard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[error?/*#__PURE__*/_jsx(\"div\",{class:\"row pt-2 \",style:{margin:5},children:/*#__PURE__*/_jsx(\"div\",{class:\"col-md-5  col-sm-12 clr-danger-100\",children:/*#__PURE__*/_jsx(\"div\",{class:\"   text-center\",children:errorMessage})})}):/*#__PURE__*/_jsx(_Fragment,{children:\" \"}),/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-6 col-sm-6 col-12\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Course Name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,value:name,type:\"text\",onChange:function onChange(e){return setName(e.target.value);},placeholder:\"Enter Course Name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Qualification\"}),/*#__PURE__*/_jsxs(Form.Select,{value:classState,onChange:classSeparator,\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select\"}),classesData.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:\"\".concat(item._id,\"*\").concat(item.name),children:item.name},index);})]})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Board\"}),/*#__PURE__*/_jsxs(Form.Select,{value:boardState,onChange:boardSeparator,\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select\"}),boardData.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:\"\".concat(item._id,\"*\").concat(item.name),children:item.name},index);})]})]}),subBoardsData.length?/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Sub Board\"}),/*#__PURE__*/_jsxs(Form.Select,{value:subBoardState,onChange:subBoardSeparator,\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select\"}),subBoardsData.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:\"\".concat(item._id,\"*\").concat(item.name),children:item.name},index);})]})]}):null,/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Subject\"}),/*#__PURE__*/_jsxs(Form.Select,{value:subjectState,onChange:subjectSeparator,\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select\"}),subjectData.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:\"\".concat(item._id,\"*\").concat(item.name),children:item.name},index);})]})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{value:description,placeholder:\"Enter Course Description\",type:\"text\",onChange:function onChange(e){return setDescription(e.target.value);},as:\"textarea\",rows:3})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Icon\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return setCourseImage(e.target.files[0]);}})]})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:mode==\"edit\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return navigate('/dashboard/courses');},variant:\"outlined\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:editLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",className:\"py-2 px-6 me-3\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:\"py-2 px-6 me-3\",onClick:function onClick(){editCourseDetails();},children:\"Save Changes\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:addLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",className:\"py-2 px-6 me-3\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"outlined\",className:\"py-2 px-6 me-3\",onClick:function onClick(){return addNewCourse();},children:\"Add Course\"})})})]})}),/*#__PURE__*/_jsx(Modal,{open:modalVisible,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,onClose:function onClose(){setModalVisible(false);},children:/*#__PURE__*/_jsx(Box,{sx:modalStyle,children:/*#__PURE__*/_jsxs(BootstrapModal.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center txt-5282F0 my-4\",style:{alignItems:'center',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(\"img\",{src:'/Assets/modalPhoto.png'}),/*#__PURE__*/_jsx(\"h3\",{children:modalLine1}),/*#__PURE__*/_jsx(\"h3\",{className:\"modalLowerText\",children:modalLine2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4 pb-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",style:{marginRight:10,marginTop:10},onClick:function onClick(){mode=='add'?/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm())}):/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm(),navigate('/dashboard/courses/addCourse'))});},children:\"Add New Course\"}),\"\\u2003\",/*#__PURE__*/_jsx(Button,{variant:\"outlined\",style:{marginRight:10,marginTop:10},onClick:function onClick(){return navigate('/dashboard/courses');},children:\"Back To Courses\"})]})]})})})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/courses/AddEditCourse.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","Row","Col","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","createTopic","editTopic","getTopicById","createCourse","editCourse","getCourseById","getAllBoard","getAllClasses","getAllSubjects","getAllTopics","getTopicByFilter","imageBaseUrl","TopicSelector","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","useParams","getAllSubBoard","className","boardName","subBoardName","subjectName","AddEditCourse","props","courseID","courseStatus","mode","setMode","course","setCourse","boardData","setBoardData","classesData","setClassesData","subjectData","setSubjectData","topicData","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","name","setName","description","setDescription","board","setBoard","classes","setClasses","subject","setSubject","topic","setTopic","chooseTopic","setChooseTopic","newTopic","setNewTopic","subBoardsData","setSubBoardsData","console","log","selectedSubBoard","setSelectedSubBoard","coursePicture","setCoursePicture","picturePreview","setPicturePreview","chooseCoursePictureRef","chooseTopicRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","page","setPage","limit","setLimit","classState","setClassState","boardState","setBoardState","subBoardState","setSubBoardState","subjectState","setSubjectState","courseImage","setCourseImage","response","status","results","data","then","res","boardID","_id","subBoardID","classesID","subjectID","topicIDs","catch","err","current","chooseTopicHandler","editCourseDetails","addNewCourse","reSetForm","actionForChooseTopic","e","index","newDAta","target","value","all","push","deleteTopic","updatedTopic","splice","classSeparator","classId","split","boardSeparator","boardId","subBoardSeparator","subBoardId","subjectSeparator","subjectId","display","height","justifyContent","alignItems","margin","map","item","length","files","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic'\nimport { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses'\nimport { getAllBoard } from '../../api/Boards/Boards'\nimport { getAllClasses } from '../../api/Classes/Classes'\nimport { getAllSubjects } from '../../api/Subject/Subject'\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\nimport { imageBaseUrl } from '../..'\n// import Button from '@restart/ui/esm/Button'\nimport TopicSelector from './TopicSelector'\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\nimport { useParams } from 'react-router-dom'\nimport { getAllSubBoard } from 'src/api/SubBoard/SubBoard'\n\nvar className = '';\nvar boardName = '';\nvar subBoardName = '';\nvar subjectName = '';\n\nexport default function AddEditCourse(props) {\n\n    // const courseID = props.match.params.courseId;\n    // const courseStatus = props.match.params.courseStatus;\n    const { courseID, courseStatus } = useParams()\n    // console.log(props)\n    // const subjectStatus = props.match.params.subjectStatus;\n    const [mode, setMode] = useState(courseID ? \"edit\" : \"add\")\n\n    //setting subjects data into a variable\n    const [course, setCourse] = useState({});\n    //setting course data into a variable\n    const [boardData, setBoardData] = useState([]);\n\n    //setting course data into a variable\n    const [classesData, setClassesData] = useState([]);\n\n    //setting course data into a variable\n    const [subjectData, setSubjectData] = useState([]);\n\n    //setting course data into a variable\n    const topicData = useRef([]);\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add course button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the course name user want to add\n    const [name, setName] = useState();\n\n    //sets topic description user want to add\n    const [description, setDescription] = useState()\n\n    //sets board user want to add\n    const [board, setBoard] = useState()\n\n    //sets classes user want to add\n    const [classes, setClasses] = useState()\n\n    //sets subject user want to add\n    const [subject, setSubject] = useState()\n\n    //sets topic  user want to add\n    const [topic, setTopic] = useState([])\n    const [chooseTopic, setChooseTopic] = useState([])\n    const [newTopic, setNewTopic] = useState(1)\n    // console.log(chooseTopic)\n    const [subBoardsData, setSubBoardsData] = useState([])\n    console.log(subBoardsData)\n    const [selectedSubBoard, setSelectedSubBoard] = useState()\n    //sets course picture user want to add\n\n    const [coursePicture, setCoursePicture] = useState()\n    //sets course picture preview user want to add\n    const [picturePreview, setPicturePreview] = useState(null);\n\n    //referance variable for video file choose\n    let chooseCoursePictureRef = useRef()\n    let chooseTopicRef = useRef()\n\n    // sets varialbe for video status\n    const [videoStatus, setVideoStatus] = useState(false)\n\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [page, setPage] = useState(1);\n\n    const [limit, setLimit] = useState(100);\n    const [classState, setClassState] = useState('')\n    const [boardState, setBoardState] = useState('')\n    const [subBoardState, setSubBoardState] = useState('')\n    const [subjectState, setSubjectState] = useState('')\n\n    const [courseImage, setCourseImage] = useState(null);\n    useEffect(async () => {\n        if (board) {\n            const response = await getAllSubBoard(board, 1, 1000)\n            if (response.status) {\n                setSubBoardsData(response.results.data);\n            }\n        }\n    }, [board])\n\n    useEffect(() => {\n        setMode(courseID ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getCourseById(courseID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Course by id into state variable\n                setCourse(res.course);\n                setName(res.course.name)\n                setDescription(res.course.description)\n                setBoard(res?.course?.boardID?._id)\n                setSelectedSubBoard(res?.course?.subBoardID?._id)\n                setClasses(res.course.classesID._id)\n                setSubject(res.course.subjectID._id)\n                setTopic(res.course.topicIDs)\n                setCoursePicture(res.course.coursePicture)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [courseID])\n\n\n    useEffect(() => {\n        // fetching all boards\n        getAllBoard(page, limit).then((res) => {\n            console.log('Boards', res);\n            if (res.status) {\n                //setting the fetched board into state variable\n                setBoardData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        // fetching all topics\n        getAllTopics(page, limit).then((res) => {\n            console.log('Topics', res);\n            if (res.status) {\n                //setting the fetched topic into state variable\n                topicData.current = res.results.data;\n\n                chooseTopicHandler()\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n\n        // fetching all classes\n        getAllClasses(page, limit).then((res) => {\n            console.log('Classes', res);\n            if (res.status) {\n                //setting the fetched classes into state variable\n                setClassesData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n\n        // fetching all subjects\n        getAllSubjects(page, limit).then((res) => {\n            console.log('Subjects', res);\n            if (res.status) {\n                //setting the fetched Subject into state variable\n                setSubjectData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [])\n\n\n\n\n\n\n\n\n    //edit the details  of the existing Course\n    function editCourseDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (courseID != '') {\n\n            editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus,courseImage)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Subject details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill all the Course details');\n        }\n\n    }\n\n    //adds new Course \n    function addNewCourse() {\n        className = '';\n        boardName = '';\n        subBoardName = '';\n        subjectName = '';\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        // console.log(name, board, classes, subject, topic, description)\n        console.log(name, \" \", board, \" \", classes, \" \", subject, \" \", description, \"\", courseImage)\n        if (name && board && classes && subject && description && courseImage != '') {\n            createCourse(name, board, selectedSubBoard, classes, subject, description, 'active', courseImage)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Course Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Course details');\n        }\n    }\n\n    // // on change Picture handler\n    // const onChangePictureHandler = (e) => {\n    //     var url = URL.createObjectURL(e.target.files[0]);\n    //     console.log(e.target.files[0])\n    //     setPicturePreview(url)\n    //     setCoursePicture(e.target.files[0])\n    // }\n\n    // function to reset \n    const reSetForm = () => {\n        setName(null)\n        setDescription(null)\n        setBoard(null)\n        setClasses(null)\n        setSubject(null)\n        setTopic(null)\n        setSelectedSubBoard(null)\n        setCoursePicture(null)\n    }\n\n    // function for choose topic\n    const actionForChooseTopic = (e, index) => {\n        // setTopic(e.target.value)\n        let newDAta = e.target.value\n        let all = [...topic];\n        all[index] = newDAta\n        setTopic(all)\n        console.log(all)\n    }\n\n    // function to add new topic\n    const chooseTopicHandler = () => {\n\n        let all = [...topic];\n        all.push(\"-1\")\n        setTopic(all)\n    }\n\n    //function to delete the selected topic from state array\n    function deleteTopic(index) {\n        //removing selected topic from state array \n        const updatedTopic = [...topic]\n        updatedTopic.splice(index, 1)\n        setTopic(updatedTopic);\n        console.log(\"working\")\n\n    }\n\n\n    console.log(className)\n    const classSeparator = (e) => {\n        setClassState(e.target.value)\n        const classId = e.target.value.split('*')[0]\n        setClasses(classId)\n        className = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subjectName)\n    }\n    const boardSeparator = (e) => {\n        setBoardState(e.target.value)\n        const boardId = e.target.value.split('*')[0]\n        setBoard(boardId);\n        boardName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subjectName)\n    }\n    const subBoardSeparator = (e) => {\n        setSubBoardState(e.target.value)\n        const subBoardId = e.target.value.split('*')[0]\n        setSelectedSubBoard(subBoardId);\n        subBoardName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subBoardName)\n    }\n    const subjectSeparator = (e) => {\n        setSubjectState(e.target.value)\n        const subjectId = e.target.value.split('*')[0]\n        setSubject(subjectId);\n        subjectName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subBoardName + ' ' + subjectName)\n    }\n\n\n\n    return (\n        <>\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Courses Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <Form>\n                                        <div className=\"col-lg-6 col-sm-6 col-12\">\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Course Name</Form.Label>\n                                                <Form.Control required value={name} type=\"text\" onChange={(e) => setName(e.target.value)} placeholder=\"Enter Course Name\" />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Qualification</Form.Label>\n                                                <Form.Select value={classState} onChange={classSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {classesData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Board</Form.Label>\n                                                <Form.Select value={boardState} onChange={boardSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {boardData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n                                            {subBoardsData.length ? (\n                                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>Select Sub Board</Form.Label>\n                                                    <Form.Select value={subBoardState} onChange={subBoardSeparator} aria-label=\"Default select example\">\n                                                        <option>Select</option>\n                                                        {subBoardsData.map((item, index) => (\n                                                            <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                        ))}\n                                                    </Form.Select>\n                                                </Form.Group>\n                                            ) : (null)}\n\n\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Subject</Form.Label>\n                                                <Form.Select value={subjectState} onChange={subjectSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {subjectData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Description</Form.Label>\n                                                <Form.Control value={description} placeholder=\"Enter Course Description\" type=\"text\" onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Choose Icon</Form.Label>\n                                                <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setCourseImage(e.target.files[0])} />\n                                            </Form.Group>\n\n                                        </div>\n                                    </Form>\n\n                                    {/* <div className=\"col-lg-12 col-sm-6 col-12\">\n                                        <Row>\n                                            <Col>\n                                                {topicData.current && topic&&topic.map((item, index) => (\n                                                    <>\n                                                        <TopicSelector topicData={topicData.current} topic={item} index={index} actionForChooseTopic={actionForChooseTopic} />\n                                                        {index > 0 ? (\n                                                            <div className='d-flex justify-content-end'>\n                                                                <Button  variant=\"outlined\" color=\"error\" onClick={()=>deleteTopic(index)} className=\"mb-4 float-right\" ><i class=\"fas fa-plus-circle\"></i> Remove</Button>\n                                                            </div>\n                                                        ) : ('')}\n                                                    </>\n                                                ))}  \n                                            </Col>\n                                            <Col>\n                                                <Button variant=\"outlined\" className='mt-4' onClick={() => chooseTopicHandler()}><i class=\"fas fa-plus-circle\"></i> Add New Topic</Button>\n                                            </Col>\n                                        </Row>\n                                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                            <Form.Label>Description</Form.Label>\n                                            <Form.Control value={description} placeholder=\"Enter Course Description\" type=\"text\" onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} />\n                                        </Form.Group>\n\n                                    </div> */}\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {/* <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >Cancel</Button> */}\n                                        <Button onClick={() => navigate('/dashboard/courses')} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" className=\"py-2 px-6 me-3\" onClick={() => { editCourseDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"outlined\" className=\"py-2 px-6 me-3\"\n                                            onClick={() => addNewCourse()}\n                                        >Add Course</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )\n            }\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => { setModalVisible(false) }}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/courses/addCourse')}</>) }}\n                            >Add New Course</Button>\n                            &emsp;\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/courses')}\n                            >Back To Courses</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}