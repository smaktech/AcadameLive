{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\nav-section\\\\NavList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom'; // @mui\n\nimport { List, Collapse } from '@mui/material'; //\n\nimport { NavItemRoot, NavItemSub } from './NavItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getActive = (path, pathname) => path ? !!matchPath({\n  path,\n  end: false\n}, pathname) : false;\n\nNavListRoot.propTypes = {\n  isCollapse: PropTypes.bool,\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string\n  })\n};\nexport function NavListRoot(_ref) {\n  _s();\n\n  let {\n    list,\n    isCollapse\n  } = _ref;\n  const {\n    pathname\n  } = useLocation();\n  const active = getActive(list.path, pathname);\n  const [open, setOpen] = useState(active);\n  const hasChildren = list.children;\n\n  if (hasChildren) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItemRoot, {\n        item: list,\n        isCollapse: isCollapse,\n        active: active,\n        open: open,\n        onOpen: () => setOpen(!open)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), !isCollapse && /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"div\",\n          disablePadding: true,\n          children: (list.children || []).map(item => /*#__PURE__*/_jsxDEV(NavListSub, {\n            list: item\n          }, item.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavItemRoot, {\n    item: list,\n    active: active,\n    isCollapse: isCollapse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n} // ----------------------------------------------------------------------\n\n_s(NavListRoot, \"fORsXMiWooAFaFuZHqVdKgeqsqM=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavListRoot;\nNavListSub.propTypes = {\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string\n  })\n};\n\nfunction NavListSub(_ref2) {\n  _s2();\n\n  let {\n    list\n  } = _ref2;\n  const {\n    pathname\n  } = useLocation();\n  const activeRoot = getActive(list.path, pathname);\n  const [open, setOpen] = useState(activeRoot);\n  const hasChildren = list.children;\n\n  if (hasChildren) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItemSub, {\n        item: list,\n        onOpen: () => setOpen(!open),\n        open: open,\n        active: activeRoot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"div\",\n          disablePadding: true,\n          sx: {\n            pl: 3\n          },\n          children: (list.children || []).map(item => /*#__PURE__*/_jsxDEV(NavItemSub, {\n            item: item,\n            active: getActive(item.path, pathname)\n          }, item.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavItemSub, {\n    item: list,\n    active: activeRoot\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(NavListSub, \"nvnhdNCV8LL4CufoDvRyoQP10dQ=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = NavListSub;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavListRoot\");\n$RefreshReg$(_c2, \"NavListSub\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/nav-section/NavList.js"],"names":["PropTypes","useState","matchPath","useLocation","List","Collapse","NavItemRoot","NavItemSub","getActive","path","pathname","end","NavListRoot","propTypes","isCollapse","bool","list","shape","children","array","string","active","open","setOpen","hasChildren","map","item","title","NavListSub","activeRoot","pl"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\n// @mui\nimport { List, Collapse } from '@mui/material';\n//\nimport { NavItemRoot, NavItemSub } from './NavItem';\n\n// ----------------------------------------------------------------------\n\nconst getActive = (path, pathname) => (path ? !!matchPath({ path, end: false }, pathname) : false);\n\nNavListRoot.propTypes = {\n  isCollapse: PropTypes.bool,\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string,\n  }),\n};\n\nexport function NavListRoot({ list, isCollapse }) {\n  const { pathname } = useLocation();\n\n  const active = getActive(list.path, pathname);\n\n  const [open, setOpen] = useState(active);\n\n  const hasChildren = list.children;\n\n  if (hasChildren) {\n    return (\n      <>\n        <NavItemRoot item={list} isCollapse={isCollapse} active={active} open={open} onOpen={() => setOpen(!open)} />\n\n        {!isCollapse && (\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {(list.children || []).map((item) => (\n                <NavListSub key={item.title} list={item} />\n              ))}\n            </List>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n\n  return <NavItemRoot item={list} active={active} isCollapse={isCollapse} />;\n}\n\n// ----------------------------------------------------------------------\n\nNavListSub.propTypes = {\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string,\n  }),\n};\n\nfunction NavListSub({ list }) {\n  const { pathname } = useLocation();\n\n  const activeRoot = getActive(list.path, pathname);\n\n  const [open, setOpen] = useState(activeRoot);\n\n  const hasChildren = list.children;\n\n  if (hasChildren) {\n    return (\n      <>\n        <NavItemSub item={list} onOpen={() => setOpen(!open)} open={open} active={activeRoot} />\n\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding sx={{ pl: 3 }}>\n            {(list.children || []).map((item) => (\n              <NavItemSub key={item.title} item={item} active={getActive(item.path, pathname)} />\n            ))}\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n\n  return <NavItemSub item={list} active={activeRoot} />;\n}\n"]},"metadata":{},"sourceType":"module"}