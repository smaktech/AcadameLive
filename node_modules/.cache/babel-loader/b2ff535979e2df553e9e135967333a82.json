{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\draggable-markers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport MapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react'; // components\n\nimport { MapControlScale, MapControlMarker, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../../components/map'; //\n\nimport ControlPanel from './ControlPanel'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapDraggableMarkers(_ref) {\n  _s();\n\n  let { ...other\n  } = _ref;\n  const [events, logEvents] = useState({});\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100\n  });\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n  const onMarkerDragStart = useCallback(event => {\n    logEvents(_events => ({ ..._events,\n      onDragStart: event.lngLat\n    }));\n  }, []);\n  const onMarkerDrag = useCallback(event => {\n    logEvents(_events => ({ ..._events,\n      onDrag: event.lngLat\n    }));\n  }, []);\n  const onMarkerDragEnd = useCallback(event => {\n    logEvents(_events => ({ ..._events,\n      onDragEnd: event.lngLat\n    }));\n    setMarker({\n      longitude: event.lngLat[0],\n      latitude: event.lngLat[1]\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      onViewportChange: setViewport,\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlMarker, {\n        draggable: true,\n        longitude: marker.longitude,\n        latitude: marker.latitude,\n        offsetTop: -20,\n        offsetLeft: -10,\n        onDragStart: onMarkerDragStart,\n        onDrag: onMarkerDrag,\n        onDragEnd: onMarkerDragEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MapDraggableMarkers, \"aF/+x2gycSs3dND9FfW6+wkde+o=\");\n\n_c = MapDraggableMarkers;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDraggableMarkers\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/draggable-markers/index.js"],"names":["MapGL","useState","useCallback","MapControlScale","MapControlMarker","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","MapDraggableMarkers","other","events","logEvents","marker","setMarker","latitude","longitude","viewport","setViewport","zoom","bearing","pitch","onMarkerDragStart","event","_events","onDragStart","lngLat","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd"],"mappings":"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","sourcesContent":["import MapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\n// components\nimport {\n  MapControlScale,\n  MapControlMarker,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nexport default function MapDraggableMarkers({ ...other }) {\n  const [events, logEvents] = useState({});\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100,\n  });\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const onMarkerDragStart = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDragStart: event.lngLat }));\n  }, []);\n\n  const onMarkerDrag = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDrag: event.lngLat }));\n  }, []);\n\n  const onMarkerDragEnd = useCallback((event) => {\n    logEvents((_events) => ({ ..._events, onDragEnd: event.lngLat }));\n    setMarker({\n      longitude: event.lngLat[0],\n      latitude: event.lngLat[1],\n    });\n  }, []);\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        <MapControlMarker\n          draggable\n          longitude={marker.longitude}\n          latitude={marker.latitude}\n          offsetTop={-20}\n          offsetLeft={-10}\n          onDragStart={onMarkerDragStart}\n          onDrag={onMarkerDrag}\n          onDragEnd={onMarkerDragEnd}\n        />\n      </MapGL>\n\n      <ControlPanel events={events} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}