{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{orderBy}from'lodash';import{Link as RouterLink}from'react-router-dom';import InfiniteScroll from'react-infinite-scroll-component';import{useEffect,useCallback,useState}from'react';// @mui\nimport{Grid,Button,Container,Stack}from'@mui/material';// redux\nimport{useDispatch,useSelector}from'../../redux/store';import{getPostsInitial,getMorePosts}from'../../redux/slices/blog';// hooks\nimport useSettings from'../../hooks/useSettings';// routes\nimport{PATH_DASHBOARD}from'../../routes/paths';// components\nimport Page from'../../components/Page';import Iconify from'../../components/Iconify';import{SkeletonPosts}from'../../components/skeleton';import HeaderBreadcrumbs from'../../components/HeaderBreadcrumbs';// sections\nimport{BlogPostCard,BlogPostsSort,BlogPostsSearch}from'../../sections/@dashboard/blog';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SORT_OPTIONS=[{value:'latest',label:'Latest'},{value:'popular',label:'Popular'},{value:'oldest',label:'Oldest'}];// ----------------------------------------------------------------------\nvar applySort=function applySort(posts,sortBy){if(sortBy==='latest'){return orderBy(posts,['createdAt'],['desc']);}if(sortBy==='oldest'){return orderBy(posts,['createdAt'],['asc']);}if(sortBy==='popular'){return orderBy(posts,['view'],['desc']);}return posts;};export default function BlogPosts(){var _useSettings=useSettings(),themeStretch=_useSettings.themeStretch;var dispatch=useDispatch();var _useState=useState('latest'),_useState2=_slicedToArray(_useState,2),filters=_useState2[0],setFilters=_useState2[1];var _useSelector=useSelector(function(state){return state.blog;}),posts=_useSelector.posts,hasMore=_useSelector.hasMore,index=_useSelector.index,step=_useSelector.step;var sortedPosts=applySort(posts,filters);var onScroll=useCallback(function(){return dispatch(getMorePosts());},[dispatch]);useEffect(function(){dispatch(getPostsInitial(index,step));},[dispatch,index,step]);var handleChangeSort=function handleChangeSort(value){if(value){setFilters(value);}};return/*#__PURE__*/_jsx(Page,{title:\"Blog: Posts\",children:/*#__PURE__*/_jsxs(Container,{maxWidth:themeStretch?false:'lg',children:[/*#__PURE__*/_jsx(HeaderBreadcrumbs,{heading:\"Blog\",links:[{name:'Dashboard',href:PATH_DASHBOARD.root},{name:'Blog',href:PATH_DASHBOARD.blog.root},{name:'Posts'}],action:/*#__PURE__*/_jsx(Button,{variant:\"contained\",component:RouterLink,to:PATH_DASHBOARD.blog.newPost,startIcon:/*#__PURE__*/_jsx(Iconify,{icon:'eva:plus-fill'}),children:\"New Post\"})}),/*#__PURE__*/_jsxs(Stack,{mb:5,direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(BlogPostsSearch,{}),/*#__PURE__*/_jsx(BlogPostsSort,{query:filters,options:SORT_OPTIONS,onSort:handleChangeSort})]}),/*#__PURE__*/_jsx(InfiniteScroll,{next:onScroll,hasMore:hasMore,loader:/*#__PURE__*/_jsx(SkeletonPosts,{}),dataLength:posts.length,style:{overflow:'inherit'},children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:sortedPosts.map(function(post,index){return/*#__PURE__*/_jsx(BlogPostCard,{post:post,index:index},post.id);})})})]})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/dashboard/BlogPosts.js"],"names":["orderBy","Link","RouterLink","InfiniteScroll","useEffect","useCallback","useState","Grid","Button","Container","Stack","useDispatch","useSelector","getPostsInitial","getMorePosts","useSettings","PATH_DASHBOARD","Page","Iconify","SkeletonPosts","HeaderBreadcrumbs","BlogPostCard","BlogPostsSort","BlogPostsSearch","SORT_OPTIONS","value","label","applySort","posts","sortBy","BlogPosts","themeStretch","dispatch","filters","setFilters","state","blog","hasMore","index","step","sortedPosts","onScroll","handleChangeSort","name","href","root","newPost","length","overflow","map","post","id"],"mappings":"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","sourcesContent":["import { orderBy } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useEffect, useCallback, useState } from 'react';\n// @mui\nimport { Grid, Button, Container, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getPostsInitial, getMorePosts } from '../../redux/slices/blog';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\nimport { SkeletonPosts } from '../../components/skeleton';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport { BlogPostCard, BlogPostsSort, BlogPostsSearch } from '../../sections/@dashboard/blog';\n\n// ----------------------------------------------------------------------\n\nconst SORT_OPTIONS = [\n  { value: 'latest', label: 'Latest' },\n  { value: 'popular', label: 'Popular' },\n  { value: 'oldest', label: 'Oldest' },\n];\n\n// ----------------------------------------------------------------------\n\nconst applySort = (posts, sortBy) => {\n  if (sortBy === 'latest') {\n    return orderBy(posts, ['createdAt'], ['desc']);\n  }\n  if (sortBy === 'oldest') {\n    return orderBy(posts, ['createdAt'], ['asc']);\n  }\n  if (sortBy === 'popular') {\n    return orderBy(posts, ['view'], ['desc']);\n  }\n  return posts;\n};\n\nexport default function BlogPosts() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const [filters, setFilters] = useState('latest');\n  const { posts, hasMore, index, step } = useSelector((state) => state.blog);\n\n  const sortedPosts = applySort(posts, filters);\n  const onScroll = useCallback(() => dispatch(getMorePosts()), [dispatch]);\n\n  useEffect(() => {\n    dispatch(getPostsInitial(index, step));\n  }, [dispatch, index, step]);\n\n  const handleChangeSort = (value) => {\n    if (value) {\n      setFilters(value);\n    }\n  };\n\n  return (\n    <Page title=\"Blog: Posts\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Blog\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Blog', href: PATH_DASHBOARD.blog.root },\n            { name: 'Posts' },\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.blog.newPost}\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\n            >\n              New Post\n            </Button>\n          }\n        />\n\n        <Stack mb={5} direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <BlogPostsSearch />\n          <BlogPostsSort query={filters} options={SORT_OPTIONS} onSort={handleChangeSort} />\n        </Stack>\n\n        <InfiniteScroll\n          next={onScroll}\n          hasMore={hasMore}\n          loader={<SkeletonPosts />}\n          dataLength={posts.length}\n          style={{ overflow: 'inherit' }}\n        >\n          <Grid container spacing={3}>\n            {sortedPosts.map((post, index) => (\n              <BlogPostCard key={post.id} post={post} index={index} />\n            ))}\n          </Grid>\n        </InfiniteScroll>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}