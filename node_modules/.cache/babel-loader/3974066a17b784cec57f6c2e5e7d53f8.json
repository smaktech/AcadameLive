{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\blog\\\\BlogPostCommentItem.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types'; // @mui\n\nimport { Box, Button, Avatar, Divider, ListItem, TextField, Typography, ListItemText, ListItemAvatar } from '@mui/material'; // utils\n\nimport { fDate } from '../../../utils/formatTime'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nBlogPostCommentItem.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  message: PropTypes.string,\n  tagUser: PropTypes.string,\n  postedAt: PropTypes.string,\n  hasReply: PropTypes.bool\n};\nexport default function BlogPostCommentItem(_ref) {\n  _s();\n\n  let {\n    name,\n    avatarUrl,\n    message,\n    tagUser,\n    postedAt,\n    hasReply\n  } = _ref;\n  const [openReply, setOpenReply] = useState(false);\n\n  const handleOpenReply = () => {\n    setOpenReply(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      disableGutters: true,\n      sx: {\n        alignItems: 'flex-start',\n        py: 3,\n        ...(hasReply && {\n          ml: 'auto',\n          width: theme => `calc(100% - ${theme.spacing(7)})`\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: name,\n          src: avatarUrl,\n          sx: {\n            width: 48,\n            height: 48\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: name,\n        primaryTypographyProps: {\n          variant: 'subtitle1'\n        },\n        secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"caption\",\n            sx: {\n              display: 'block',\n              color: 'text.disabled'\n            },\n            children: fDate(postedAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: tagUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), \" \", message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), !hasReply && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: handleOpenReply,\n        sx: {\n          position: 'absolute',\n          right: 0\n        },\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !hasReply && openReply && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        ml: 'auto',\n        width: theme => `calc(100% - ${theme.spacing(7)})`\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        size: \"small\",\n        placeholder: \"Write comment\",\n        sx: {\n          '& fieldset': {\n            borderWidth: `1px !important`,\n            borderColor: theme => `${theme.palette.grey[50032]} !important`\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        ml: 'auto',\n        width: theme => `calc(100% - ${theme.spacing(7)})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BlogPostCommentItem, \"uyeb//TN2gWkLWkO/ZM8h2GkMnY=\");\n\n_c = BlogPostCommentItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCommentItem\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/blog/BlogPostCommentItem.js"],"names":["useState","PropTypes","Box","Button","Avatar","Divider","ListItem","TextField","Typography","ListItemText","ListItemAvatar","fDate","BlogPostCommentItem","propTypes","name","string","avatarUrl","message","tagUser","postedAt","hasReply","bool","openReply","setOpenReply","handleOpenReply","alignItems","py","ml","width","theme","spacing","height","variant","display","color","position","right","mb","borderWidth","borderColor","palette","grey"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n// @mui\nimport {\n  Box,\n  Button,\n  Avatar,\n  Divider,\n  ListItem,\n  TextField,\n  Typography,\n  ListItemText,\n  ListItemAvatar,\n} from '@mui/material';\n// utils\nimport { fDate } from '../../../utils/formatTime';\n\n// ----------------------------------------------------------------------\n\nBlogPostCommentItem.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  message: PropTypes.string,\n  tagUser: PropTypes.string,\n  postedAt: PropTypes.string,\n  hasReply: PropTypes.bool,\n};\n\nexport default function BlogPostCommentItem({ name, avatarUrl, message, tagUser, postedAt, hasReply }) {\n  const [openReply, setOpenReply] = useState(false);\n\n  const handleOpenReply = () => {\n    setOpenReply(true);\n  };\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        sx={{\n          alignItems: 'flex-start',\n          py: 3,\n          ...(hasReply && {\n            ml: 'auto',\n            width: (theme) => `calc(100% - ${theme.spacing(7)})`,\n          }),\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar alt={name} src={avatarUrl} sx={{ width: 48, height: 48 }} />\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={name}\n          primaryTypographyProps={{ variant: 'subtitle1' }}\n          secondary={\n            <>\n              <Typography\n                gutterBottom\n                variant=\"caption\"\n                sx={{\n                  display: 'block',\n                  color: 'text.disabled',\n                }}\n              >\n                {fDate(postedAt)}\n              </Typography>\n              <Typography component=\"span\" variant=\"body2\">\n                <strong>{tagUser}</strong> {message}\n              </Typography>\n            </>\n          }\n        />\n\n        {!hasReply && (\n          <Button size=\"small\" onClick={handleOpenReply} sx={{ position: 'absolute', right: 0 }}>\n            Reply\n          </Button>\n        )}\n      </ListItem>\n\n      {!hasReply && openReply && (\n        <Box\n          sx={{\n            mb: 3,\n            ml: 'auto',\n            width: (theme) => `calc(100% - ${theme.spacing(7)})`,\n          }}\n        >\n          <TextField\n            fullWidth\n            size=\"small\"\n            placeholder=\"Write comment\"\n            sx={{\n              '& fieldset': {\n                borderWidth: `1px !important`,\n                borderColor: (theme) => `${theme.palette.grey[500_32]} !important`,\n              },\n            }}\n          />\n        </Box>\n      )}\n\n      <Divider\n        sx={{\n          ml: 'auto',\n          width: (theme) => `calc(100% - ${theme.spacing(7)})`,\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}