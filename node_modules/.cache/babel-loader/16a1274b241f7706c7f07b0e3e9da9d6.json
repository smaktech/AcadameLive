{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\MapDeckglOverlay.js\",\n    _s = $RefreshSig$();\n\nimport MapGL from 'react-map-gl';\nimport { useState } from 'react';\nimport DeckGL, { ArcLayer } from 'deck.gl'; // components\n\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapDeckglOverlay(_ref) {\n  _s();\n\n  let { ...other\n  } = _ref;\n  const [viewport, setViewport] = useState({\n    longitude: -122.45,\n    latitude: 37.78,\n    zoom: 11,\n    bearing: 0,\n    pitch: 30\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      onViewportChange: setViewport,\n      maxPitch: 85,\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeckGL, {\n        viewState: viewport,\n        layers: [new ArcLayer({\n          data: [{\n            sourcePosition: [-122.41669, 37.7853],\n            targetPosition: [-122.45669, 37.781]\n          }],\n          strokeWidth: 4,\n          getSourceColor: () => [0, 0, 255],\n          getTargetColor: () => [0, 255, 0]\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapDeckglOverlay, \"vw2KJhdIRsWX3kCoL2zjKxhv+Dc=\");\n\n_c = MapDeckglOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDeckglOverlay\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapDeckglOverlay.js"],"names":["MapGL","useState","DeckGL","ArcLayer","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","MapDeckglOverlay","other","viewport","setViewport","longitude","latitude","zoom","bearing","pitch","data","sourcePosition","targetPosition","strokeWidth","getSourceColor","getTargetColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,SAAjC,C,CACA;;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,oBAA/C,EAAqEC,oBAArE,QAAiG,sBAAjG,C,CAEA;;;;AAEA,eAAe,SAASC,gBAAT,OAAwC;AAAA;;AAAA,MAAd,EAAE,GAAGC;AAAL,GAAc;AACrD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,SAAS,EAAE,CAAC,MAD2B;AAEvCC,IAAAA,QAAQ,EAAE,KAF6B;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,sBACE;AAAA,2BACE,QAAC,KAAD,OAAWN,QAAX;AAAqB,MAAA,gBAAgB,EAAEC,WAAvC;AAAoD,MAAA,QAAQ,EAAE,EAA9D;AAAA,SAAsEF,KAAtE;AAAA,8BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAME,QAAC,MAAD;AACE,QAAA,SAAS,EAAEC,QADb;AAEE,QAAA,MAAM,EAAE,CACN,IAAIP,QAAJ,CAAa;AACXc,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,cAAc,EAAE,CAAC,CAAC,SAAF,EAAa,OAAb,CADlB;AAEEC,YAAAA,cAAc,EAAE,CAAC,CAAC,SAAF,EAAa,MAAb;AAFlB,WADI,CADK;AAOXC,UAAAA,WAAW,EAAE,CAPF;AAQXC,UAAAA,cAAc,EAAE,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CARX;AASXC,UAAAA,cAAc,EAAE,MAAM,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT;AATX,SAAb,CADM;AAFV;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GApCuBd,gB;;KAAAA,gB","sourcesContent":["import MapGL from 'react-map-gl';\nimport { useState } from 'react';\nimport DeckGL, { ArcLayer } from 'deck.gl';\n// components\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nexport default function MapDeckglOverlay({ ...other }) {\n  const [viewport, setViewport] = useState({\n    longitude: -122.45,\n    latitude: 37.78,\n    zoom: 11,\n    bearing: 0,\n    pitch: 30,\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} maxPitch={85} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        <DeckGL\n          viewState={viewport}\n          layers={[\n            new ArcLayer({\n              data: [\n                {\n                  sourcePosition: [-122.41669, 37.7853],\n                  targetPosition: [-122.45669, 37.781],\n                },\n              ],\n              strokeWidth: 4,\n              getSourceColor: () => [0, 0, 255],\n              getTargetColor: () => [0, 255, 0],\n            }),\n          ]}\n        />\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}