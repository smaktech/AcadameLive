{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import bbox from'@turf/bbox';import{useState}from'react';import MapGL,{LinearInterpolator,WebMercatorViewport}from'react-map-gl';// _mock_\nimport MAP_STYLE from'../../_mock/map/map-style-basic-v8.json';// components\nimport{MapControlScale,MapControlGeolocate,MapControlNavigation,MapControlFullscreen}from'../../components/map';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var mapStyle=_objectSpread(_objectSpread({},MAP_STYLE),{},{sources:_objectSpread({},MAP_STYLE.sources),layers:MAP_STYLE.layers.slice()});mapStyle.sources['sf-neighborhoods']={type:'geojson',data:'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json'};mapStyle.layers.push({id:'sf-neighborhoods-fill',source:'sf-neighborhoods',type:'fill',paint:{'fill-outline-color':'#0040c8','fill-color':'#fff','fill-opacity':0}},{id:'sf-neighborhoods-outline',source:'sf-neighborhoods',type:'line',paint:{'line-width':2,'line-color':'#0080ef'}});// ----------------------------------------------------------------------\nexport default function MapZoomToBounds(_ref){var other=Object.assign({},_ref);var _useState=useState({latitude:37.78,longitude:-122.4,zoom:11,bearing:0,pitch:0}),_useState2=_slicedToArray(_useState,2),viewport=_useState2[0],setViewport=_useState2[1];var onClick=function onClick(event){var feature=event.features[0];if(feature){var _bbox=bbox(feature),_bbox2=_slicedToArray(_bbox,4),minLng=_bbox2[0],minLat=_bbox2[1],maxLng=_bbox2[2],maxLat=_bbox2[3];var viewports=new WebMercatorViewport(viewport);var _viewports$fitBounds=viewports.fitBounds([[minLng,minLat],[maxLng,maxLat]],{padding:40}),longitude=_viewports$fitBounds.longitude,latitude=_viewports$fitBounds.latitude,zoom=_viewports$fitBounds.zoom;setViewport({longitude:longitude,latitude:latitude,zoom:zoom,transitionInterpolator:new LinearInterpolator({around:[event.offsetCenter.x,event.offsetCenter.y]}),transitionDuration:1000});}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MapGL,_objectSpread(_objectSpread(_objectSpread({},viewport),{},{mapStyle:mapStyle,onViewportChange:setViewport,onClick:onClick,interactiveLayerIds:['sf-neighborhoods-fill']},other),{},{children:[/*#__PURE__*/_jsx(MapControlScale,{}),/*#__PURE__*/_jsx(MapControlNavigation,{}),/*#__PURE__*/_jsx(MapControlFullscreen,{}),/*#__PURE__*/_jsx(MapControlGeolocate,{})]}))});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapZoomToBounds.js"],"names":["bbox","useState","MapGL","LinearInterpolator","WebMercatorViewport","MAP_STYLE","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","mapStyle","sources","layers","slice","type","data","push","id","source","paint","MapZoomToBounds","other","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","onClick","event","feature","features","minLng","minLat","maxLng","maxLat","viewports","fitBounds","padding","transitionInterpolator","around","offsetCenter","x","y","transitionDuration"],"mappings":"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","sourcesContent":["import bbox from '@turf/bbox';\nimport { useState } from 'react';\nimport MapGL, { LinearInterpolator, WebMercatorViewport } from 'react-map-gl';\n// _mock_\nimport MAP_STYLE from '../../_mock/map/map-style-basic-v8.json';\n// components\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst mapStyle = {\n  ...MAP_STYLE,\n  sources: { ...MAP_STYLE.sources },\n  layers: MAP_STYLE.layers.slice(),\n};\n\nmapStyle.sources['sf-neighborhoods'] = {\n  type: 'geojson',\n  data: 'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json',\n};\n\nmapStyle.layers.push(\n  {\n    id: 'sf-neighborhoods-fill',\n    source: 'sf-neighborhoods',\n    type: 'fill',\n    paint: {\n      'fill-outline-color': '#0040c8',\n      'fill-color': '#fff',\n      'fill-opacity': 0,\n    },\n  },\n  {\n    id: 'sf-neighborhoods-outline',\n    source: 'sf-neighborhoods',\n    type: 'line',\n    paint: {\n      'line-width': 2,\n      'line-color': '#0080ef',\n    },\n  }\n);\n\n// ----------------------------------------------------------------------\n\nexport default function MapZoomToBounds({ ...other }) {\n  const [viewport, setViewport] = useState({\n    latitude: 37.78,\n    longitude: -122.4,\n    zoom: 11,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const onClick = (event) => {\n    const feature = event.features[0];\n    if (feature) {\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature);\n      const viewports = new WebMercatorViewport(viewport);\n      const { longitude, latitude, zoom } = viewports.fitBounds(\n        [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ],\n        { padding: 40 }\n      );\n      setViewport({\n        longitude,\n        latitude,\n        zoom,\n        transitionInterpolator: new LinearInterpolator({\n          around: [event.offsetCenter.x, event.offsetCenter.y],\n        }),\n        transitionDuration: 1000,\n      });\n    }\n  };\n\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        mapStyle={mapStyle}\n        onViewportChange={setViewport}\n        onClick={onClick}\n        interactiveLayerIds={['sf-neighborhoods-fill']}\n        {...other}\n      >\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}