{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\MapMarkersPopups.js\",\n    _s = $RefreshSig$();\n\nimport MapGL from 'react-map-gl';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // @mui\n\nimport { Box, Typography } from '@mui/material'; // components\n\nimport Image from '../../components/Image';\nimport { MapControlPopup, MapControlMarker, MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMapMarkersPopups.propTypes = {\n  data: PropTypes.array\n};\nexport default function MapMarkersPopups(_ref) {\n  _s();\n\n  let {\n    data,\n    ...other\n  } = _ref;\n  const [tooltip, setTooltip] = useState(null);\n  const [viewport, setViewport] = useState({\n    zoom: 2\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      onViewportChange: setViewport,\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), data.map(country => /*#__PURE__*/_jsxDEV(MapControlMarker, {\n        latitude: country.latlng[0],\n        longitude: country.latlng[1],\n        onClick: () => setTooltip(country)\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), tooltip && /*#__PURE__*/_jsxDEV(MapControlPopup, {\n        longitude: tooltip.latlng[1],\n        latitude: tooltip.latlng[0],\n        onClose: () => setTooltip(null),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            color: 'common.white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1,\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: '18px',\n                minWidth: '28px',\n                marginRight: '8px',\n                borderRadius: '4px',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${tooltip.country_code.toLowerCase()}.svg)`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: tooltip.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"caption\",\n            children: [\"Timezones: \", tooltip.timezones]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"caption\",\n            children: [\"Lat: \", tooltip.latlng[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"caption\",\n            children: [\"Long: \", tooltip.latlng[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            alt: tooltip.name,\n            src: tooltip.photo,\n            ratio: \"4/3\",\n            sx: {\n              mt: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapMarkersPopups, \"E7jpS6I23o/sZm6LDW5zNL0TaqE=\");\n\n_c = MapMarkersPopups;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapMarkersPopups\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapMarkersPopups.js"],"names":["MapGL","PropTypes","useState","Box","Typography","Image","MapControlPopup","MapControlMarker","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","MapMarkersPopups","propTypes","data","array","other","tooltip","setTooltip","viewport","setViewport","zoom","map","country","latlng","name","color","mb","display","alignItems","height","minWidth","marginRight","borderRadius","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","country_code","toLowerCase","timezones","photo","mt"],"mappings":"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","sourcesContent":["import MapGL from 'react-map-gl';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Typography } from '@mui/material';\n// components\nimport Image from '../../components/Image';\nimport {\n  MapControlPopup,\n  MapControlMarker,\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nMapMarkersPopups.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default function MapMarkersPopups({ data, ...other }) {\n  const [tooltip, setTooltip] = useState(null);\n  const [viewport, setViewport] = useState({\n    zoom: 2,\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        {data.map((country) => (\n          <MapControlMarker\n            key={country.name}\n            latitude={country.latlng[0]}\n            longitude={country.latlng[1]}\n            onClick={() => setTooltip(country)}\n          />\n        ))}\n\n        {tooltip && (\n          <MapControlPopup longitude={tooltip.latlng[1]} latitude={tooltip.latlng[0]} onClose={() => setTooltip(null)}>\n            <Box sx={{ color: 'common.white' }}>\n              <Box\n                sx={{\n                  mb: 1,\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <Box\n                  sx={{\n                    height: '18px',\n                    minWidth: '28px',\n                    marginRight: '8px',\n                    borderRadius: '4px',\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${tooltip.country_code.toLowerCase()}.svg)`,\n                  }}\n                />\n                <Typography variant=\"subtitle2\">{tooltip.name}</Typography>\n              </Box>\n              <Typography component=\"div\" variant=\"caption\">\n                Timezones: {tooltip.timezones}\n              </Typography>\n              <Typography component=\"div\" variant=\"caption\">\n                Lat: {tooltip.latlng[0]}\n              </Typography>\n              <Typography component=\"div\" variant=\"caption\">\n                Long: {tooltip.latlng[1]}\n              </Typography>\n              <Image alt={tooltip.name} src={tooltip.photo} ratio=\"4/3\" sx={{ mt: 1, borderRadius: 1 }} />\n            </Box>\n          </MapControlPopup>\n        )}\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}