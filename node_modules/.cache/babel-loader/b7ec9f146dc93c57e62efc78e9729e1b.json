{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//page for all users listing!\nimport React,{useState,useEffect,forwardRef,useRef}from'react';import{InputGroup,FormControl,Table,Form}from'react-bootstrap';import ModalHeader from'react-bootstrap/ModalHeader';import{useSelector}from'react-redux';import{Link,useNavigate,Redirect}from'react-router-dom';import{updatePassword,changeName,uploadImage}from'../../api/Profile/Profile';import Loader from\"react-loader-spinner\";import{BsSortDownAlt,BsFillTrashFill,BiBlock}from\"react-icons/bs\";import MaterialTable from'material-table';import{fetchboards,editBoards,deleteboard,getBoardById}from\"../../api/Boards/Boards\";import{createBoard}from'../../api/Boards/Boards';import{useParams}from'react-router-dom';import CircularProgress from'@mui/material/CircularProgress';import Card from'@mui/material/Card';import CardContent from'@mui/material/CardContent';import{Button}from'@mui/material';import{Modal as BootstrapModal}from'react-bootstrap';import Grid from'@mui/material/Grid';import Modal from'@mui/material/Modal';import Box from'@mui/material/Box';import{modalStyle}from'src/config';import{createSubBoard,editSubBoards,getSubBoardById}from'src/api/SubBoard/SubBoard';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddEditSubBoards(props){// const boardId = props.match.params.board/oardStatus;\nvar _useParams=useParams(),boardId=_useParams.boardId,subBoardStatus=_useParams.subBoardStatus,subBoardId=_useParams.subBoardId;var _useState=useState(boardId?\"edit\":\"add\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalVisible=_useState4[0],setModalVisible=_useState4[1];var navigate=useNavigate();//sets and display the line in the success modal!\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),modalLine1=_useState6[0],setModalLine1=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),modalLine2=_useState8[0],setModalLine2=_useState8[1];//sets the loader for add board button\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),addLoader=_useState10[0],setAddLoader=_useState10[1];//sets the loader for edit board button\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),editLoader=_useState12[0],setEditLoader=_useState12[1];//sets the loader for edit subject button\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),editFormLoader=_useState14[0],setEditFormLoader=_useState14[1];//sets the name of the board user want to add\nvar _useState15=useState(),_useState16=_slicedToArray(_useState15,2),subBoardName=_useState16[0],setsubBoardName=_useState16[1];//shows the error when users try to add board without name\nvar _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),errorMessage=_useState18[0],setErrorMessage=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),error=_useState20[0],showError=_useState20[1];var _useState21=useState(null),_useState22=_slicedToArray(_useState21,2),subBoardIcon=_useState22[0],setSubBoardIcon=_useState22[1];//updating mode state on change of board id\nuseEffect(function(){setMode(subBoardId?\"edit\":\"add\");setEditFormLoader(true);getSubBoardById(subBoardId).then(function(res){console.log('res',res);if(res.status){//setting the fetched board by id into state variable\nsetsubBoardName(res.subBoards.name);}setEditFormLoader(false);}).catch(function(err){console.error(err);setEditFormLoader(false);});},[boardId]);//edit the details basically the name of the existing board\nfunction editboardDetails(){setModalVisible(false);setEditLoader(true);showError(false);if(subBoardName!=''){editSubBoards(subBoardId,subBoardName,subBoardStatus).then(function(res){console.log(res);if(res.status){setEditLoader(false);setModalLine1('Sub Board details has been');setModalLine2('updated successfully');setModalVisible(true);}else{setEditLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.error(err);setEditLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the Sub board name');}}//adds new board \nfunction addNewboard(){setModalVisible(false);setAddLoader(true);showError(false);if(subBoardName!=''){createSubBoard(subBoardName,'active',boardId,subBoardIcon).then(function(res){console.log(res);if(res.status){setAddLoader(false);setModalLine1('New Sub Board Added');setModalLine2('Successfully');setModalVisible(true);}else{setAddLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.log(err);setAddLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the Sub board name');}}// function to reset\nvar reSetForm=function reSetForm(){setsubBoardName('');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mt-3 txt-5282F0 fw-bold\",children:\"Sub Board Management\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"mt-4\"}),editFormLoader?/*#__PURE__*/_jsx(\"div\",{className:\"w-100 py-2 px-6 me-3\",style:{display:'flex',height:'100vh',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\" align-items-center\",children:[/*#__PURE__*/_jsx(Card,{className:\"w-100\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[error?/*#__PURE__*/_jsx(\"div\",{class:\"row pt-2 \",style:{margin:5},children:/*#__PURE__*/_jsx(\"div\",{class:\"col-md-5  col-sm-12 clr-danger-100\",children:/*#__PURE__*/_jsx(\"div\",{class:\"   text-center\",children:errorMessage})})}):/*#__PURE__*/_jsx(_Fragment,{children:\" \"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-6 col-12\",children:/*#__PURE__*/_jsx(Form,{children:mode=='edit'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Board Name\"}),/*#__PURE__*/_jsx(Form.Control,{value:subBoardName,type:\"text\",placeholder:\"Enter board Name\",onChange:function onChange(e){return setsubBoardName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Icon\"}),/*#__PURE__*/_jsx(Form.Control,{value:subBoardIcon,type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return setSubBoardIcon(e.target.files[0]);}})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Board Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter board Name\",onChange:function onChange(e){return setsubBoardName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Icon\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return setSubBoardIcon(e.target.files[0]);}})]})]})})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:mode==\"edit\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return navigate('/dashboard/boards/subBoard/addSubBoard/'+boardId);},variant:\"outlined\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:editLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){editboardDetails();},children:\"Save Changes\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:addLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return addNewboard();},children:\"Add Sub Board\"})})})]})}),/*#__PURE__*/_jsx(Modal,{open:modalVisible,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,onClose:function onClose(){return setModalVisible(false);},children:/*#__PURE__*/_jsx(Box,{sx:modalStyle,children:/*#__PURE__*/_jsxs(BootstrapModal.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center txt-5282F0 my-4\",style:{alignItems:'center',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(\"img\",{src:'/Assets/modalPhoto.png'}),/*#__PURE__*/_jsx(\"h3\",{children:modalLine1}),/*#__PURE__*/_jsx(\"h3\",{className:\"modalLowerText\",children:modalLine2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4 pb-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",style:{marginRight:10,marginTop:10},onClick:function onClick(){mode=='add'?/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm())}):/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm(),navigate('/dashboard/boards/subBoard/addSubBoard/'+boardId))});},children:\"Add New Sub Board\"}),\"\\u2003\",/*#__PURE__*/_jsx(Button,{variant:\"contained\",style:{marginRight:10,marginTop:10},onClick:function onClick(){return navigate('/dashboard/boards/subBoard/'+boardId);},children:\"Back To Sub Boards\"})]})]})})})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/subBoard/AddEditSubBoard.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchboards","editBoards","deleteboard","getBoardById","createBoard","useParams","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","createSubBoard","editSubBoards","getSubBoardById","AddEditSubBoards","props","boardId","subBoardStatus","subBoardId","mode","setMode","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","subBoardName","setsubBoardName","errorMessage","setErrorMessage","error","showError","subBoardIcon","setSubBoardIcon","then","res","console","log","status","subBoards","name","catch","err","editboardDetails","addNewboard","reSetForm","display","height","justifyContent","alignItems","margin","e","target","value","files","flexDirection","marginRight","marginTop"],"mappings":"gKAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,CAAiDC,MAAjD,KAA+D,OAA/D,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,KAAlC,CAAyCC,IAAzC,KAAqD,iBAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,QAA5B,KAA4C,kBAA5C,CACA,OAASC,cAAT,CAAyBC,UAAzB,CAAqCC,WAArC,KAAwD,2BAAxD,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAIA,OAASC,aAAT,CAAwBC,eAAxB,CAAyCC,OAAzC,KAAwD,gBAAxD,CAEA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,WAAlC,CAA+CC,YAA/C,KAAmE,yBAAnE,CAEA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAGA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,OAASC,MAAT,KAAuB,eAAvB,CACA,OAASC,KAAK,GAAIC,CAAAA,cAAlB,KAAwC,iBAAxC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOF,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOG,CAAAA,GAAP,KAAgB,mBAAhB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,cAAT,CAAyBC,aAAzB,CAAwCC,eAAxC,KAA+D,2BAA/D,C,6IACA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC5C;AACA,eAAgDd,SAAS,EAAzD,CAAQe,OAAR,YAAQA,OAAR,CAAiBC,cAAjB,YAAiBA,cAAjB,CAAiCC,UAAjC,YAAiCA,UAAjC,CACA,cAAwB3C,QAAQ,CAACyC,OAAO,CAAG,MAAH,CAAY,KAApB,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eAEA,eAAwC7C,QAAQ,CAAC,KAAD,CAAhD,yCAAO8C,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,QAAQ,CAAGrC,WAAW,EAA5B,CAEA;AACA,eAAoCX,QAAQ,CAAC,EAAD,CAA5C,yCAAOiD,UAAP,eAAmBC,aAAnB,eACA,eAAoClD,QAAQ,CAAC,EAAD,CAA5C,yCAAOmD,UAAP,eAAmBC,aAAnB,eAEA;AACA,eAAkCpD,QAAQ,CAAC,KAAD,CAA1C,0CAAOqD,SAAP,gBAAkBC,YAAlB,gBAEA;AACA,gBAAoCtD,QAAQ,CAAC,KAAD,CAA5C,2CAAOuD,UAAP,gBAAmBC,aAAnB,gBAEA;AACA,gBAA4CxD,QAAQ,CAAC,KAAD,CAApD,2CAAOyD,cAAP,gBAAuBC,iBAAvB,gBAEA;AACA,gBAAwC1D,QAAQ,EAAhD,2CAAO2D,YAAP,gBAAqBC,eAArB,gBAEA;AACA,gBAAwC5D,QAAQ,CAAC,KAAD,CAAhD,2CAAO6D,YAAP,gBAAqBC,eAArB,gBACA,gBAA2B9D,QAAQ,CAAC,KAAD,CAAnC,2CAAO+D,KAAP,gBAAcC,SAAd,gBAEA,gBAAwChE,QAAQ,CAAC,IAAD,CAAhD,2CAAOiE,YAAP,gBAAqBC,eAArB,gBAEA;AACAjE,SAAS,CAAC,UAAM,CACZ4C,OAAO,CAACF,UAAU,CAAG,MAAH,CAAY,KAAvB,CAAP,CACAe,iBAAiB,CAAC,IAAD,CAAjB,CACApB,eAAe,CAACK,UAAD,CAAf,CAA4BwB,IAA5B,CAAiC,SAACC,GAAD,CAAS,CACtCC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,GAAnB,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZ;AACAX,eAAe,CAACQ,GAAG,CAACI,SAAJ,CAAcC,IAAf,CAAf,CACH,CACDf,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAPD,EAQKgB,KARL,CAQW,SAACC,GAAD,CAAS,CACZN,OAAO,CAACN,KAAR,CAAcY,GAAd,EACAjB,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAXL,EAYH,CAfQ,CAeN,CAACjB,OAAD,CAfM,CAAT,CAiBA;AACA,QAASmC,CAAAA,gBAAT,EAA4B,CACxB7B,eAAe,CAAC,KAAD,CAAf,CACAS,aAAa,CAAC,IAAD,CAAb,CACAQ,SAAS,CAAC,KAAD,CAAT,CACA,GAAIL,YAAY,EAAI,EAApB,CAAwB,CACpBtB,aAAa,CAACM,UAAD,CAAagB,YAAb,CAA2BjB,cAA3B,CAAb,CACKyB,IADL,CACU,SAACC,GAAD,CAAS,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZf,aAAa,CAAC,KAAD,CAAb,CACAN,aAAa,CAAC,4BAAD,CAAb,CACAE,aAAa,CAAC,sBAAD,CAAb,CACAL,eAAe,CAAC,IAAD,CAAf,CACH,CALD,IAMK,CACDS,aAAa,CAAC,KAAD,CAAb,CACAQ,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CAEJ,CAfL,EAgBKY,KAhBL,CAgBW,SAACC,GAAD,CAAS,CACZN,OAAO,CAACN,KAAR,CAAcY,GAAd,EACAnB,aAAa,CAAC,KAAD,CAAb,CACAQ,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CArBL,EAsBH,CAvBD,IAwBK,CACDR,YAAY,CAAC,KAAD,CAAZ,CACAU,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,gCAAD,CAAf,CACH,CAEJ,CAED;AACA,QAASe,CAAAA,WAAT,EAAuB,CACnB9B,eAAe,CAAC,KAAD,CAAf,CACAO,YAAY,CAAC,IAAD,CAAZ,CACAU,SAAS,CAAC,KAAD,CAAT,CACA,GAAIL,YAAY,EAAI,EAApB,CAAwB,CACpBvB,cAAc,CAACuB,YAAD,CAAe,QAAf,CAAyBlB,OAAzB,CAAkCwB,YAAlC,CAAd,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZjB,YAAY,CAAC,KAAD,CAAZ,CACAJ,aAAa,CAAC,qBAAD,CAAb,CACAE,aAAa,CAAC,cAAD,CAAb,CACAL,eAAe,CAAC,IAAD,CAAf,CACH,CALD,IAMK,CACDO,YAAY,CAAC,KAAD,CAAZ,CACAU,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CACJ,CAdL,EAeKY,KAfL,CAeW,SAACC,GAAD,CAAS,CACZN,OAAO,CAACC,GAAR,CAAYK,GAAZ,EACArB,YAAY,CAAC,KAAD,CAAZ,CACAU,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,eAAD,CAAf,CACH,CApBL,EAqBH,CAtBD,IAuBK,CACDR,YAAY,CAAC,KAAD,CAAZ,CACAU,SAAS,CAAC,IAAD,CAAT,CACAF,eAAe,CAAC,gCAAD,CAAf,CACH,CACJ,CAED;AACA,GAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBlB,eAAe,CAAC,EAAD,CAAf,CACH,CAFD,CAKA,mBACI,wCAGI,WAAI,SAAS,CAAC,yBAAd,kCAHJ,cAII,WAAI,SAAS,CAAC,MAAd,EAJJ,CAKKH,cAAc,cACX,YAAK,SAAS,CAAC,sBAAf,CAAsC,KAAK,CAAE,CAAEsB,OAAO,CAAE,MAAX,CAAmBC,MAAM,CAAE,OAA3B,CAAoCC,cAAc,CAAE,QAApD,CAA8DC,UAAU,CAAE,QAA1E,CAA7C,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADW,cAKX,sCACI,aAAK,SAAS,CAAC,qBAAf,wBACI,KAAC,IAAD,EAAM,SAAS,CAAC,OAAhB,uBACI,KAAC,WAAD,wBACI,aAAK,SAAS,CAAC,KAAf,WAESnB,KAAD,cACI,YAAK,KAAK,CAAC,WAAX,CAAuB,KAAK,CAAE,CAAEoB,MAAM,CAAE,CAAV,CAA9B,uBACI,YAAK,KAAK,CAAC,oCAAX,uBACI,YAAK,KAAK,CAAC,gBAAX,UACKtB,YADL,EADJ,EADJ,EADJ,cAUI,8BAZZ,cAcI,YAAK,SAAS,CAAC,0BAAf,uBAuBI,KAAC,IAAD,WACKjB,IAAI,EAAI,MAAR,cACG,wCACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,2BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,yBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAEe,YAArB,CAAmC,IAAI,CAAC,MAAxC,CAA+C,WAAW,CAAC,kBAA3D,CAA8E,QAAQ,CAAE,kBAACyB,CAAD,QAAOxB,CAAAA,eAAe,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAAxF,EAFJ,GADJ,cAKI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,0BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAErB,YAArB,CAAmC,IAAI,CAAC,MAAxC,CAA+C,WAAW,CAAC,2BAA3D,CAAuF,QAAQ,CAAE,kBAACmB,CAAD,QAAOlB,CAAAA,eAAe,CAACkB,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAtB,EAAjG,EAFJ,GALJ,GADH,cAYG,wCACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,2BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,yBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,kBAAtC,CAAyD,QAAQ,CAAE,kBAACH,CAAD,QAAOxB,CAAAA,eAAe,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAAnE,EAFJ,GADJ,cAKI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,8BAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,0BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,2BAAtC,CAAkE,QAAQ,CAAE,kBAACF,CAAD,QAAOlB,CAAAA,eAAe,CAACkB,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAtB,EAA5E,EAFJ,GALJ,GAbR,EAvBJ,EAdJ,GADJ,EADJ,EADJ,cAwEI,YAAK,SAAS,CAAC,KAAf,UAEK3C,IAAI,EAAI,MAAR,cACG,wCACI,YAAK,SAAS,CAAC,+BAAf,uBACI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMI,CAAAA,QAAQ,CAAC,0CAA4CP,OAA7C,CAAd,EAAjB,CAAsF,OAAO,CAAC,UAA9F,oBADJ,EADJ,cAII,YAAK,SAAS,CAAC,+BAAf,UACKc,UAAU,cACP,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADO,cAKP,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,kBAAM,CAAEqB,gBAAgB,GAAI,CAAjE,0BANR,EAJJ,GADH,cAiBG,YAAK,SAAS,CAAC,+BAAf,UACKvB,SAAS,cACN,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,uBACI,KAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EADJ,EADM,cAKN,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,yBAAMwB,CAAAA,WAAW,EAAjB,EAArC,2BANR,EAnBR,EAxEJ,GADJ,EAVR,cAwHI,KAAC,KAAD,EACI,IAAI,CAAE/B,YADV,CAEI,IAAI,CAAC,IAFT,CAGI,kBAAgB,+BAHpB,CAII,QAAQ,KAJZ,CAKI,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,KAAD,CAArB,EALb,uBAOI,KAAC,GAAD,EAAK,EAAE,CAAEZ,UAAT,uBACI,MAAC,cAAD,CAAgB,IAAhB,yBACI,aAAK,SAAS,CAAC,6BAAf,CAA6C,KAAK,CAAE,CAAE+C,UAAU,CAAE,QAAd,CAAwBH,OAAO,CAAE,MAAjC,CAAyCS,aAAa,CAAE,QAAxD,CAApD,wBACI,YAAK,GAAG,CAAE,wBAAV,EADJ,cAEI,oBAAKvC,UAAL,EAFJ,cAGI,WAAI,SAAS,CAAC,gBAAd,UAAgCE,UAAhC,EAHJ,GADJ,cAMI,aAAK,SAAS,CAAC,uBAAf,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAAEsC,WAAW,CAAE,EAAf,CAAmBC,SAAS,CAAE,EAA9B,CAAlC,CACI,OAAO,CAAE,kBAAM,CAAE9C,IAAI,EAAI,KAAR,cAAiB,0BAAGG,eAAe,CAAC,KAAD,CAAf,CAAwB+B,SAAS,EAApC,GAAjB,cAAgE,0BAAG/B,eAAe,CAAC,KAAD,CAAf,CAAwB+B,SAAS,EAAjC,CAAqC9B,QAAQ,CAAC,0CAA4CP,OAA7C,CAAhD,GAAhE,CAA4K,CADjM,+BADJ,uBAKI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAE,CAAEgD,WAAW,CAAE,EAAf,CAAmBC,SAAS,CAAE,EAA9B,CAAnC,CACI,OAAO,CAAE,yBAAM1C,CAAAA,QAAQ,CAAC,8BAAgCP,OAAjC,CAAd,EADb,gCALJ,GANJ,GADJ,EAPJ,EAxHJ,GADJ,CA0JH","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchboards, editBoards, deleteboard, getBoardById } from \"../../api/Boards/Boards\"\n\nimport { createBoard } from '../../api/Boards/Boards'\nimport { useParams } from 'react-router-dom'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\nimport { createSubBoard, editSubBoards, getSubBoardById } from 'src/api/SubBoard/SubBoard'\nexport default function AddEditSubBoards(props) {\n    // const boardId = props.match.params.board/oardStatus;\n    const { boardId, subBoardStatus, subBoardId } = useParams()\n    const [mode, setMode] = useState(boardId ? \"edit\" : \"add\")\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add board button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit board button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the board user want to add\n    const [subBoardName, setsubBoardName] = useState();\n\n    //shows the error when users try to add board without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [subBoardIcon, setSubBoardIcon] = useState(null);\n\n    //updating mode state on change of board id\n    useEffect(() => {\n        setMode(subBoardId ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getSubBoardById(subBoardId).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched board by id into state variable\n                setsubBoardName(res.subBoards.name)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n                setEditFormLoader(false)\n            });\n    }, [boardId])\n\n    //edit the details basically the name of the existing board\n    function editboardDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (subBoardName != '') {\n            editSubBoards(subBoardId, subBoardName, subBoardStatus)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Sub Board details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Sub board name');\n        }\n\n    }\n\n    //adds new board \n    function addNewboard() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (subBoardName != '') {\n            createSubBoard(subBoardName, 'active', boardId, subBoardIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Sub Board Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Sub board name');\n        }\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setsubBoardName('')\n    }\n\n\n    return (\n        <>\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Sub Board Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent>\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n                                        {/* <InputGroup className=\"mb-3\" >\n\n                                    {mode == 'edit' ? (\n                                        <FormControl\n                                            placeholder=\"Enter board Name\"\n                                            aria-label=\"Search\"\n                                            aria-describedby=\"basic-addon1\"\n                                            onChange={(e) => setsubBoardName(e.target.value)}\n                                            value={subBoardName}\n                                            required\n                                        />\n                                    ) : (\n                                        <FormControl\n                                            placeholder=\"Enter board Name\"\n                                            aria-label=\"Search\"\n                                            aria-describedby=\"basic-addon1\"\n                                            onChange={(e) => setsubBoardName(e.target.value)}\n                                            required\n                                        />\n                                    )}\n\n                                </InputGroup> */}\n                                        <Form>\n                                            {mode == 'edit' ? (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control value={subBoardName} type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setsubBoardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control value={subBoardIcon} type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setSubBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setsubBoardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setSubBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            )}\n                                        </Form>\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        <Button onClick={() => navigate('/dashboard/boards/subBoard/addSubBoard/' + boardId)} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\">\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editboardDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\">\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" onClick={() => addNewboard()}\n                                        >Add Sub Board</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalVisible(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/boards/subBoard/addSubBoard/' + boardId)}</>) }}\n                            >Add New Sub Board</Button>\n                            &emsp;\n                            <Button variant=\"contained\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/boards/subBoard/' + boardId)}\n                            >Back To Sub Boards</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}