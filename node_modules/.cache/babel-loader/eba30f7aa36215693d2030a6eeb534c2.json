{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"themes\"];import ReactMapGL from'react-map-gl';import{useState,useCallback}from'react';// components\nimport{MapControlScale,MapControlGeolocate,MapControlNavigation,MapControlFullscreen}from'../../../components/map';//\nimport ControlPanel from'./ControlPanel';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MapChangeTheme(_ref){var themes=_ref.themes,other=_objectWithoutProperties(_ref,_excluded);var _useState=useState('outdoors'),_useState2=_slicedToArray(_useState,2),selectTheme=_useState2[0],setSelectTheme=_useState2[1];var _useState3=useState({latitude:37.785164,longitude:-100,zoom:3.5,bearing:0,pitch:0}),_useState4=_slicedToArray(_useState3,2),viewport=_useState4[0],setViewport=_useState4[1];var handleChangeTheme=useCallback(function(event){return setSelectTheme(event.target.value);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ReactMapGL,_objectSpread(_objectSpread(_objectSpread({},viewport),{},{onViewportChange:setViewport,mapStyle:themes[selectTheme]},other),{},{children:[/*#__PURE__*/_jsx(MapControlScale,{}),/*#__PURE__*/_jsx(MapControlNavigation,{}),/*#__PURE__*/_jsx(MapControlFullscreen,{}),/*#__PURE__*/_jsx(MapControlGeolocate,{})]})),/*#__PURE__*/_jsx(ControlPanel,{themes:themes,selectTheme:selectTheme,onChangeTheme:handleChangeTheme})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/change-theme/index.js"],"names":["ReactMapGL","useState","useCallback","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","MapChangeTheme","themes","other","selectTheme","setSelectTheme","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","handleChangeTheme","event","target","value"],"mappings":"4gBACA,MAAOA,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA;AACA,OACEC,eADF,CAEEC,mBAFF,CAGEC,oBAHF,CAIEC,oBAJF,KAKO,yBALP,CAMA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA;6IAMA,cAAe,SAASC,CAAAA,cAAT,MAA8C,IAApBC,CAAAA,MAAoB,MAApBA,MAAoB,CAATC,KAAS,0CAC3D,cAAsCT,QAAQ,CAAC,UAAD,CAA9C,wCAAOU,WAAP,eAAoBC,cAApB,eACA,eAAgCX,QAAQ,CAAC,CACvCY,QAAQ,CAAE,SAD6B,CAEvCC,SAAS,CAAE,CAAC,GAF2B,CAGvCC,IAAI,CAAE,GAHiC,CAIvCC,OAAO,CAAE,CAJ8B,CAKvCC,KAAK,CAAE,CALgC,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAQA,GAAMC,CAAAA,iBAAiB,CAAGlB,WAAW,CAAC,SAACmB,KAAD,QAAWT,CAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB,EAAD,CAAgD,EAAhD,CAArC,CAEA,mBACE,wCACE,MAAC,UAAD,8CAAgBL,QAAhB,MAA0B,gBAAgB,CAAEC,WAA5C,CAAyD,QAAQ,CAAEV,MAAM,CAACE,WAAD,CAAzE,EAA4FD,KAA5F,6BACE,KAAC,eAAD,IADF,cAEE,KAAC,oBAAD,IAFF,cAGE,KAAC,oBAAD,IAHF,cAIE,KAAC,mBAAD,IAJF,IADF,cAQE,KAAC,YAAD,EAAc,MAAM,CAAED,MAAtB,CAA8B,WAAW,CAAEE,WAA3C,CAAwD,aAAa,CAAES,iBAAvE,EARF,GADF,CAYD","sourcesContent":["import PropTypes from 'prop-types';\nimport ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nMapChangeTheme.propTypes = {\n  themes: PropTypes.object,\n};\n\nexport default function MapChangeTheme({ themes, ...other }) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const handleChangeTheme = useCallback((event) => setSelectTheme(event.target.value), []);\n\n  return (\n    <>\n      <ReactMapGL {...viewport} onViewportChange={setViewport} mapStyle={themes[selectTheme]} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </ReactMapGL>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}