{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\dashboard\\\\EcommerceProductCreate.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom'; // @mui\n\nimport { Container } from '@mui/material'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getProducts } from '../../redux/slices/product'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport ProductNewForm from '../../sections/@dashboard/e-commerce/ProductNewForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EcommerceProductCreate() {\n  _s();\n\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    name\n  } = useParams();\n  const {\n    products\n  } = useSelector(state => state.product);\n  const isEdit = pathname.includes('edit');\n  const currentProduct = products.find(product => paramCase(product.name) === name);\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Ecommerce: Create a new product\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: !isEdit ? 'Create a new product' : 'Edit product',\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'E-Commerce',\n          href: PATH_DASHBOARD.classes.root\n        }, {\n          name: !isEdit ? 'New product' : name\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductNewForm, {\n        isEdit: isEdit,\n        currentProduct: currentProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EcommerceProductCreate, \"FAE8+xQsxaTAi4DdZdegMCKVVio=\", false, function () {\n  return [useSettings, useDispatch, useLocation, useParams, useSelector];\n});\n\n_c = EcommerceProductCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EcommerceProductCreate\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/dashboard/EcommerceProductCreate.js"],"names":["useEffect","paramCase","useParams","useLocation","Container","useDispatch","useSelector","getProducts","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","ProductNewForm","EcommerceProductCreate","themeStretch","dispatch","pathname","name","products","state","product","isEdit","includes","currentProduct","find","href","root","classes"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC,C,CACA;;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,WAAT,QAA4B,4BAA5B,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,cAAP,MAA2B,qDAA3B,C,CAEA;;;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,WAAW,EAApC;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeb,WAAW,EAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWf,SAAS,EAA1B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAeZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAAhC;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACM,QAAT,CAAkB,MAAlB,CAAf;AACA,QAAMC,cAAc,GAAGL,QAAQ,CAACM,IAAT,CAAeJ,OAAD,IAAanB,SAAS,CAACmB,OAAO,CAACH,IAAT,CAAT,KAA4BA,IAAvD,CAAvB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,CAACO,MAAD,GAAU,sBAAV,GAAmC,cAD9C;AAEE,QAAA,KAAK,EAAE,CACL;AAAEJ,UAAAA,IAAI,EAAE,WAAR;AAAqBQ,UAAAA,IAAI,EAAEjB,cAAc,CAACkB;AAA1C,SADK,EAEL;AACET,UAAAA,IAAI,EAAE,YADR;AAEEQ,UAAAA,IAAI,EAAEjB,cAAc,CAACmB,OAAf,CAAuBD;AAF/B,SAFK,EAML;AAAET,UAAAA,IAAI,EAAE,CAACI,MAAD,GAAU,aAAV,GAA0BJ;AAAlC,SANK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEI,MAAxB;AAAgC,QAAA,cAAc,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhCuBV,sB;UACGJ,W,EACRJ,W,EACIF,W,EACJD,S,EACII,W;;;KALCO,sB","sourcesContent":["import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getProducts } from '../../redux/slices/product';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport ProductNewForm from '../../sections/@dashboard/e-commerce/ProductNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function EcommerceProductCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { products } = useSelector((state) => state.product);\n  const isEdit = pathname.includes('edit');\n  const currentProduct = products.find((product) => paramCase(product.name) === name);\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Ecommerce: Create a new product\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new product' : 'Edit product'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: 'E-Commerce',\n              href: PATH_DASHBOARD.classes.root,\n            },\n            { name: !isEdit ? 'New product' : name },\n          ]}\n        />\n\n        <ProductNewForm isEdit={isEdit} currentProduct={currentProduct} />\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}