{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{Form,FormikProvider,useFormik}from'formik';// @mui\nimport{TextField,Alert,Stack}from'@mui/material';import{LoadingButton}from'@mui/lab';// hooks\nimport useAuth from'../../../hooks/useAuth';import useIsMountedRef from'../../../hooks/useIsMountedRef';import{sendOTP}from'src/api/Auth/Auth';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ResetPasswordForm(_ref){var onSent=_ref.onSent,onGetEmail=_ref.onGetEmail;var _useAuth=useAuth(),resetPassword=_useAuth.resetPassword;var isMountedRef=useIsMountedRef();var ResetPasswordSchema=Yup.object().shape({email:Yup.string().email('Email must be a valid email address').required('Email is required')});var formik=useFormik({initialValues:{email:''},validationSchema:ResetPasswordSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setErrors,setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref2.setErrors,setSubmitting=_ref2.setSubmitting;_context.prev=1;_context.next=4;return sendOTP(values.email);case 4:if(isMountedRef.current){onSent();onGetEmail(formik.values.email);setSubmitting(false);}_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.error(_context.t0);if(isMountedRef.current){setErrors({afterSubmit:_context.t0.message});setSubmitting(false);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,touched=formik.touched,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[errors.afterSubmit&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:errors.afterSubmit}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true},getFieldProps('email')),{},{type:\"email\",label:\"Email address\",error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email})),/*#__PURE__*/_jsx(LoadingButton,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Reset Password\"})]})})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/auth/reset-password/ResetPasswordForm.js"],"names":["Yup","Form","FormikProvider","useFormik","TextField","Alert","Stack","LoadingButton","useAuth","useIsMountedRef","sendOTP","ResetPasswordForm","onSent","onGetEmail","resetPassword","isMountedRef","ResetPasswordSchema","object","shape","email","string","required","formik","initialValues","validationSchema","onSubmit","values","setErrors","setSubmitting","current","console","error","afterSubmit","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { TextField, Alert, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport { sendOTP } from 'src/api/Auth/Auth';\n\n// ----------------------------------------------------------------------\n\nResetPasswordForm.propTypes = {\n  onSent: PropTypes.func,\n  onGetEmail: PropTypes.func,\n};\n\nexport default function ResetPasswordForm({ onSent, onGetEmail }) {\n  const { resetPassword } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const ResetPasswordSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: ResetPasswordSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await sendOTP(values.email);\n        if (isMountedRef.current) {\n          onSent();\n          onGetEmail(formik.values.email);\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    },\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <TextField\n            fullWidth\n            {...getFieldProps('email')}\n            type=\"email\"\n            label=\"Email address\"\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Reset Password\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}