{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\contexts\\\\JWTContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types'; // utils\n\nimport axios from '../utils/axios';\nimport { isValidToken, setSession } from '../utils/jwt';\nimport { decryptJWT, RestLogin } from 'src/api/Auth/Auth'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: state => ({ ...state,\n    isAuthenticated: false,\n    user: null\n  }),\n  REGISTER: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  }\n};\n\nconst reducer = (state, action) => handlers[action.type] ? handlers[action.type](state, action) : state;\n\nconst AuthContext = /*#__PURE__*/createContext({ ...initialState,\n  method: 'jwt',\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  register: () => Promise.resolve()\n});\nAuthProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken && isValidToken(accessToken)) {\n          setSession(accessToken);\n          const response = await decryptJWT(accessToken);\n          const {\n            user\n          } = response.data;\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALIZE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const login = async (email, password) => {\n    // const response = await axios.post('/api/account/login', {\n    //   email,\n    //   password\n    // });\n    const response = await RestLogin({\n      email,\n      password\n    });\n    const {\n      accessToken,\n      user\n    } = response;\n    setSession(accessToken);\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const register = async (email, password, firstName, lastName) => {\n    const response = await axios.post('/api/account/register', {\n      email,\n      password,\n      firstName,\n      lastName\n    });\n    const {\n      accessToken,\n      user\n    } = response.data;\n    window.localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = async () => {\n    setSession(null);\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  const resetPassword = () => {};\n\n  const updateProfile = user => {\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      method: 'jwt',\n      login,\n      logout,\n      register,\n      resetPassword,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/contexts/JWTContext.js"],"names":["createContext","useEffect","useReducer","PropTypes","axios","isValidToken","setSession","decryptJWT","RestLogin","initialState","isAuthenticated","isInitialized","user","handlers","INITIALIZE","state","action","payload","LOGIN","LOGOUT","REGISTER","reducer","type","AuthContext","method","login","Promise","resolve","logout","register","AuthProvider","propTypes","children","node","dispatch","initialize","accessToken","window","localStorage","getItem","response","data","err","console","error","email","password","firstName","lastName","post","setItem","resetPassword","updateProfile"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n// utils\nimport axios from '../utils/axios';\nimport { isValidToken, setSession } from '../utils/jwt';\nimport { decryptJWT, RestLogin } from 'src/api/Auth/Auth';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\n\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const { isAuthenticated, user } = action.payload;\n    return {\n      ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const { user } = action.payload;\n    return {\n      ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: (state) => ({\n    ...state,\n    isAuthenticated: false,\n    user: null\n  }),\n  REGISTER: (state, action) => {\n    const { user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated: true,\n      user\n    };\n  }\n};\n\nconst reducer = (state, action) => (handlers[action.type] ? handlers[action.type](state, action) : state);\n\nconst AuthContext = createContext({\n  ...initialState,\n  method: 'jwt',\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  register: () => Promise.resolve()\n});\n\nAuthProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction AuthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken && isValidToken(accessToken)) {\n          setSession(accessToken);\n\n          const response = await decryptJWT(accessToken);\n          const { user } = response.data;\n\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALIZE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const login = async (email, password) => {\n    // const response = await axios.post('/api/account/login', {\n    //   email,\n    //   password\n    // });\n    const response = await RestLogin({ email, password });\n    const { accessToken, user } = response;\n\n    setSession(accessToken);\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const register = async (email, password, firstName, lastName) => {\n    const response = await axios.post('/api/account/register', {\n      email,\n      password,\n      firstName,\n      lastName\n    });\n    const { accessToken, user } = response.data;\n\n    window.localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = async () => {\n    setSession(null);\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const resetPassword = () => { };\n\n  const updateProfile = (user) => {\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        user\n      }\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        method: 'jwt',\n        login,\n        logout,\n        register,\n        resetPassword,\n        updateProfile\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}