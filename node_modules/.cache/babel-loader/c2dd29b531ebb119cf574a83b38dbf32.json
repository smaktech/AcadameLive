{"ast":null,"code":"/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*',\n\n    /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' + 'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, TPLABEL]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, hljs.QUOTE_STRING_MODE,\n    /* for pos section at bottom */\n    TPLABEL]\n  };\n  const KEYWORDS = [\"ABORT\", \"ACC\", \"ADJUST\", \"AND\", \"AP_LD\", \"BREAK\", \"CALL\", \"CNT\", \"COL\", \"CONDITION\", \"CONFIG\", \"DA\", \"DB\", \"DIV\", \"DETECT\", \"ELSE\", \"END\", \"ENDFOR\", \"ERR_NUM\", \"ERROR_PROG\", \"FINE\", \"FOR\", \"GP\", \"GUARD\", \"INC\", \"IF\", \"JMP\", \"LINEAR_MAX_SPEED\", \"LOCK\", \"MOD\", \"MONITOR\", \"OFFSET\", \"Offset\", \"OR\", \"OVERRIDE\", \"PAUSE\", \"PREG\", \"PTH\", \"RT_LD\", \"RUN\", \"SELECT\", \"SKIP\", \"Skip\", \"TA\", \"TB\", \"TO\", \"TOOL_OFFSET\", \"Tool_Offset\", \"UF\", \"UT\", \"UFRAME_NUM\", \"UTOOL_NUM\", \"UNLOCK\", \"WAIT\", \"X\", \"Y\", \"Z\", \"W\", \"P\", \"R\", \"STRLEN\", \"SUBSTR\", \"FINDSTR\", \"VOFFSET\", \"PROG\", \"ATTR\", \"MN\", \"POS\"];\n  const LITERALS = [\"ON\", \"OFF\", \"max_speed\", \"LPOS\", \"JPOS\", \"ENABLE\", \"DISABLE\", \"START\", \"STOP\", \"RESET\"];\n  return {\n    name: 'TP',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    contains: [TPDATA, TPIO, {\n      className: 'keyword',\n      begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n    }, {\n      /* this is for cases like ,CALL */\n      className: 'keyword',\n      begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n    }, {\n      /* this is for cases like CNT100 where the default lexemes do not\n       * separate the keyword and the number */\n      className: 'keyword',\n      begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n    }, {\n      /* to catch numbers that do not have a word boundary on the left */\n      className: 'number',\n      begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n      relevance: 0\n    }, hljs.COMMENT('//', '[;$]'), hljs.COMMENT('!', '[;$]'), hljs.COMMENT('--eg:', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'string',\n      begin: '\\'',\n      end: '\\''\n    }, hljs.C_NUMBER_MODE, {\n      className: 'variable',\n      begin: '\\\\$[A-Za-z0-9_]+'\n    }]\n  };\n}\n\nmodule.exports = tp;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/tp.js"],"names":["tp","hljs","TPID","className","begin","relevance","TPLABEL","TPDATA","end","contains","TPIO","QUOTE_STRING_MODE","KEYWORDS","LITERALS","name","keywords","keyword","literal","COMMENT","C_NUMBER_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\n\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  const KEYWORDS = [\n    \"ABORT\",\n    \"ACC\",\n    \"ADJUST\",\n    \"AND\",\n    \"AP_LD\",\n    \"BREAK\",\n    \"CALL\",\n    \"CNT\",\n    \"COL\",\n    \"CONDITION\",\n    \"CONFIG\",\n    \"DA\",\n    \"DB\",\n    \"DIV\",\n    \"DETECT\",\n    \"ELSE\",\n    \"END\",\n    \"ENDFOR\",\n    \"ERR_NUM\",\n    \"ERROR_PROG\",\n    \"FINE\",\n    \"FOR\",\n    \"GP\",\n    \"GUARD\",\n    \"INC\",\n    \"IF\",\n    \"JMP\",\n    \"LINEAR_MAX_SPEED\",\n    \"LOCK\",\n    \"MOD\",\n    \"MONITOR\",\n    \"OFFSET\",\n    \"Offset\",\n    \"OR\",\n    \"OVERRIDE\",\n    \"PAUSE\",\n    \"PREG\",\n    \"PTH\",\n    \"RT_LD\",\n    \"RUN\",\n    \"SELECT\",\n    \"SKIP\",\n    \"Skip\",\n    \"TA\",\n    \"TB\",\n    \"TO\",\n    \"TOOL_OFFSET\",\n    \"Tool_Offset\",\n    \"UF\",\n    \"UT\",\n    \"UFRAME_NUM\",\n    \"UTOOL_NUM\",\n    \"UNLOCK\",\n    \"WAIT\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"W\",\n    \"P\",\n    \"R\",\n    \"STRLEN\",\n    \"SUBSTR\",\n    \"FINDSTR\",\n    \"VOFFSET\",\n    \"PROG\",\n    \"ATTR\",\n    \"MN\",\n    \"POS\"\n  ];\n  const LITERALS = [\n    \"ON\",\n    \"OFF\",\n    \"max_speed\",\n    \"LPOS\",\n    \"JPOS\",\n    \"ENABLE\",\n    \"DISABLE\",\n    \"START\",\n    \"STOP\",\n    \"RESET\"\n  ];\n\n  return {\n    name: 'TP',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = tp;\n"]},"metadata":{},"sourceType":"script"}