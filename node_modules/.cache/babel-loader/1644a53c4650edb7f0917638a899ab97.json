{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\classes\\\\Classes.js\",\n    _s = $RefreshSig$();\n\n//page for all classes listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport { fetchClasses, editClass, deleteClass, getAllClasses, getClassByFilter } from \"../../api/Classes/Classes\";\nimport { imageBaseUrl, materialTableIcons, modalStyle } from '../../config';\nimport { dataLimit } from '../../config';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport SingleClassRow from './SingleClassRow';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Classes(props) {\n  _s();\n\n  const tableIcons = materialTableIcons; //setting classes data into a variable\n\n  const [classes, setclasses] = useState([]);\n  const [noclasses, setNoclasses] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the class who is blocked or deleted\n\n  const [actionclassId, setclassId] = useState();\n  const [className, setclassName] = useState(''); //unblock or block vairbale \n\n  const [classestatus, setclassestatus] = useState(true); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false); //sets the visibility of the filter modal \n\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      getClassByFilter(search, filterStatus, filterDateFrom, filterDateTo, sortByDate).then(res => {\n        if (res.status) {\n          setclasses(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setclasses([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false);\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoclasses(false);\n    getAllClasses(page, rowLimit).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched class into state variable\n        setclasses(res.results.data);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //setting no class found variable true \n        setNoclasses(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [page, rowLimit]);\n\n  function openDeleteAlertModal(id, index) {\n    setclassId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the Qualification?');\n    setInfo('All the details of the Qualification will be removed from the Platform');\n    setModalAlertTitle(true);\n  } //function to change the status of the class to blocked!\n\n\n  function changeclassestatus(id, name, index, status) {\n    editClass(id, name, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        //updating class status in state array\n        const updatedRows = [...classes];\n        updatedRows[index].status = status;\n        setclasses(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  } //sets the filter data to null\n\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to delete the class from the database\n\n\n  function deleteclassProfile() {\n    setActionLoader(true);\n    deleteClass(actionclassId).then(res => {\n      // console.log(res)\n      if (res.status) {\n        const index = rowId; //removing deleted class from state array \n\n        const updatedRows = [...classes];\n        updatedRows.splice(index, 1);\n        setclasses(updatedRows);\n        setModalContent('Class Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Qualification Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                sx: {\n                  mr: 2\n                },\n                onClick: () => navigate('/dashboard/classes/addClass'),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New Qualification\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Added On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: classes.map((row, index) => /*#__PURE__*/_jsxDEV(SingleClassRow, {\n              changeclassestatus: changeclassestatus,\n              row: row,\n              index: index,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [1, 2, 5, 10, 25],\n            colSpan: 3,\n            count: totalPages * rowLimit,\n            rowsPerPage: rowLimit,\n            page: page - 1,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onPageChange: onPageChange,\n            onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this Qualification?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \" px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteclassProfile() : changeclassestatus();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\" // onClick={()=>resetFilterData()}\n                  ,\n                  onClick: () => resetFilterData(),\n                  children: \"Reset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: \" px-5\",\n                  onClick: () => {\n                    applyFilters();\n                  },\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Classes, \"lkUkMYzAR1p8+oLGgLzvnTK9lnI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/classes/Classes.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","Modal","BootstrapModal","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","CircularProgress","Box","Card","CardContent","BsSortDownAlt","BsFillTrashFill","BiBlock","fetchClasses","editClass","deleteClass","getAllClasses","getClassByFilter","imageBaseUrl","materialTableIcons","modalStyle","dataLimit","Table","TableBody","TableCell","TableContainer","TableHead","SingleClassRow","AddIcon","TextField","Typography","CloseIcon","Grid","Button","Classes","props","tableIcons","classes","setclasses","noclasses","setNoclasses","months","tableDataLoading","setTableDataLoading","modalTitle","setModalTitle","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionclassId","setclassId","className","setclassName","classestatus","setclassestatus","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","sortByDate","setSortByDate","filterLoader","setFilterLoader","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","navigate","then","res","status","results","data","catch","err","console","log","materialTableRef","error","openDeleteAlertModal","id","index","changeclassestatus","name","updatedRows","alert","resetFilterData","deleteclassProfile","splice","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","applyFilters","onPageChange","event","newPage","onRowPerChange","target","value","mt","mb","e","p","mx","mr","map","row","display","alignItems","justifyContent","inputProps","native","marginTop"],"mappings":"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","sourcesContent":["//page for all classes listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\n\nimport { fetchClasses, editClass, deleteClass, getAllClasses, getClassByFilter } from \"../../api/Classes/Classes\"\nimport { imageBaseUrl, materialTableIcons, modalStyle } from '../../config';\nimport { dataLimit } from '../../config';\n\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport SingleClassRow from './SingleClassRow';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Grid from '@mui/material/Grid';\nimport { Button } from '@mui/material';\n\nexport default function Classes(props) {\n    const tableIcons = materialTableIcons\n    //setting classes data into a variable\n    const [classes, setclasses] = useState([]);\n    const [noclasses, setNoclasses] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id and name of the class who is blocked or deleted\n    const [actionclassId, setclassId] = useState();\n    const [className, setclassName] = useState('');\n\n    //unblock or block vairbale \n    const [classestatus, setclassestatus] = useState(true);\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    //sets the visibility of the filter modal \n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n\n\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [totalPages, setTotalPages] = useState();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            getClassByFilter(search, filterStatus, filterDateFrom, filterDateTo, sortByDate)\n                .then((res) => {\n                    if (res.status) {\n                        setclasses(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setclasses([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n\n    }, [search, filterLoader])\n\n    const materialTableRef = useRef()\n    useEffect(() => {\n        setNoclasses(false)\n        getAllClasses(page, rowLimit).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched class into state variable\n                setclasses(res.results.data);\n                setTotalPages(res.results.totalPages)\n            }\n            else {\n                //setting no class found variable true \n                setNoclasses(true);\n            }\n            setTableDataLoading(false);\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [page, rowLimit])\n\n    function openDeleteAlertModal(id, index) {\n        setclassId(id);\n        setRowId(index)\n        setModalMode('delete');\n        setModalTitle('Delete the Qualification?');\n        setInfo('All the details of the Qualification will be removed from the Platform');\n        setModalAlertTitle(true)\n    }\n\n    //function to change the status of the class to blocked!\n    function changeclassestatus(id, name, index, status) {\n        editClass(id, name, status)\n            .then((res => {\n                // console.log('res',res);\n                if (res.status) {\n\n                    //updating class status in state array\n                    const updatedRows = [...classes];\n                    updatedRows[index].status = status;\n                    setclasses(updatedRows);\n                }\n                else {\n                    alert(\"error occured\")\n                }\n            }))\n            .catch((err => {\n                console.log('err', err);\n            }))\n    }\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to delete the class from the database\n    function deleteclassProfile() {\n        setActionLoader(true)\n        deleteClass(actionclassId)\n            .then((res) => {\n                // console.log(res)\n                if (res.status) {\n                    const index = rowId;\n                    //removing deleted class from state array \n                    const updatedRows = [...classes]\n                    updatedRows.splice(index, 1)\n                    setclasses(updatedRows);\n                    setModalContent('Class Deleted successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                    setActionLoader(false)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n    // function for pagination\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <Typography variant=\"h5\">\n                Qualification Management\n            </Typography>\n            {/* <hr className=\"mt-4\" /> */}\n            <Box sx={{ mt: 1, mb: 2 }}>\n                <Card className=\"w-100\">\n                    <CardContent>\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\" sx={{ p: 1, mx: 1 }} onClick={() => setFilterModal(true)} >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button color=\"primary\" variant=\"contained\"\n                                    sx={{ mr: 2 }}\n                                    onClick={() => navigate('/dashboard/classes/addClass')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    <AddIcon />\n                                    &nbsp;Add New Qualification\n                                </Button>\n                                <Button variant=\"contained\" >Export</Button>\n                            </div>\n                        </div>\n                        <div>\n                            {/* <Grid container className=\"row\" style={{ marginBottom: 10, marginLeft: 50 }}>\n                            <div className=\"col-lg-5 col-sm-6 col-12\">\n                            </div>\n                            <div className=\"col-lg-3 col-md-2 col-6 \">\n                            </div>\n                            <Grid item xs={12} md={11} lg={11}>\n\n                                <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end' }}>\n                                    <Button color=\"primary\" variant=\"contained\"\n                                        onClick={() => navigate('/dashboard/classes/addClass')}\n\n                                    >\n                                        <i class=\"fas fa-plus-circle\"></i>\n                                        <AddIcon />\n                                        &nbsp;Add New Class\n                                    </Button>\n                                </div>\n                            </Grid>\n                        </Grid >\n                        <Grid container>\n                            <Grid xs={12} lg={9} sm={9} md={9}>\n                                <InputGroup className=\"mb-3\" >\n                                <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </Grid>\n\n                            <Grid lg={3} md={3} xs={3} sm={3} >\n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                                    <Button variant=\"contained\" sx={{ p: 1, mr: 1 }} onClick={() => setFilterModal(true)} >\n                                        <BsSortDownAlt size={20} />\n                                    </Button>\n                                    <Button variant=\"contained\" >Export</Button>\n                                </div>\n                            </Grid>\n                        </Grid> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </Box>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying class details  */}\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell >Name</TableCell>\n                            <TableCell >Added On</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Action</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {classes.map((row, index) => <SingleClassRow changeclassestatus={changeclassestatus} row={row} index={index} openDeleteAlertModal={openDeleteAlertModal} />\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <MaterialTable\n                    columns={[\n                        {\n                            title: 'S No.',\n                            field: 'Serial',\n                            render: rowData => <>{rowData.tableData.id + 1}</>\n                        },\n                        {\n                            title: 'Name',\n                            field: 'name',\n                            render: rowData => <>{rowData.name}</>\n                        },\n                        {\n                            title: 'Added On',\n                            field: 'createdAt',\n                            render: rowData => <>{renderDate(rowData.createdAt)}</>\n                        },\n                        {\n                            title: 'Status',\n                            render: rowData => <>{rowData.status == 'inactive' ? ('In Active') : ('Active')}</>\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => <>\n                                {rowData.status == 'inactive' ? (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changeclassestatus(rowData, 'active')}\n                                    >\n                                        <i class=\"fas fa-toggle-off txt-5282F0\"></i>\n                                    </a>\n                                ) : (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changeclassestatus(rowData, 'inactive')}>\n                                        <i class=\"fas fa-toggle-on txt-5282F0\"></i>\n                                    </a>\n                                )}\n                                &emsp;\n                                <a href=\"javascript:void(0)\"\n                                    onClick={() => navigate('/app/editClass/' + rowData._id + '/' + rowData.status + '/' + rowData.name)}>\n                                    <i className=\"fas fa-pen txt-5282F0\"></i>\n                                </a>\n                                &emsp;\n                                <a href=\"javascript:void(0)\" onClick={() => openDeleteAlertModal(rowData)}>\n                                    <i className=\"fas fa-trash txt-5282F0\"></i>\n                                </a>\n                            </>\n                        },\n                    ]}\n                    data={classes}\n                    isLoading={tableDataLoading}\n                    title=\"classes\"\n                    options={{\n                        sorting: true,\n                        exportButton: true,\n                        toolbar: true,\n                        showTitle: false,\n                        search: false,\n                        paging:false\n                    }}\n                    icons={tableIcons}\n                />  */}\n            </div>\n            <Grid container>\n\n                <Grid item xs={12} lg={12} md={12} sm={12} className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                        <TablePagination\n\n                            rowsPerPageOptions={[1, 2, 5, 10, 25]}\n                            colSpan={3}\n                            count={totalPages * rowLimit}\n                            rowsPerPage={rowLimit}\n                            page={page - 1}\n                            SelectProps={{\n                                inputProps: {\n                                    'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            onPageChange={onPageChange}\n                            onRowsPerPageChange={onRowPerChange}\n                        // ActionsComponent={TablePaginationActions}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n            {/* Modal for delete or blocking confirmation */}\n            <Modal\n                open={modalAlertTitle}\n\n                onClose={() => setModalAlertTitle(false)}\n\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    {modalTitle}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>Are you sure to {modalMode} this Qualification?</p>\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\n                                onClick={() => setModalAlertTitle(false)}\n                            >Cancel</Button>\n                            &emsp;\n                            {actionLodaer ? (\n                                <Button variant=\"outlined\" className=\"px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\" px-5\"\n                                    onClick={() => { modalMode == 'delete' ? (deleteclassProfile()) : (changeclassestatus()) }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for successful deletion and block */}\n            {/* <Modal\n                show={completionModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header className=\"clr-primary-400 py-2\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\n\n                        <h4 className=\"text-center   mb-0\">\n                            Updated Classes!\n                        </h4>\n\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"text-center txt-5282F0 my-4\">\n                        <p>{modalContent}</p>\n                    </div>\n                    <div className=\"text-center mt-4 pb-3\">\n                        <button className=\"btn btn-primary px-5\"\n                            onClick={() => setCompletionModal(false)}\n                        >OK</button>\n                    </div>\n                </Modal.Body>\n            </Modal> */}\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                onClose={() => setFilterModal(false)}\n\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\" >\n                        {/* <BootstrapModal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n                        {/* <Box> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        {/* </Box> */}\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Added Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option value={null}>Status</option>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"inactive\">Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Grid container>\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    <Button variant=\"outlined\" className=\" px-5\"\n                                        // onClick={()=>resetFilterData()}\n                                        onClick={() => resetFilterData()}\n                                    >Reset </Button>\n                                </Grid>\n                                &emsp;\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    {filterLoader ? (\n                                        <Button variant=\"outlined\" className=\" px-5\" >\n\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" className=\" px-5\"\n                                            onClick={() => { applyFilters() }}\n                                        >Confirm</Button>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}