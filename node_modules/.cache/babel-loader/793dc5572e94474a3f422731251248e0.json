{"ast":null,"code":"import React from'react';import TableRow from'@mui/material/TableRow';import TableCell from'@mui/material/TableCell';import{Avatar,Button}from'@mui/material';import ToggleOnIcon from'@mui/icons-material/ToggleOn';import EditIcon from'@mui/icons-material/Edit';import ToggleOffIcon from'@mui/icons-material/ToggleOff';import DeleteIcon from'@mui/icons-material/Delete';import ManageAccountsIcon from'@mui/icons-material/ManageAccounts';import{Link,useNavigate,Redirect}from'react-router-dom';import{baseUrl}from'src/config';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SingleCourseRow(_ref){var _row$boardID,_row$classesID;var row=_ref.row,index=_ref.index,openDeleteAlertModal=_ref.openDeleteAlertModal,changeCourseStatus=_ref.changeCourseStatus;console.log(row);var navigate=useNavigate();//returns the created date of the record of the table\nfunction renderDate(date){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var newDate=new Date(date);var returnDate=months[newDate.getMonth()]+' '+newDate.getDate()+' '+newDate.getFullYear();return returnDate;}return/*#__PURE__*/_jsxs(TableRow,{sx:{'&:last-child td, &:last-child th':{border:0}},children:[/*#__PURE__*/_jsx(TableCell,{children:index+1}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Avatar,{alt:\"Remy Sharp\",src:\"\".concat(baseUrl,\"/\").concat(row.image)})}),/*#__PURE__*/_jsx(TableCell,{children:row.name}),/*#__PURE__*/_jsx(TableCell,{children:renderDate(row.createdAt)}),/*#__PURE__*/_jsx(TableCell,{children:row===null||row===void 0?void 0:(_row$boardID=row.boardID)===null||_row$boardID===void 0?void 0:_row$boardID.name}),/*#__PURE__*/_jsx(TableCell,{children:row===null||row===void 0?void 0:(_row$classesID=row.classesID)===null||_row$classesID===void 0?void 0:_row$classesID.name}),/*#__PURE__*/_jsx(TableCell,{children:row.status=='inactive'?'In Active':'Active'}),/*#__PURE__*/_jsx(TableCell,{style:{width:\"30%\"},children:/*#__PURE__*/_jsxs(_Fragment,{children:[row.status=='inactive'?/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return changeCourseStatus(row,index,'active');},variant:\"text\",color:\"secondary\",children:/*#__PURE__*/_jsx(ToggleOffIcon,{})}):/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:function onClick(){return changeCourseStatus(row,index,'inactive');},children:/*#__PURE__*/_jsx(ToggleOnIcon,{})}),/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:function onClick(){return navigate('/dashboard/courses/editCourse/'+row._id+'/'+row.status+'/'+row.name);},children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:function onClick(){return openDeleteAlertModal(row._id,index);},children:/*#__PURE__*/_jsx(DeleteIcon,{})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return navigate('/dashboard/topics/'+row._id);},children:\"Topics\"})]})})]},index);}export default SingleCourseRow;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/courses/SingleCourseRow.js"],"names":["React","TableRow","TableCell","Avatar","Button","ToggleOnIcon","EditIcon","ToggleOffIcon","DeleteIcon","ManageAccountsIcon","Link","useNavigate","Redirect","baseUrl","SingleCourseRow","row","index","openDeleteAlertModal","changeCourseStatus","console","log","navigate","renderDate","date","months","newDate","Date","returnDate","getMonth","getDate","getFullYear","border","image","name","createdAt","boardID","classesID","status","width","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,eAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,oCAA/B,CAGA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,QAA5B,KAA4C,kBAA5C,CACA,OAASC,OAAT,KAAwB,YAAxB,C,6IAEA,QAASC,CAAAA,eAAT,MAAmF,oCAAxDC,CAAAA,GAAwD,MAAxDA,GAAwD,CAAnDC,KAAmD,MAAnDA,KAAmD,CAA5CC,oBAA4C,MAA5CA,oBAA4C,CAAtBC,kBAAsB,MAAtBA,kBAAsB,CAC/EC,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAGA,GAAMM,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA;AACA,QAASW,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CACtB,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,UAAZ,CAAwB,OAAxB,CAAiC,OAAjC,CAA0C,KAA1C,CAAiD,MAAjD,CAAyD,MAAzD,CAAiE,QAAjE,CAA2E,WAA3E,CAAwF,SAAxF,CAAmG,UAAnG,CAA+G,UAA/G,CAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,CAASH,IAAT,CAAhB,CACA,GAAMI,CAAAA,UAAU,CAAGH,MAAM,CAACC,OAAO,CAACG,QAAR,EAAD,CAAN,CAA6B,GAA7B,CAAmCH,OAAO,CAACI,OAAR,EAAnC,CAAuD,GAAvD,CAA6DJ,OAAO,CAACK,WAAR,EAAhF,CACA,MAAOH,CAAAA,UAAP,CACH,CAID,mBACI,MAAC,QAAD,EAEI,EAAE,CAAE,CAAE,mCAAoC,CAAEI,MAAM,CAAE,CAAV,CAAtC,CAFR,wBAII,KAAC,SAAD,WACKf,KAAK,CAAG,CADb,EAJJ,cAOI,KAAC,SAAD,wBACI,KAAC,MAAD,EAAQ,GAAG,CAAC,YAAZ,CAAyB,GAAG,WAAKH,OAAL,aAAgBE,GAAG,CAACiB,KAApB,CAA5B,EADJ,EAPJ,cAUI,KAAC,SAAD,WACKjB,GAAG,CAACkB,IADT,EAVJ,cAaI,KAAC,SAAD,WAAYX,UAAU,CAACP,GAAG,CAACmB,SAAL,CAAtB,EAbJ,cAcI,KAAC,SAAD,WAAYnB,GAAZ,SAAYA,GAAZ,+BAAYA,GAAG,CAAEoB,OAAjB,uCAAY,aAAcF,IAA1B,EAdJ,cAeI,KAAC,SAAD,WAAYlB,GAAZ,SAAYA,GAAZ,iCAAYA,GAAG,CAAEqB,SAAjB,yCAAY,eAAgBH,IAA5B,EAfJ,cAgBI,KAAC,SAAD,WAAYlB,GAAG,CAACsB,MAAJ,EAAc,UAAd,CAA4B,WAA5B,CAA4C,QAAxD,EAhBJ,cAiBI,KAAC,SAAD,EAAW,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAlB,uBACI,2BACKvB,GAAG,CAACsB,MAAJ,EAAc,UAAd,cACG,KAAC,MAAD,EAEI,OAAO,CAAE,yBAAMnB,CAAAA,kBAAkB,CAACH,GAAD,CAAMC,KAAN,CAAa,QAAb,CAAxB,EAFb,CAGI,OAAO,CAAC,MAHZ,CAII,KAAK,CAAC,WAJV,uBAMI,KAAC,aAAD,IANJ,EADH,cAUG,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CACI,OAAO,CAAE,yBAAME,CAAAA,kBAAkB,CAACH,GAAD,CAAMC,KAAN,CAAa,UAAb,CAAxB,EADb,uBAII,KAAC,YAAD,IAJJ,EAXR,cAkBI,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CACI,OAAO,CAAE,yBAAMK,CAAAA,QAAQ,CAAC,iCAAmCN,GAAG,CAACwB,GAAvC,CAA6C,GAA7C,CAAmDxB,GAAG,CAACsB,MAAvD,CAAgE,GAAhE,CAAsEtB,GAAG,CAACkB,IAA3E,CAAd,EADb,uBAEI,KAAC,QAAD,IAFJ,EAlBJ,cAsBI,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,OAAO,CAAE,yBAAMhB,CAAAA,oBAAoB,CAACF,GAAG,CAACwB,GAAL,CAAUvB,KAAV,CAA1B,EAAhC,uBACI,KAAC,UAAD,IADJ,EAtBJ,cAyBI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,yBAAMK,CAAAA,QAAQ,CAAC,qBAAuBN,GAAG,CAACwB,GAA5B,CAAd,EAArC,oBAzBJ,GADJ,EAjBJ,GACSvB,KADT,CADJ,CAmDH,CAED,cAAeF,CAAAA,eAAf","sourcesContent":["import React from 'react'\n\nimport TableRow from '@mui/material/TableRow';\n\nimport TableCell from '@mui/material/TableCell';\nimport { Avatar, Button } from '@mui/material';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\n\n\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { baseUrl } from 'src/config';\n\nfunction SingleCourseRow({ row, index, openDeleteAlertModal, changeCourseStatus }) {\n    console.log(row)\n\n\n    const navigate = useNavigate()\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n\n\n    return (\n        <TableRow\n            key={index}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell>\n                {index + 1}\n            </TableCell>\n            <TableCell>\n                <Avatar alt=\"Remy Sharp\" src={`${baseUrl}/${row.image}`} />\n            </TableCell>\n            <TableCell>\n                {row.name}\n            </TableCell>\n            <TableCell>{renderDate(row.createdAt)}</TableCell>\n            <TableCell>{row?.boardID?.name}</TableCell>\n            <TableCell>{row?.classesID?.name}</TableCell>\n            <TableCell>{row.status == 'inactive' ? ('In Active') : ('Active')}</TableCell>\n            <TableCell style={{ width: \"30%\" }}>\n                <>\n                    {row.status == 'inactive' ? (\n                        <Button\n\n                            onClick={() => changeCourseStatus(row, index, 'active')}\n                            variant=\"text\"\n                            color=\"secondary\"\n                        >\n                            <ToggleOffIcon />\n                        </Button>\n                    ) : (\n                        <Button variant=\"text\"\n                            onClick={() => changeCourseStatus(row, index, 'inactive')}\n\n                        >\n                            <ToggleOnIcon />\n                        </Button>\n                    )}\n                    <Button variant=\"text\"\n                        onClick={() => navigate('/dashboard/courses/editCourse/' + row._id + '/' + row.status + '/' + row.name)}>\n                        <EditIcon />\n                    </Button>\n                    <Button variant=\"text\" onClick={() => openDeleteAlertModal(row._id, index)}>\n                        <DeleteIcon />\n                    </Button>\n                    <Button variant=\"contained\" onClick={() => navigate('/dashboard/topics/' + row._id)}>\n                        Topics\n                    </Button>\n                </>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default SingleCourseRow\n"]},"metadata":{},"sourceType":"module"}