{"ast":null,"code":"import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'; //Fetch all boards data using offset and limit!\n\nasync function getAllSubTopic(topicID, page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n    topicID\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/subTopic/filterSubTopic';else apiLink = apiUrl + '/subTopic/filterSubTopic?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //api to change the status of the user\n\n\nasync function editSubTopic(subTopicId, name, description, zipFile, pptFile, examID, status) {\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('description', description);\n  formData.append('file', pptFile);\n  formData.append('status', status);\n  const data = await fetch(apiUrl + '/subTopic/editSubTopic/' + subTopicId, {\n    method: 'PATCH',\n    headers: {// Accept: 'application/json',\n      //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData\n  }).then(res => res.json());\n\n  if (zipFile && examID) {\n    const examFormData = new FormData();\n    examFormData.append('exam', zipFile);\n    examFormData.append('name', name);\n    const subTopicExamData = await fetch(apiUrl + '/exam/' + examID, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json' //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: examFormData\n    }).then(res => res.json());\n  }\n\n  return data;\n} //api function for adding a Board \n\n\nasync function createSubTopic(topicId, name, description, zipFile, pptFile, status) {\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('description', description);\n  formData.append('file', pptFile);\n  formData.append('status', status);\n  const data = await fetch(apiUrl + '/subTopic/createSubTopic/' + topicId, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json' //   'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: formData\n  }).then(res => res.json());\n\n  if (data.status) {\n    const subTopicId = data.SubTopic._id;\n    const examFormData = new FormData();\n    examFormData.append('exam', zipFile);\n    examFormData.append('name', name);\n    const subTopicExamData = await fetch(apiUrl + '/exam/' + subTopicId, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json' //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: examFormData\n    }).then(res => res.json());\n  }\n\n  return data;\n} //api to delete the user from the database\n\n\nasync function deleteSubTopic(subTopicID) {\n  const data = await fetch(apiUrl + '/subTopic/deleteSubTopicById/' + subTopicID, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //api to get the details of a particular user by sending the userId\n\n\nasync function getSubTopicById(subTopicID) {\n  const data = await fetch(apiUrl + '/subTopic/getSubTopicById/' + subTopicID, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nasync function getSubTopicByFilter(topicID, searchString, status, startDate, endDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    endDate: endDate,\n    topicID\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/subTopic/filterSubTopic';else apiLink = apiUrl + '/subTopic/filterSubTopic?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nexport { getAllSubTopic, editSubTopic, createSubTopic, deleteSubTopic, getSubTopicById, getSubTopicByFilter };","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/SubTopic/SubTopic.js"],"names":["apiUrl","objToQueryString","getAllSubTopic","topicID","page","limit","queryString","apiLink","data","fetch","method","headers","Accept","then","res","json","editSubTopic","subTopicId","name","description","zipFile","pptFile","examID","status","formData","FormData","append","body","examFormData","subTopicExamData","createSubTopic","topicId","SubTopic","_id","deleteSubTopic","subTopicID","getSubTopicById","getSubTopicByFilter","searchString","startDate","endDate"],"mappings":"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","sourcesContent":["import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n\n//Fetch all boards data using offset and limit!\nasync function getAllSubTopic(topicID, page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n    topicID\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subTopic/filterSubTopic'\n  else\n    apiLink = apiUrl + '/subTopic/filterSubTopic?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\n//api to change the status of the user\nasync function editSubTopic(subTopicId, name, description, zipFile, pptFile, examID, status) {\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('description', description)\n  formData.append('file', pptFile)\n  formData.append('status', status)\n\n  const data = await fetch(apiUrl + '/subTopic/editSubTopic/' + subTopicId, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData,\n  }).then((res) => res.json());\n\n  if (zipFile && examID) {\n    const examFormData = new FormData()\n    examFormData.append('exam', zipFile)\n    examFormData.append('name', name)\n    const subTopicExamData = await fetch(apiUrl + '/exam/' + examID, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        //   'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: examFormData,\n    }).then((res) => res.json());\n  }\n  return data;\n\n}\n\n//api function for adding a Board \nasync function createSubTopic(topicId, name, description, zipFile, pptFile, status) {\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('description', description)\n  formData.append('file', pptFile)\n  formData.append('status', status)\n\n\n  const data = await fetch(apiUrl + '/subTopic/createSubTopic/' + topicId, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      //   'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData,\n  })\n    .then((res) => res.json());\n  if (data.status) {\n    const subTopicId = data.SubTopic._id\n    const examFormData = new FormData()\n    examFormData.append('exam', zipFile)\n    examFormData.append('name', name)\n    const subTopicExamData = await fetch(apiUrl + '/exam/' + subTopicId, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        //   'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: examFormData,\n    }).then((res) => res.json());\n  }\n  return data;\n}\n\n//api to delete the user from the database\nasync function deleteSubTopic(subTopicID) {\n  const data = await fetch(apiUrl + '/subTopic/deleteSubTopicById/' + subTopicID, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n//api to get the details of a particular user by sending the userId\nasync function getSubTopicById(subTopicID) {\n  const data = await fetch(apiUrl + '/subTopic/getSubTopicById/' + subTopicID, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nasync function getSubTopicByFilter(topicID, searchString, status, startDate, endDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    endDate: endDate,\n    topicID\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subTopic/filterSubTopic'\n  else\n    apiLink = apiUrl + '/subTopic/filterSubTopic?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nexport { getAllSubTopic, editSubTopic, createSubTopic, deleteSubTopic, getSubTopicById, getSubTopicByFilter }"]},"metadata":{},"sourceType":"module"}