{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\Markdown.js\";\nimport ReactMarkdown from 'react-markdown'; // markdown plugins\n\nimport rehypeRaw from 'rehype-raw';\nimport rehypeHighlight from 'rehype-highlight'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Link, Typography, Divider } from '@mui/material'; //\n\nimport Image from './Image'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  const isLight = theme.palette.mode === 'light';\n  return {\n    // List\n    '& ul, & ol': { ...theme.typography.body1,\n      paddingLeft: theme.spacing(5),\n      '& li': {\n        lineHeight: 2\n      }\n    },\n    // Blockquote\n    '& blockquote': {\n      lineHeight: 1.5,\n      fontSize: '1.5em',\n      margin: '40px auto',\n      position: 'relative',\n      fontFamily: 'Georgia, serif',\n      padding: theme.spacing(3, 3, 3, 8),\n      borderRadius: Number(theme.shape.borderRadius) * 2,\n      backgroundColor: theme.palette.background.neutral,\n      color: `${theme.palette.text.secondary} !important`,\n      [theme.breakpoints.up('md')]: {\n        width: '80%'\n      },\n      '& p, & span': {\n        marginBottom: '0 !important',\n        fontSize: 'inherit !important',\n        fontFamily: 'Georgia, serif !important',\n        color: `${theme.palette.text.secondary} !important`\n      },\n      '&:before': {\n        left: 16,\n        top: -8,\n        display: 'block',\n        fontSize: '3em',\n        content: '\"\\\\201C\"',\n        position: 'absolute',\n        color: theme.palette.text.disabled\n      }\n    },\n    // Code Block\n    '& pre, & pre > code': {\n      fontSize: 16,\n      overflowX: 'auto',\n      whiteSpace: 'pre',\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: isLight ? theme.palette.grey[900] : theme.palette.grey[50016]\n    },\n    '& code': {\n      fontSize: 14,\n      borderRadius: 4,\n      whiteSpace: 'pre',\n      padding: theme.spacing(0.2, 0.5),\n      color: theme.palette.warning[isLight ? 'darker' : 'lighter'],\n      backgroundColor: theme.palette.warning[isLight ? 'lighter' : 'darker'],\n      '&.hljs': {\n        padding: 0,\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function Markdown(_ref2) {\n  let { ...other\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(MarkdownStyle, {\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      rehypePlugins: [rehypeRaw, rehypeHighlight],\n      components: components,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_c = Markdown;\nconst components = {\n  h1: _ref3 => {\n    let { ...props\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }, this);\n  },\n  h2: _ref4 => {\n    let { ...props\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this);\n  },\n  h3: _ref5 => {\n    let { ...props\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }, this);\n  },\n  h4: _ref6 => {\n    let { ...props\n    } = _ref6;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this);\n  },\n  h5: _ref7 => {\n    let { ...props\n    } = _ref7;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this);\n  },\n  h6: _ref8 => {\n    let { ...props\n    } = _ref8;\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }, this);\n  },\n  hr: _ref9 => {\n    let { ...props\n    } = _ref9;\n    return /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 3\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }, this);\n  },\n  img: _ref10 => {\n    let { ...props\n    } = _ref10;\n    return /*#__PURE__*/_jsxDEV(Image, {\n      alt: props.alt,\n      ratio: \"16/9\",\n      sx: {\n        borderRadius: 2,\n        my: 5\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 26\n    }, this);\n  },\n  a: _ref11 => {\n    let { ...props\n    } = _ref11;\n    const {\n      href\n    } = props;\n    return !href.includes('http') ? /*#__PURE__*/_jsxDEV(Link, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      target: \"_blank\",\n      rel: \"noopener\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 59\n    }, this);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Markdown\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/Markdown.js"],"names":["ReactMarkdown","rehypeRaw","rehypeHighlight","styled","Link","Typography","Divider","Image","MarkdownStyle","theme","isLight","palette","mode","typography","body1","paddingLeft","spacing","lineHeight","fontSize","margin","position","fontFamily","padding","borderRadius","Number","shape","backgroundColor","background","neutral","color","text","secondary","breakpoints","up","width","marginBottom","left","top","display","content","disabled","overflowX","whiteSpace","common","white","grey","warning","Markdown","other","components","h1","props","h2","h3","h4","h5","h6","hr","my","img","alt","a","href","includes"],"mappings":"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","sourcesContent":["import ReactMarkdown from 'react-markdown';\n// markdown plugins\nimport rehypeRaw from 'rehype-raw';\nimport rehypeHighlight from 'rehype-highlight';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Link, Typography, Divider } from '@mui/material';\n//\nimport Image from './Image';\n\n// ----------------------------------------------------------------------\n\nconst MarkdownStyle = styled('div')(({ theme }) => {\n  const isLight = theme.palette.mode === 'light';\n\n  return {\n    // List\n    '& ul, & ol': {\n      ...theme.typography.body1,\n      paddingLeft: theme.spacing(5),\n      '& li': {\n        lineHeight: 2,\n      },\n    },\n\n    // Blockquote\n    '& blockquote': {\n      lineHeight: 1.5,\n      fontSize: '1.5em',\n      margin: '40px auto',\n      position: 'relative',\n      fontFamily: 'Georgia, serif',\n      padding: theme.spacing(3, 3, 3, 8),\n      borderRadius: Number(theme.shape.borderRadius) * 2,\n      backgroundColor: theme.palette.background.neutral,\n      color: `${theme.palette.text.secondary} !important`,\n      [theme.breakpoints.up('md')]: {\n        width: '80%',\n      },\n      '& p, & span': {\n        marginBottom: '0 !important',\n        fontSize: 'inherit !important',\n        fontFamily: 'Georgia, serif !important',\n        color: `${theme.palette.text.secondary} !important`,\n      },\n      '&:before': {\n        left: 16,\n        top: -8,\n        display: 'block',\n        fontSize: '3em',\n        content: '\"\\\\201C\"',\n        position: 'absolute',\n        color: theme.palette.text.disabled,\n      },\n    },\n\n    // Code Block\n    '& pre, & pre > code': {\n      fontSize: 16,\n      overflowX: 'auto',\n      whiteSpace: 'pre',\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: isLight ? theme.palette.grey[900] : theme.palette.grey[500_16],\n    },\n    '& code': {\n      fontSize: 14,\n      borderRadius: 4,\n      whiteSpace: 'pre',\n      padding: theme.spacing(0.2, 0.5),\n      color: theme.palette.warning[isLight ? 'darker' : 'lighter'],\n      backgroundColor: theme.palette.warning[isLight ? 'lighter' : 'darker'],\n      '&.hljs': { padding: 0, backgroundColor: 'transparent' },\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Markdown({ ...other }) {\n  return (\n    <MarkdownStyle>\n      <ReactMarkdown rehypePlugins={[rehypeRaw, rehypeHighlight]} components={components} {...other} />\n    </MarkdownStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst components = {\n  h1: ({ ...props }) => <Typography variant=\"h1\" {...props} />,\n  h2: ({ ...props }) => <Typography variant=\"h2\" {...props} />,\n  h3: ({ ...props }) => <Typography variant=\"h3\" {...props} />,\n  h4: ({ ...props }) => <Typography variant=\"h4\" {...props} />,\n  h5: ({ ...props }) => <Typography variant=\"h5\" {...props} />,\n  h6: ({ ...props }) => <Typography variant=\"h6\" {...props} />,\n  hr: ({ ...props }) => <Divider sx={{ my: 3 }} {...props} />,\n  img: ({ ...props }) => <Image alt={props.alt} ratio=\"16/9\" sx={{ borderRadius: 2, my: 5 }} {...props} />,\n  a: ({ ...props }) => {\n    const { href } = props;\n    return !href.includes('http') ? <Link {...props} /> : <Link target=\"_blank\" rel=\"noopener\" {...props} />;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}