{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\extra\\\\Lightbox.js\",\n    _s = $RefreshSig$();\n\nimport findIndex from 'lodash/findIndex';\nimport { useState } from 'react'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Container } from '@mui/material'; // routes\n\nimport { PATH_PAGE } from '../../../routes/paths'; // routes\n\nimport _mock from '../../../_mock'; // components\n\nimport Page from '../../../components/Page';\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: theme.spacing(11),\n    paddingBottom: theme.spacing(15)\n  };\n}); // ----------------------------------------------------------------------\n\nconst imagesLightbox = [...Array(8)].map((_, index) => _mock.image.feed(index + 1));\nexport default function Lightbox() {\n  _s();\n\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const handleOpenLightbox = url => {\n    const selectedImage = findIndex(imagesLightbox, index => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Components: Lightbox\",\n    children: [/*#__PURE__*/_jsxDEV(RootStyle, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: theme => theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n            heading: \"Lightbox\",\n            links: [{\n              name: 'Components',\n              href: PATH_PAGE.components\n            }, {\n              name: 'Lightbox'\n            }],\n            moreLink: \"https://www.npmjs.com/package/react-image-lightbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            p: 3,\n            display: 'grid',\n            gap: 1.5,\n            gridTemplateColumns: {\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(3, 1fr)',\n              md: 'repeat(4, 1fr)'\n            }\n          },\n          children: imagesLightbox.map(img => /*#__PURE__*/_jsxDEV(Image, {\n            src: img,\n            ratio: \"1/1\",\n            onClick: () => handleOpenLightbox(img),\n            sx: {\n              borderRadius: 1,\n              cursor: 'pointer'\n            }\n          }, img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightboxModal, {\n      images: imagesLightbox,\n      mainSrc: imagesLightbox[selectedImage],\n      photoIndex: selectedImage,\n      setPhotoIndex: setSelectedImage,\n      isOpen: openLightbox,\n      onCloseRequest: () => setOpenLightbox(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lightbox, \"m/A+V1lU3o/gw40HVDT1uKDOFoA=\");\n\n_c = Lightbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lightbox\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/Lightbox.js"],"names":["findIndex","useState","styled","Box","Card","Container","PATH_PAGE","_mock","Page","Image","LightboxModal","HeaderBreadcrumbs","RootStyle","theme","paddingTop","spacing","paddingBottom","imagesLightbox","Array","map","_","index","image","feed","Lightbox","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","handleOpenLightbox","url","pt","pb","mb","bgcolor","palette","mode","name","href","components","p","display","gap","gridTemplateColumns","xs","sm","md","img","borderRadius","cursor"],"mappings":"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","sourcesContent":["import findIndex from 'lodash/findIndex';\nimport { useState } from 'react';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Container } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// routes\nimport _mock from '../../../_mock';\n// components\nimport Page from '../../../components/Page';\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nconst imagesLightbox = [...Array(8)].map((_, index) => _mock.image.feed(index + 1));\n\nexport default function Lightbox() {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <Page title=\"Components: Lightbox\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Lightbox\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Lightbox' }]}\n              moreLink=\"https://www.npmjs.com/package/react-image-lightbox\"\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Card\n            sx={{\n              p: 3,\n              display: 'grid',\n              gap: 1.5,\n              gridTemplateColumns: {\n                xs: 'repeat(2, 1fr)',\n                sm: 'repeat(3, 1fr)',\n                md: 'repeat(4, 1fr)',\n              },\n            }}\n          >\n            {imagesLightbox.map((img) => (\n              <Image\n                key={img}\n                src={img}\n                ratio=\"1/1\"\n                onClick={() => handleOpenLightbox(img)}\n                sx={{\n                  borderRadius: 1,\n                  cursor: 'pointer',\n                }}\n              />\n            ))}\n          </Card>\n        </Container>\n      </RootStyle>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}