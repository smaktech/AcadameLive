{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{forwardRef,useState}from'react';// @mui\nimport{Slide,Dialog,Button,DialogTitle,DialogActions,DialogContent,DialogContentText}from'@mui/material';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Transition=/*#__PURE__*/forwardRef(function(props,ref){return/*#__PURE__*/_jsx(Slide,_objectSpread({direction:\"up\",ref:ref},props));});export default function TransitionsDialogs(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"success\",onClick:handleClickOpen,children:\"Transitions Dialogs\"}),/*#__PURE__*/_jsxs(Dialog,{open:open,TransitionComponent:Transition,keepMounted:true,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-slide-title\",\"aria-describedby\":\"alert-dialog-slide-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-slide-title\",children:\"Use Google's location service?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-slide-description\",children:\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:handleClose,children:\"Disagree\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleClose,children:\"Agree\"})]})]})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/mui/dialog/TransitionsDialogs.js"],"names":["forwardRef","useState","Slide","Dialog","Button","DialogTitle","DialogActions","DialogContent","DialogContentText","Transition","props","ref","TransitionsDialogs","open","setOpen","handleClickOpen","handleClose"],"mappings":"+TAAA,OAASA,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA;AACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,MAAxB,CAAgCC,WAAhC,CAA6CC,aAA7C,CAA4DC,aAA5D,CAA2EC,iBAA3E,KAAoG,eAApG,CAEA;wFAEA,GAAMC,CAAAA,UAAU,cAAGT,UAAU,CAAC,SAACU,KAAD,CAAQC,GAAR,qBAAgB,KAAC,KAAD,gBAAO,SAAS,CAAC,IAAjB,CAAsB,GAAG,CAAEA,GAA3B,EAAoCD,KAApC,EAAhB,EAAD,CAA7B,CAEA,cAAe,SAASE,CAAAA,kBAAT,EAA8B,CAC3C,cAAwBX,QAAQ,CAAC,KAAD,CAAhC,wCAAOY,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBF,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,mBACE,oCACE,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAC,SAAjC,CAA2C,OAAO,CAAEC,eAApD,iCADF,cAKE,MAAC,MAAD,EACE,IAAI,CAAEF,IADR,CAEE,mBAAmB,CAAEJ,UAFvB,CAGE,WAAW,KAHb,CAIE,OAAO,CAAEO,WAJX,CAKE,kBAAgB,0BALlB,CAME,mBAAiB,gCANnB,wBAQE,KAAC,WAAD,EAAa,EAAE,CAAC,0BAAhB,4CARF,cASE,KAAC,aAAD,wBACE,KAAC,iBAAD,EAAmB,EAAE,CAAC,gCAAtB,2IADF,EATF,cAeE,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAEA,WAAjC,sBADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEA,WAArC,mBAJF,GAfF,GALF,GADF,CAgCD","sourcesContent":["import { forwardRef, useState } from 'react';\n// @mui\nimport { Slide, Dialog, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function TransitionsDialogs() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"success\" onClick={handleClickOpen}>\n        Transitions Dialogs\n      </Button>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\n            apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"inherit\" onClick={handleClose}>\n            Disagree\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}