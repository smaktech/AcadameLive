{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\layouts\\\\dashboard\\\\header\\\\NotificationsPopover.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom'; // @mui\n\nimport { Box, List, Badge, Button, Avatar, Tooltip, Divider, Typography, ListItemText, ListSubheader, ListItemAvatar, ListItemButton } from '@mui/material'; // utils\n\nimport { fToNow } from '../../../utils/formatTime'; // _mock_\n\nimport { _notifications } from '../../../_mock'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NotificationsPopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(_notifications);\n  const totalUnRead = notifications.filter(item => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification,\n      isUnRead: false\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      ref: anchorRef,\n      size: \"large\",\n      color: open ? 'primary' : 'default',\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: totalUnRead,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: \"eva:bell-fill\",\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          py: 2,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"You have \", totalUnRead, \" unread messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), totalUnRead > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \" Mark all as read\",\n          children: /*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n            color: \"primary\",\n            onClick: handleMarkAllAsRead,\n            children: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: \"eva:done-all-fill\",\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: {\n            xs: 340,\n            sm: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(0, 2).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"Before that\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(2, 5).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disableRipple: true,\n          component: RouterLink,\n          to: \"#\",\n          children: \"View All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\n_s(NotificationsPopover, \"CwOvJfM5sKL+No4s/Ijz7dNT5Fk=\");\n\n_c = NotificationsPopover;\nNotificationItem.propTypes = {\n  notification: PropTypes.shape({\n    createdAt: PropTypes.instanceOf(Date),\n    id: PropTypes.string,\n    isUnRead: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    avatar: PropTypes.any\n  })\n};\n\nfunction NotificationItem(_ref) {\n  let {\n    notification\n  } = _ref;\n  const {\n    avatar,\n    title\n  } = renderContent(notification);\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    to: \"#\",\n    component: RouterLink,\n    sx: {\n      py: 1.5,\n      px: 2.5,\n      mt: '1px',\n      ...(notification.isUnRead && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'background.neutral'\n        },\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: title,\n      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          mt: 0.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.disabled'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: \"eva:clock-outline\",\n          sx: {\n            mr: 0.5,\n            width: 16,\n            height: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), fToNow(notification.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_c2 = NotificationItem;\n\nfunction renderContent(notification) {\n  const title = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: [notification.title, /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary'\n      },\n      children: [\"\\xA0 \", noCase(notification.description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'mail') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  return {\n    avatar: notification.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: notification.title,\n      src: notification.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 35\n    }, this) : null,\n    title\n  };\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationsPopover\");\n$RefreshReg$(_c2, \"NotificationItem\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/header/NotificationsPopover.js"],"names":["PropTypes","noCase","useRef","useState","Link","RouterLink","Box","List","Badge","Button","Avatar","Tooltip","Divider","Typography","ListItemText","ListSubheader","ListItemAvatar","ListItemButton","fToNow","_notifications","Iconify","Scrollbar","MenuPopover","IconButtonAnimate","NotificationsPopover","anchorRef","open","setOpen","notifications","setNotifications","totalUnRead","filter","item","isUnRead","length","handleOpen","handleClose","handleMarkAllAsRead","map","notification","current","width","display","alignItems","py","px","flexGrow","color","height","xs","sm","typography","slice","id","p","NotificationItem","propTypes","shape","createdAt","instanceOf","Date","string","bool","title","description","type","avatar","any","renderContent","mt","bgcolor","mr"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  List,\n  Badge,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  Typography,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// _mock_\nimport { _notifications } from '../../../_mock';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nexport default function NotificationsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(_notifications);\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        isUnRead: false,\n      }))\n    );\n  };\n\n  return (\n    <>\n      <IconButtonAnimate ref={anchorRef} size=\"large\" color={open ? 'primary' : 'default'} onClick={handleOpen}>\n        <Badge badgeContent={totalUnRead} color=\"error\">\n          <Iconify icon=\"eva:bell-fill\" width={20} height={20} />\n        </Badge>\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">Notifications</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              You have {totalUnRead} unread messages\n            </Typography>\n          </Box>\n\n          {totalUnRead > 0 && (\n            <Tooltip title=\" Mark all as read\">\n              <IconButtonAnimate color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Iconify icon=\"eva:done-all-fill\" width={20} height={20} />\n              </IconButtonAnimate>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                New\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(0, 2).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                Before that\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(2, 5).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n        </Scrollbar>\n\n        <Divider />\n\n        <Box sx={{ p: 1 }}>\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\n            View All\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nNotificationItem.propTypes = {\n  notification: PropTypes.shape({\n    createdAt: PropTypes.instanceOf(Date),\n    id: PropTypes.string,\n    isUnRead: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    avatar: PropTypes.any,\n  }),\n};\n\nfunction NotificationItem({ notification }) {\n  const { avatar, title } = renderContent(notification);\n\n  return (\n    <ListItemButton\n      to=\"#\"\n      component={RouterLink}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        mt: '1px',\n        ...(notification.isUnRead && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: 'text.disabled',\n            }}\n          >\n            <Iconify icon=\"eva:clock-outline\" sx={{ mr: 0.5, width: 16, height: 16 }} />\n            {fToNow(notification.createdAt)}\n          </Typography>\n        }\n      />\n    </ListItemButton>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction renderContent(notification) {\n  const title = (\n    <Typography variant=\"subtitle2\">\n      {notification.title}\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\n        &nbsp; {noCase(notification.description)}\n      </Typography>\n    </Typography>\n  );\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'mail') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  return {\n    avatar: notification.avatar ? <img alt={notification.title} src={notification.avatar} /> : null,\n    title,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}