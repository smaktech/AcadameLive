{"ast":null,"code":"/*\nLanguage: Augmented Backus-Naur Form\nAuthor: Alex McKibben <alex@nullscope.net>\nWebsite: https://tools.ietf.org/html/rfc5234\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  var regex = hljs.regex;\n  var IDENT = /^[a-zA-Z][a-zA-Z0-9-]*/;\n  var KEYWORDS = [\"ALPHA\", \"BIT\", \"CHAR\", \"CR\", \"CRLF\", \"CTL\", \"DIGIT\", \"DQUOTE\", \"HEXDIG\", \"HTAB\", \"LF\", \"LWSP\", \"OCTET\", \"SP\", \"VCHAR\", \"WSP\"];\n  var COMMENT = hljs.COMMENT(/;/, /$/);\n  var TERMINAL_BINARY = {\n    scope: \"symbol\",\n    match: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+)?/\n  };\n  var TERMINAL_DECIMAL = {\n    scope: \"symbol\",\n    match: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+)?/\n  };\n  var TERMINAL_HEXADECIMAL = {\n    scope: \"symbol\",\n    match: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+)?/\n  };\n  var CASE_SENSITIVITY = {\n    scope: \"symbol\",\n    match: /%[si](?=\".*\")/\n  };\n  var RULE_DECLARATION = {\n    scope: \"attribute\",\n    match: regex.concat(IDENT, /(?=\\s*=)/)\n  };\n  var ASSIGNMENT = {\n    scope: \"operator\",\n    match: /=\\/?/\n  };\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: /[!@#$^&',?+~`|:]/,\n    keywords: KEYWORDS,\n    contains: [ASSIGNMENT, RULE_DECLARATION, COMMENT, TERMINAL_BINARY, TERMINAL_DECIMAL, TERMINAL_HEXADECIMAL, CASE_SENSITIVITY, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE]\n  };\n}\n\nmodule.exports = abnf;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/abnf.js"],"names":["abnf","hljs","regex","IDENT","KEYWORDS","COMMENT","TERMINAL_BINARY","scope","match","TERMINAL_DECIMAL","TERMINAL_HEXADECIMAL","CASE_SENSITIVITY","RULE_DECLARATION","concat","ASSIGNMENT","name","illegal","keywords","contains","QUOTE_STRING_MODE","NUMBER_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAClB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,MAAMC,KAAK,GAAG,wBAAd;AAEA,MAAMC,QAAQ,GAAG,CACf,OADe,EAEf,KAFe,EAGf,MAHe,EAIf,IAJe,EAKf,MALe,EAMf,KANe,EAOf,OAPe,EAQf,QARe,EASf,QATe,EAUf,MAVe,EAWf,IAXe,EAYf,MAZe,EAaf,OAbe,EAcf,IAde,EAef,OAfe,EAgBf,KAhBe,CAAjB;AAmBA,MAAMC,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAhB;AAEA,MAAMC,eAAe,GAAG;AACtBC,IAAAA,KAAK,EAAE,QADe;AAEtBC,IAAAA,KAAK,EAAE;AAFe,GAAxB;AAKA,MAAMC,gBAAgB,GAAG;AACvBF,IAAAA,KAAK,EAAE,QADgB;AAEvBC,IAAAA,KAAK,EAAE;AAFgB,GAAzB;AAKA,MAAME,oBAAoB,GAAG;AAC3BH,IAAAA,KAAK,EAAE,QADoB;AAE3BC,IAAAA,KAAK,EAAE;AAFoB,GAA7B;AAKA,MAAMG,gBAAgB,GAAG;AACvBJ,IAAAA,KAAK,EAAE,QADgB;AAEvBC,IAAAA,KAAK,EAAE;AAFgB,GAAzB;AAKA,MAAMI,gBAAgB,GAAG;AACvBL,IAAAA,KAAK,EAAE,WADgB;AAEvBC,IAAAA,KAAK,EAAEN,KAAK,CAACW,MAAN,CAAaV,KAAb,EAAoB,UAApB;AAFgB,GAAzB;AAKA,MAAMW,UAAU,GAAG;AACjBP,IAAAA,KAAK,EAAE,UADU;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAAnB;AAKA,SAAO;AACLO,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,OAAO,EAAE,kBAFJ;AAGLC,IAAAA,QAAQ,EAAEb,QAHL;AAILc,IAAAA,QAAQ,EAAE,CACRJ,UADQ,EAERF,gBAFQ,EAGRP,OAHQ,EAIRC,eAJQ,EAKRG,gBALQ,EAMRC,oBANQ,EAORC,gBAPQ,EAQRV,IAAI,CAACkB,iBARG,EASRlB,IAAI,CAACmB,WATG;AAJL,GAAP;AAgBD;;AAEDC,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["/*\nLanguage: Augmented Backus-Naur Form\nAuthor: Alex McKibben <alex@nullscope.net>\nWebsite: https://tools.ietf.org/html/rfc5234\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  const regex = hljs.regex;\n  const IDENT = /^[a-zA-Z][a-zA-Z0-9-]*/;\n\n  const KEYWORDS = [\n    \"ALPHA\",\n    \"BIT\",\n    \"CHAR\",\n    \"CR\",\n    \"CRLF\",\n    \"CTL\",\n    \"DIGIT\",\n    \"DQUOTE\",\n    \"HEXDIG\",\n    \"HTAB\",\n    \"LF\",\n    \"LWSP\",\n    \"OCTET\",\n    \"SP\",\n    \"VCHAR\",\n    \"WSP\"\n  ];\n\n  const COMMENT = hljs.COMMENT(/;/, /$/);\n\n  const TERMINAL_BINARY = {\n    scope: \"symbol\",\n    match: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+)?/\n  };\n\n  const TERMINAL_DECIMAL = {\n    scope: \"symbol\",\n    match: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+)?/\n  };\n\n  const TERMINAL_HEXADECIMAL = {\n    scope: \"symbol\",\n    match: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+)?/\n  };\n\n  const CASE_SENSITIVITY = {\n    scope: \"symbol\",\n    match: /%[si](?=\".*\")/\n  };\n\n  const RULE_DECLARATION = {\n    scope: \"attribute\",\n    match: regex.concat(IDENT, /(?=\\s*=)/)\n  };\n\n  const ASSIGNMENT = {\n    scope: \"operator\",\n    match: /=\\/?/\n  };\n\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: /[!@#$^&',?+~`|:]/,\n    keywords: KEYWORDS,\n    contains: [\n      ASSIGNMENT,\n      RULE_DECLARATION,\n      COMMENT,\n      TERMINAL_BINARY,\n      TERMINAL_DECIMAL,\n      TERMINAL_HEXADECIMAL,\n      CASE_SENSITIVITY,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = abnf;\n"]},"metadata":{},"sourceType":"script"}