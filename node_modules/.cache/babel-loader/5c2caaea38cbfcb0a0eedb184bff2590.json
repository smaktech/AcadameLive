{"ast":null,"code":"import { objToQueryString } from '../../config';\nimport { apiUrl } from '../../config'; //Fetch all users data using offset and limit!\n\nasync function fetchUser(limit, page) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/auth/getAllUsers';else apiLink = apiUrl + '/auth/getAllUsers?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json' // 'Content-Type': 'application/json',\n\n    }\n  }).then(res => res.json());\n  return data;\n} //api to change the status of the user\n\n\nasync function changeStatus(userId, status) {\n  let formData = new FormData();\n  formData.append('isActive', status);\n  const data = await fetch(apiUrl + '/auth/changeUserStatus/' + userId, {\n    method: 'POST',\n    // headers: {\n    //   Accept: 'application/json',\n    //   'Content-Type': 'application/json',\n    // },\n    body: formData\n  }).then(res => res.json());\n  return data;\n} //api to delete the user from the database\n\n\nasync function deleteUser(userId) {\n  const data = await fetch(apiUrl + '/auth/deleteUser/' + userId, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //api to get the details of a particular user by sending the userId\n\n\nasync function getUserById(userId) {\n  const data = await fetch(apiUrl + '/auth/getUserById/' + userId, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nasync function getUserByFilter(searchString, startDate, endDate, page, limit, sortByDate, isActive) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    startDate: startDate,\n    endDate: endDate,\n    page: page,\n    limit: limit,\n    sortByDate: sortByDate,\n    isActive: isActive\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/auth/getAllUsers';else apiLink = apiUrl + '/auth/getAllUsers?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nasync function addUser(email, password, name, phoneNumber, school) {\n  const data = await fetch(`${apiUrl}/auth/signupTest`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name,\n      phoneNumber,\n      school\n    })\n  }).then(res => res.json());\n  return data;\n}\n\nexport { fetchUser, addUser, changeStatus, deleteUser, getUserById, getUserByFilter };","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Users/Users.js"],"names":["objToQueryString","apiUrl","fetchUser","limit","page","queryString","apiLink","data","fetch","method","headers","Accept","then","res","json","changeStatus","userId","status","formData","FormData","append","body","deleteUser","getUserById","getUserByFilter","searchString","startDate","endDate","sortByDate","isActive","addUser","email","password","name","phoneNumber","school","JSON","stringify"],"mappings":"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","sourcesContent":["import { objToQueryString } from '../../config';\n  import { apiUrl } from '../../config';\n\n//Fetch all users data using offset and limit!\nasync function fetchUser(limit, page) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/auth/getAllUsers'\n  else\n    apiLink = apiUrl + '/auth/getAllUsers?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      // 'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n\n}\n\n\n//api to change the status of the user\n\nasync function changeStatus(userId, status) {\n  let formData = new FormData();\n  formData.append('isActive', status)\n  const data = await fetch(apiUrl + '/auth/changeUserStatus/' + userId, {\n    method: 'POST',\n    // headers: {\n    //   Accept: 'application/json',\n    //   'Content-Type': 'application/json',\n    // },\n    body: formData,\n  }).then((res) => res.json());\n  return data;\n\n}\n\n//api to delete the user from the database\nasync function deleteUser(userId) {\n  const data = await fetch(apiUrl + '/auth/deleteUser/' + userId, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n//api to get the details of a particular user by sending the userId\nasync function getUserById(userId) {\n  const data = await fetch(apiUrl + '/auth/getUserById/' + userId, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nasync function getUserByFilter(searchString, startDate, endDate, page, limit, sortByDate,isActive) {\n\n  const queryString = objToQueryString({\n    searchString: searchString,\n    startDate: startDate,\n    endDate: endDate,\n    page: page,\n    limit: limit,\n    sortByDate: sortByDate,\n    isActive:isActive,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/auth/getAllUsers'\n  else\n    apiLink = apiUrl + '/auth/getAllUsers?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n\n}\n\n\nasync function addUser(email, password, name,phoneNumber, school) {\n  const data = await fetch(`${apiUrl}/auth/signupTest`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({email, password, name,phoneNumber, school}),\n  }).then((res) => res.json());\n\n  return data;\n\n}\n\nexport { fetchUser,addUser, changeStatus, deleteUser, getUserById, getUserByFilter }"]},"metadata":{},"sourceType":"module"}