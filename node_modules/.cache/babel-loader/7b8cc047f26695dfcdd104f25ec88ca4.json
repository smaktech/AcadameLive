{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{useCallback}from'react';import{useSnackbar}from'notistack';import{useNavigate}from'react-router-dom';import{Form,FormikProvider,useFormik}from'formik';// @mui\nimport{LoadingButton}from'@mui/lab';import{Box,Card,Grid,Stack,Switch,TextField,Typography,FormHelperText,FormControlLabel}from'@mui/material';// utils\nimport{fData}from'../../../utils/formatNumber';// routes\nimport{PATH_DASHBOARD}from'../../../routes/paths';// _mock\nimport{countries}from'../../../_mock';// components\nimport Label from'../../../components/Label';import{UploadAvatar}from'../../../components/upload';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UserNewForm(_ref){var isEdit=_ref.isEdit,currentUser=_ref.currentUser;var navigate=useNavigate();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var NewUserSchema=Yup.object().shape({name:Yup.string().required('Name is required'),email:Yup.string().required('Email is required').email(),phoneNumber:Yup.string().required('Phone number is required'),address:Yup.string().required('Address is required'),country:Yup.string().required('country is required'),company:Yup.string().required('Company is required'),state:Yup.string().required('State is required'),city:Yup.string().required('City is required'),role:Yup.string().required('Role Number is required'),avatarUrl:Yup.mixed().required('Avatar is required')});var formik=useFormik({enableReinitialize:true,initialValues:{name:(currentUser===null||currentUser===void 0?void 0:currentUser.name)||'',email:(currentUser===null||currentUser===void 0?void 0:currentUser.email)||'',phoneNumber:(currentUser===null||currentUser===void 0?void 0:currentUser.phoneNumber)||'',address:(currentUser===null||currentUser===void 0?void 0:currentUser.address)||'',country:(currentUser===null||currentUser===void 0?void 0:currentUser.country)||'',state:(currentUser===null||currentUser===void 0?void 0:currentUser.state)||'',city:(currentUser===null||currentUser===void 0?void 0:currentUser.city)||'',zipCode:(currentUser===null||currentUser===void 0?void 0:currentUser.zipCode)||'',avatarUrl:(currentUser===null||currentUser===void 0?void 0:currentUser.avatarUrl)||null,isVerified:(currentUser===null||currentUser===void 0?void 0:currentUser.isVerified)||true,status:currentUser===null||currentUser===void 0?void 0:currentUser.status,company:(currentUser===null||currentUser===void 0?void 0:currentUser.company)||'',role:(currentUser===null||currentUser===void 0?void 0:currentUser.role)||''},validationSchema:NewUserSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setSubmitting,resetForm,setErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref2.setSubmitting,resetForm=_ref2.resetForm,setErrors=_ref2.setErrors;_context.prev=1;_context.next=4;return new Promise(function(resolve){return setTimeout(resolve,500);});case 4:resetForm();setSubmitting(false);enqueueSnackbar(!isEdit?'Create success':'Update success',{variant:'success'});navigate(PATH_DASHBOARD.user.list);_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);console.error(_context.t0);setSubmitting(false);setErrors(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,values=formik.values,touched=formik.touched,handleSubmit=formik.handleSubmit,isSubmitting=formik.isSubmitting,setFieldValue=formik.setFieldValue,getFieldProps=formik.getFieldProps;var handleDrop=useCallback(function(acceptedFiles){var file=acceptedFiles[0];if(file){setFieldValue('avatarUrl',_objectSpread(_objectSpread({},file),{},{preview:URL.createObjectURL(file)}));}},[setFieldValue]);return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{py:10,px:3},children:[isEdit&&/*#__PURE__*/_jsx(Label,{color:values.status!=='active'?'error':'success',sx:{textTransform:'uppercase',position:'absolute',top:24,right:24},children:values.status}),/*#__PURE__*/_jsxs(Box,{sx:{mb:5},children:[/*#__PURE__*/_jsx(UploadAvatar,{accept:\"image/*\",file:values.avatarUrl,maxSize:3145728,onDrop:handleDrop,error:Boolean(touched.avatarUrl&&errors.avatarUrl),caption:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{mt:2,mx:'auto',display:'block',textAlign:'center',color:'text.secondary'},children:[\"Allowed *.jpeg, *.jpg, *.png, *.gif\",/*#__PURE__*/_jsx(\"br\",{}),\" max size of \",fData(3145728)]})}),/*#__PURE__*/_jsx(FormHelperText,{error:true,sx:{px:2,textAlign:'center'},children:touched.avatarUrl&&errors.avatarUrl})]}),isEdit&&/*#__PURE__*/_jsx(FormControlLabel,{labelPlacement:\"start\",control:/*#__PURE__*/_jsx(Switch,{onChange:function onChange(event){return setFieldValue('status',event.target.checked?'banned':'active');},checked:values.status!=='active'}),label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:0.5},children:\"Banned\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'text.secondary'},children:\"Apply disable account\"})]}),sx:{mx:0,mb:3,width:1,justifyContent:'space-between'}}),/*#__PURE__*/_jsx(FormControlLabel,{labelPlacement:\"start\",control:/*#__PURE__*/_jsx(Switch,_objectSpread(_objectSpread({},getFieldProps('isVerified')),{},{checked:values.isVerified})),label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{mb:0.5},children:\"Email Verified\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'text.secondary'},children:\"Disabling this will automatically send the user a verification email\"})]}),sx:{mx:0,width:1,justifyContent:'space-between'}})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{sx:{p:3},children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Full Name\"},getFieldProps('name')),{},{error:Boolean(touched.name&&errors.name),helperText:touched.name&&errors.name})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Email Address\"},getFieldProps('email')),{},{error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email}))]}),/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Phone Number\"},getFieldProps('phoneNumber')),{},{error:Boolean(touched.phoneNumber&&errors.phoneNumber),helperText:touched.phoneNumber&&errors.phoneNumber})),/*#__PURE__*/_jsxs(TextField,_objectSpread(_objectSpread({select:true,fullWidth:true,label:\"Country\",placeholder:\"Country\"},getFieldProps('country')),{},{SelectProps:{native:true},error:Boolean(touched.country&&errors.country),helperText:touched.country&&errors.country,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),countries.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option.label,children:option.label},option.code);})]}))]}),/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"State/Region\"},getFieldProps('state')),{},{error:Boolean(touched.state&&errors.state),helperText:touched.state&&errors.state})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"City\"},getFieldProps('city')),{},{error:Boolean(touched.city&&errors.city),helperText:touched.city&&errors.city}))]}),/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Address\"},getFieldProps('address')),{},{error:Boolean(touched.address&&errors.address),helperText:touched.address&&errors.address})),/*#__PURE__*/_jsx(TextField,_objectSpread({fullWidth:true,label:\"Zip/Code\"},getFieldProps('zipCode')))]}),/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Company\"},getFieldProps('company')),{},{error:Boolean(touched.company&&errors.company),helperText:touched.company&&errors.company})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Role\"},getFieldProps('role')),{},{error:Boolean(touched.role&&errors.role),helperText:touched.role&&errors.role}))]}),/*#__PURE__*/_jsx(Box,{sx:{mt:3,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(LoadingButton,{type:\"submit\",variant:\"contained\",loading:isSubmitting,children:!isEdit?'Create User':'Save Changes'})})]})})})]})})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/user/UserNewForm.js"],"names":["Yup","useCallback","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","fData","PATH_DASHBOARD","countries","Label","UploadAvatar","UserNewForm","isEdit","currentUser","navigate","enqueueSnackbar","NewUserSchema","object","shape","name","string","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","mixed","formik","enableReinitialize","initialValues","zipCode","isVerified","status","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","Promise","resolve","setTimeout","variant","user","list","console","error","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","acceptedFiles","file","preview","URL","createObjectURL","py","px","textTransform","position","top","right","mb","Boolean","mt","mx","display","textAlign","color","event","target","checked","width","justifyContent","p","xs","sm","native","map","option","label","code"],"mappings":"4dAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CAEA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,WAAT,KAA4B,WAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,IAAT,CAAeC,cAAf,CAA+BC,SAA/B,KAAgD,QAAhD,CACA;AACA,OAASC,aAAT,KAA8B,UAA9B,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,IAApB,CAA0BC,KAA1B,CAAiCC,MAAjC,CAAyCC,SAAzC,CAAoDC,UAApD,CAAgEC,cAAhE,CAAgFC,gBAAhF,KAAwG,eAAxG,CACA;AACA,OAASC,KAAT,KAAsB,6BAAtB,CACA;AACA,OAASC,cAAT,KAA+B,uBAA/B,CACA;AACA,OAASC,SAAT,KAA0B,gBAA1B,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,OAASC,YAAT,KAA6B,4BAA7B,CAEA;6IAOA,cAAe,SAASC,CAAAA,WAAT,MAA8C,IAAvBC,CAAAA,MAAuB,MAAvBA,MAAuB,CAAfC,WAAe,MAAfA,WAAe,CAC3D,GAAMC,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA,iBAA4BD,WAAW,EAAvC,CAAQwB,eAAR,cAAQA,eAAR,CAEA,GAAMC,CAAAA,aAAa,CAAG3B,GAAG,CAAC4B,MAAJ,GAAaC,KAAb,CAAmB,CACvCC,IAAI,CAAE9B,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADiC,CAEvCC,KAAK,CAAEjC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,EAA2CC,KAA3C,EAFgC,CAGvCC,WAAW,CAAElC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAH0B,CAIvCG,OAAO,CAAEnC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAJ8B,CAKvCI,OAAO,CAAEpC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAL8B,CAMvCK,OAAO,CAAErC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAN8B,CAOvCM,KAAK,CAAEtC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAPgC,CAQvCO,IAAI,CAAEvC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CARiC,CASvCQ,IAAI,CAAExC,GAAG,CAAC+B,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CATiC,CAUvCS,SAAS,CAAEzC,GAAG,CAAC0C,KAAJ,GAAYV,QAAZ,CAAqB,oBAArB,CAV4B,CAAnB,CAAtB,CAaA,GAAMW,CAAAA,MAAM,CAAGrC,SAAS,CAAC,CACvBsC,kBAAkB,CAAE,IADG,CAEvBC,aAAa,CAAE,CACbf,IAAI,CAAE,CAAAN,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEM,IAAb,GAAqB,EADd,CAEbG,KAAK,CAAE,CAAAT,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAES,KAAb,GAAsB,EAFhB,CAGbC,WAAW,CAAE,CAAAV,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEU,WAAb,GAA4B,EAH5B,CAIbC,OAAO,CAAE,CAAAX,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEW,OAAb,GAAwB,EAJpB,CAKbC,OAAO,CAAE,CAAAZ,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEY,OAAb,GAAwB,EALpB,CAMbE,KAAK,CAAE,CAAAd,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEc,KAAb,GAAsB,EANhB,CAObC,IAAI,CAAE,CAAAf,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEe,IAAb,GAAqB,EAPd,CAQbO,OAAO,CAAE,CAAAtB,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEsB,OAAb,GAAwB,EARpB,CASbL,SAAS,CAAE,CAAAjB,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEiB,SAAb,GAA0B,IATxB,CAUbM,UAAU,CAAE,CAAAvB,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEuB,UAAb,GAA2B,IAV1B,CAWbC,MAAM,CAAExB,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEwB,MAXR,CAYbX,OAAO,CAAE,CAAAb,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEa,OAAb,GAAwB,EAZpB,CAabG,IAAI,CAAE,CAAAhB,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEgB,IAAb,GAAqB,EAbd,CAFQ,CAiBvBS,gBAAgB,CAAEtB,aAjBK,CAkBvBuB,QAAQ,kFAAE,iBAAOC,MAAP,8JAAiBC,aAAjB,OAAiBA,aAAjB,CAAgCC,SAAhC,OAAgCA,SAAhC,CAA2CC,SAA3C,OAA2CA,SAA3C,uCAEA,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU,GAAV,CAAvB,EAAZ,CAFA,QAGNH,SAAS,GACTD,aAAa,CAAC,KAAD,CAAb,CACA1B,eAAe,CAAC,CAACH,MAAD,CAAU,gBAAV,CAA6B,gBAA9B,CAAgD,CAAEmC,OAAO,CAAE,SAAX,CAAhD,CAAf,CACAjC,QAAQ,CAACP,cAAc,CAACyC,IAAf,CAAoBC,IAArB,CAAR,CANM,iFAQNC,OAAO,CAACC,KAAR,cACAV,aAAa,CAAC,KAAD,CAAb,CACAE,SAAS,aAAT,CAVM,qEAAF,wFAlBe,CAAD,CAAxB,CAiCA,GAAQS,CAAAA,MAAR,CAA8FpB,MAA9F,CAAQoB,MAAR,CAAgBZ,MAAhB,CAA8FR,MAA9F,CAAgBQ,MAAhB,CAAwBa,OAAxB,CAA8FrB,MAA9F,CAAwBqB,OAAxB,CAAiCC,YAAjC,CAA8FtB,MAA9F,CAAiCsB,YAAjC,CAA+CC,YAA/C,CAA8FvB,MAA9F,CAA+CuB,YAA/C,CAA6DC,aAA7D,CAA8FxB,MAA9F,CAA6DwB,aAA7D,CAA4EC,aAA5E,CAA8FzB,MAA9F,CAA4EyB,aAA5E,CAEA,GAAMC,CAAAA,UAAU,CAAGpE,WAAW,CAC5B,SAACqE,aAAD,CAAmB,CACjB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAAC,CAAD,CAA1B,CACA,GAAIC,IAAJ,CAAU,CACRJ,aAAa,CAAC,WAAD,gCACRI,IADQ,MAEXC,OAAO,CAAEC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAFE,GAAb,CAID,CACF,CAT2B,CAU5B,CAACJ,aAAD,CAV4B,CAA9B,CAaA,mBACE,KAAC,cAAD,EAAgB,KAAK,CAAExB,MAAvB,uBACE,KAAC,IAAD,EAAM,UAAU,KAAhB,CAAiB,YAAY,CAAC,KAA9B,CAAoC,QAAQ,CAAEsB,YAA9C,uBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACE,MAAC,IAAD,EAAM,EAAE,CAAE,CAAEU,EAAE,CAAE,EAAN,CAAUC,EAAE,CAAE,CAAd,CAAV,WACGrD,MAAM,eACL,KAAC,KAAD,EACE,KAAK,CAAE4B,MAAM,CAACH,MAAP,GAAkB,QAAlB,CAA6B,OAA7B,CAAuC,SADhD,CAEE,EAAE,CAAE,CAAE6B,aAAa,CAAE,WAAjB,CAA8BC,QAAQ,CAAE,UAAxC,CAAoDC,GAAG,CAAE,EAAzD,CAA6DC,KAAK,CAAE,EAApE,CAFN,UAIG7B,MAAM,CAACH,MAJV,EAFJ,cAUE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEiC,EAAE,CAAE,CAAN,CAAT,wBACE,KAAC,YAAD,EACE,MAAM,CAAC,SADT,CAEE,IAAI,CAAE9B,MAAM,CAACV,SAFf,CAGE,OAAO,CAAE,OAHX,CAIE,MAAM,CAAE4B,UAJV,CAKE,KAAK,CAAEa,OAAO,CAAClB,OAAO,CAACvB,SAAR,EAAqBsB,MAAM,CAACtB,SAA7B,CALhB,CAME,OAAO,cACL,MAAC,UAAD,EACE,OAAO,CAAC,SADV,CAEE,EAAE,CAAE,CACF0C,EAAE,CAAE,CADF,CAEFC,EAAE,CAAE,MAFF,CAGFC,OAAO,CAAE,OAHP,CAIFC,SAAS,CAAE,QAJT,CAKFC,KAAK,CAAE,gBALL,CAFN,8DAWE,aAXF,iBAWsBtE,KAAK,CAAC,OAAD,CAX3B,GAPJ,EADF,cAuBE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,EAAE,CAAE,CAAE2D,EAAE,CAAE,CAAN,CAASU,SAAS,CAAE,QAApB,CAA1B,UACGtB,OAAO,CAACvB,SAAR,EAAqBsB,MAAM,CAACtB,SAD/B,EAvBF,GAVF,CAsCGlB,MAAM,eACL,KAAC,gBAAD,EACE,cAAc,CAAC,OADjB,CAEE,OAAO,cACL,KAAC,MAAD,EACE,QAAQ,CAAE,kBAACiE,KAAD,QAAWrB,CAAAA,aAAa,CAAC,QAAD,CAAWqB,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAuB,QAAvB,CAAkC,QAA7C,CAAxB,EADZ,CAEE,OAAO,CAAEvC,MAAM,CAACH,MAAP,GAAkB,QAF7B,EAHJ,CAQE,KAAK,cACH,wCACE,KAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,EAAE,CAAE,CAAEiC,EAAE,CAAE,GAAN,CAApC,oBADF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,EAAE,CAAE,CAAEM,KAAK,CAAE,gBAAT,CAAhC,mCAJF,GATJ,CAkBE,EAAE,CAAE,CAAEH,EAAE,CAAE,CAAN,CAASH,EAAE,CAAE,CAAb,CAAgBU,KAAK,CAAE,CAAvB,CAA0BC,cAAc,CAAE,eAA1C,CAlBN,EAvCJ,cA6DE,KAAC,gBAAD,EACE,cAAc,CAAC,OADjB,CAEE,OAAO,cAAE,KAAC,MAAD,gCAAYxB,aAAa,CAAC,YAAD,CAAzB,MAAyC,OAAO,CAAEjB,MAAM,CAACJ,UAAzD,GAFX,CAGE,KAAK,cACH,wCACE,KAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,EAAE,CAAE,CAAEkC,EAAE,CAAE,GAAN,CAApC,4BADF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,EAAE,CAAE,CAAEM,KAAK,CAAE,gBAAT,CAAhC,kFAJF,GAJJ,CAaE,EAAE,CAAE,CAAEH,EAAE,CAAE,CAAN,CAASO,KAAK,CAAE,CAAhB,CAAmBC,cAAc,CAAE,eAAnC,CAbN,EA7DF,GADF,EADF,cAiFE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAV,uBACE,MAAC,KAAD,EAAO,OAAO,CAAE,CAAhB,wBACE,MAAC,KAAD,EAAO,SAAS,CAAE,CAAEC,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,wBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,WAFR,EAGM3B,aAAa,CAAC,MAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAClC,IAAR,EAAgBiC,MAAM,CAACjC,IAAxB,CAJhB,CAKE,UAAU,CAAEkC,OAAO,CAAClC,IAAR,EAAgBiC,MAAM,CAACjC,IALrC,GADF,cAQE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,eAFR,EAGMsC,aAAa,CAAC,OAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAC/B,KAAR,EAAiB8B,MAAM,CAAC9B,KAAzB,CAJhB,CAKE,UAAU,CAAE+B,OAAO,CAAC/B,KAAR,EAAiB8B,MAAM,CAAC9B,KALtC,GARF,GADF,cAkBE,MAAC,KAAD,EAAO,SAAS,CAAE,CAAE6D,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,wBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,cAFR,EAGM3B,aAAa,CAAC,aAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAC9B,WAAR,EAAuB6B,MAAM,CAAC7B,WAA/B,CAJhB,CAKE,UAAU,CAAE8B,OAAO,CAAC9B,WAAR,EAAuB6B,MAAM,CAAC7B,WAL5C,GADF,cAQE,MAAC,SAAD,8BACE,MAAM,KADR,CAEE,SAAS,KAFX,CAGE,KAAK,CAAC,SAHR,CAIE,WAAW,CAAC,SAJd,EAKMkC,aAAa,CAAC,SAAD,CALnB,MAME,WAAW,CAAE,CAAE4B,MAAM,CAAE,IAAV,CANf,CAOE,KAAK,CAAEd,OAAO,CAAClB,OAAO,CAAC5B,OAAR,EAAmB2B,MAAM,CAAC3B,OAA3B,CAPhB,CAQE,UAAU,CAAE4B,OAAO,CAAC5B,OAAR,EAAmB2B,MAAM,CAAC3B,OARxC,wBAUE,eAAQ,KAAK,CAAC,EAAd,EAVF,CAWGjB,SAAS,CAAC8E,GAAV,CAAc,SAACC,MAAD,qBACb,eAA0B,KAAK,CAAEA,MAAM,CAACC,KAAxC,UACGD,MAAM,CAACC,KADV,EAAaD,MAAM,CAACE,IAApB,CADa,EAAd,CAXH,IARF,GAlBF,cA6CE,MAAC,KAAD,EAAO,SAAS,CAAE,CAAEN,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,wBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,cAFR,EAGM3B,aAAa,CAAC,OAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAC1B,KAAR,EAAiByB,MAAM,CAACzB,KAAzB,CAJhB,CAKE,UAAU,CAAE0B,OAAO,CAAC1B,KAAR,EAAiByB,MAAM,CAACzB,KALtC,GADF,cAQE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,MAFR,EAGM8B,aAAa,CAAC,MAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAACzB,IAAR,EAAgBwB,MAAM,CAACxB,IAAxB,CAJhB,CAKE,UAAU,CAAEyB,OAAO,CAACzB,IAAR,EAAgBwB,MAAM,CAACxB,IALrC,GARF,GA7CF,cA8DE,MAAC,KAAD,EAAO,SAAS,CAAE,CAAEuD,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,wBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,EAGM3B,aAAa,CAAC,SAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAC7B,OAAR,EAAmB4B,MAAM,CAAC5B,OAA3B,CAJhB,CAKE,UAAU,CAAE6B,OAAO,CAAC7B,OAAR,EAAmB4B,MAAM,CAAC5B,OALxC,GADF,cAQE,KAAC,SAAD,gBAAW,SAAS,KAApB,CAAqB,KAAK,CAAC,UAA3B,EAA0CiC,aAAa,CAAC,SAAD,CAAvD,EARF,GA9DF,cAyEE,MAAC,KAAD,EAAO,SAAS,CAAE,CAAE0B,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,wBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,EAGM3B,aAAa,CAAC,SAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAAC3B,OAAR,EAAmB0B,MAAM,CAAC1B,OAA3B,CAJhB,CAKE,UAAU,CAAE2B,OAAO,CAAC3B,OAAR,EAAmB0B,MAAM,CAAC1B,OALxC,GADF,cAQE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,MAFR,EAGM+B,aAAa,CAAC,MAAD,CAHnB,MAIE,KAAK,CAAEc,OAAO,CAAClB,OAAO,CAACxB,IAAR,EAAgBuB,MAAM,CAACvB,IAAxB,CAJhB,CAKE,UAAU,CAAEwB,OAAO,CAACxB,IAAR,EAAgBuB,MAAM,CAACvB,IALrC,GARF,GAzEF,cA0FE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAE2C,EAAE,CAAE,CAAN,CAASE,OAAO,CAAE,MAAlB,CAA0BO,cAAc,CAAE,UAA1C,CAAT,uBACE,KAAC,aAAD,EAAe,IAAI,CAAC,QAApB,CAA6B,OAAO,CAAC,WAArC,CAAiD,OAAO,CAAE1B,YAA1D,UACG,CAAC3C,MAAD,CAAU,aAAV,CAA0B,cAD7B,EADF,EA1FF,GADF,EADF,EAjFF,GADF,EADF,EADF,CA4LD","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// _mock\nimport { countries } from '../../../_mock';\n// components\nimport Label from '../../../components/Label';\nimport { UploadAvatar } from '../../../components/upload';\n\n// ----------------------------------------------------------------------\n\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object,\n};\n\nexport default function UserNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    country: Yup.string().required('country is required'),\n    company: Yup.string().required('Company is required'),\n    state: Yup.string().required('State is required'),\n    city: Yup.string().required('City is required'),\n    role: Yup.string().required('Role Number is required'),\n    avatarUrl: Yup.mixed().required('Avatar is required'),\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || null,\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      company: currentUser?.company || '',\n      role: currentUser?.role || '',\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              {isEdit && (\n                <Label\n                  color={values.status !== 'active' ? 'error' : 'success'}\n                  sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n                >\n                  {values.status}\n                </Label>\n              )}\n\n              <Box sx={{ mb: 5 }}>\n                <UploadAvatar\n                  accept=\"image/*\"\n                  file={values.avatarUrl}\n                  maxSize={3145728}\n                  onDrop={handleDrop}\n                  error={Boolean(touched.avatarUrl && errors.avatarUrl)}\n                  caption={\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        mt: 2,\n                        mx: 'auto',\n                        display: 'block',\n                        textAlign: 'center',\n                        color: 'text.secondary',\n                      }}\n                    >\n                      Allowed *.jpeg, *.jpg, *.png, *.gif\n                      <br /> max size of {fData(3145728)}\n                    </Typography>\n                  }\n                />\n                <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                  {touched.avatarUrl && errors.avatarUrl}\n                </FormHelperText>\n              </Box>\n\n              {isEdit && (\n                <FormControlLabel\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\n                      checked={values.status !== 'active'}\n                    />\n                  }\n                  label={\n                    <>\n                      <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                        Banned\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                        Apply disable account\n                      </Typography>\n                    </>\n                  }\n                  sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n                />\n              )}\n\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={<Switch {...getFieldProps('isVerified')} checked={values.isVerified} />}\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Email Verified\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Disabling this will automatically send the user a verification email\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Full Name\"\n                    {...getFieldProps('name')}\n                    error={Boolean(touched.name && errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Email Address\"\n                    {...getFieldProps('email')}\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Phone Number\"\n                    {...getFieldProps('phoneNumber')}\n                    error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                    helperText={touched.phoneNumber && errors.phoneNumber}\n                  />\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Country\"\n                    placeholder=\"Country\"\n                    {...getFieldProps('country')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.country && errors.country)}\n                    helperText={touched.country && errors.country}\n                  >\n                    <option value=\"\" />\n                    {countries.map((option) => (\n                      <option key={option.code} value={option.label}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"State/Region\"\n                    {...getFieldProps('state')}\n                    error={Boolean(touched.state && errors.state)}\n                    helperText={touched.state && errors.state}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"City\"\n                    {...getFieldProps('city')}\n                    error={Boolean(touched.city && errors.city)}\n                    helperText={touched.city && errors.city}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Address\"\n                    {...getFieldProps('address')}\n                    error={Boolean(touched.address && errors.address)}\n                    helperText={touched.address && errors.address}\n                  />\n                  <TextField fullWidth label=\"Zip/Code\" {...getFieldProps('zipCode')} />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Company\"\n                    {...getFieldProps('company')}\n                    error={Boolean(touched.company && errors.company)}\n                    helperText={touched.company && errors.company}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Role\"\n                    {...getFieldProps('role')}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Create User' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}