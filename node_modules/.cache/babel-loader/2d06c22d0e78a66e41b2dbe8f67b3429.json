{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\change-theme\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react'; // components\n\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../../components/map'; //\n\nimport ControlPanel from './ControlPanel'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMapChangeTheme.propTypes = {\n  themes: PropTypes.object\n};\nexport default function MapChangeTheme(_ref) {\n  _s();\n\n  let {\n    themes,\n    ...other\n  } = _ref;\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n  const handleChangeTheme = useCallback(event => setSelectTheme(event.target.value), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      onViewportChange: setViewport,\n      mapStyle: themes[selectTheme],\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      themes: themes,\n      selectTheme: selectTheme,\n      onChangeTheme: handleChangeTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MapChangeTheme, \"OjS0V7NeFn+MzR6/aneg53/uWhY=\");\n\n_c = MapChangeTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChangeTheme\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/change-theme/index.js"],"names":["PropTypes","ReactMapGL","useState","useCallback","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","MapChangeTheme","propTypes","themes","object","other","selectTheme","setSelectTheme","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","handleChangeTheme","event","target","value"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC,C,CACA;;AACA,SACEC,eADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,yBALP,C,CAMA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,MAAM,EAAEX,SAAS,CAACY;AADO,CAA3B;AAIA,eAAe,SAASH,cAAT,OAA8C;AAAA;;AAAA,MAAtB;AAAEE,IAAAA,MAAF;AAAU,OAAGE;AAAb,GAAsB;AAC3D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,UAAD,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,QAAQ,EAAE,SAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,GAF2B;AAGvCC,IAAAA,IAAI,EAAE,GAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,QAAMC,iBAAiB,GAAGpB,WAAW,CAAEqB,KAAD,IAAWT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA1B,EAAgD,EAAhD,CAArC;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD,OAAgBV,QAAhB;AAA0B,MAAA,gBAAgB,EAAEC,WAA5C;AAAyD,MAAA,QAAQ,EAAEN,MAAM,CAACG,WAAD,CAAzE;AAAA,SAA4FD,KAA5F;AAAA,8BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEF,MAAtB;AAA8B,MAAA,WAAW,EAAEG,WAA3C;AAAwD,MAAA,aAAa,EAAES;AAAvE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;GAxBuBd,c;;KAAAA,c","sourcesContent":["import PropTypes from 'prop-types';\nimport ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nMapChangeTheme.propTypes = {\n  themes: PropTypes.object,\n};\n\nexport default function MapChangeTheme({ themes, ...other }) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const handleChangeTheme = useCallback((event) => setSelectTheme(event.target.value), []);\n\n  return (\n    <>\n      <ReactMapGL {...viewport} onViewportChange={setViewport} mapStyle={themes[selectTheme]} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </ReactMapGL>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}