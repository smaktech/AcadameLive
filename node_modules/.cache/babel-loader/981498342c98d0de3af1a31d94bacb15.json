{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\subTopic\\\\SubTopicAddEdit.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { baseUrl, modalStyle } from 'src/config';\nimport { useParams } from 'react-router-dom';\nimport { createSubTopic, editSubTopic, getSubTopicById } from 'src/api/SubTopic/SubTopic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditSubTopic(props) {\n  _s();\n\n  // const subTopicID = props.match.params.subTopicId;\n  // const subTopicStatus = props.match.params.subTopicStatus;\n  const {\n    subTopicID,\n    subTopicStatus,\n    topicID\n  } = useParams(); // console.log(props)\n  // const subjectStatus = props.match.params.subjectStatus;\n\n  const [mode, setMode] = useState(subTopicID ? \"edit\" : \"add\"); //setting subjects data into a variable\n\n  const [subTopic, setSubTopic] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add subject Button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject Button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject Button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the subTopic user want to add\n\n  const [subTopicName, setSubTopicName] = useState(); //sets subTopic description user want to add\n\n  const [subTopicDescription, setSubTopicDescription] = useState(); //sets mock test link user want to add\n\n  const [mockTestLink, setMockTestLink] = useState(); //sets exma test link user want to add\n\n  const [examTestLink, setExamTestLink] = useState(); //sets link type user want to add\n\n  const [linkType, setLinkType] = useState(); //sets vide link user want to add\n\n  const [linkString, setLinkString] = useState(); //sets subTopic video user want to add\n\n  const [subTopicVideo, setSubTopicVideo] = useState(); //sets subTopic video user want to add\n\n  const [subTopicPpt, setSubTopicPpt] = useState(); //sets subTopic video user want to add\n\n  const [subTopicZip, setSubTopicZip] = useState();\n  const [examID, setExamID] = useState();\n  const [examLink, setExamLink] = useState(); //sets subTopic video user want to add\n\n  const [videoPreview, setVideoPreview] = useState(null); //referance variable for video file choose\n\n  let chooseTopicVideoRef = useRef(); // sets varialbe for video status\n\n  const [videoStatus, setVideoStatus] = useState(false); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false); //updating mode state on change of subject id\n  // useEffect(() => {\n  // }, [subTopicID])\n\n  useEffect(() => {\n    setMode(subTopicID ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getSubTopicById(subTopicID).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        var _res$exam, _res$exam2;\n\n        //setting the fetched Topics by id into state variable\n        console.log(res);\n        setSubTopic(res.subTopic);\n        setSubTopicName(res.subTopic.name);\n        setSubTopicDescription(res.subTopic.description);\n        setExamID(res === null || res === void 0 ? void 0 : (_res$exam = res.exam) === null || _res$exam === void 0 ? void 0 : _res$exam._id);\n        setExamLink(res === null || res === void 0 ? void 0 : (_res$exam2 = res.exam) === null || _res$exam2 === void 0 ? void 0 : _res$exam2.link); // setMockTestLink(res.subTopic.mockTestLink)\n        // setExamTestLink(res.subTopic.examTestLink)\n        // setLinkType(res.subTopic.videoLink.linkType)\n        // setVideoStatus(res.subTopic.videoLink.linkType)\n        // setLinkString(res.subTopic.videoLink.linkString)\n        // setSubTopicPpt()\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [subTopicID]); //edit the details  of the existing subTopic\n\n  function editTopicDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (subTopicID != '') {\n      editSubTopic(subTopicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, examID, subTopicStatus).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Topic details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill all the subTopic details');\n    }\n  } //adds new subTopic \n\n\n  function addNewTopic() {\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false);\n\n    if (subTopicName && subTopicDescription) {\n      createSubTopic(topicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, 'active').then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setAddLoader(false);\n          setModalLine1('New Sub Topic Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the Topic details');\n    }\n  } // on change video handler\n\n\n  const onChangePptHandler = e => {\n    // setVideoPreview(url)\n    setSubTopicPpt(e.target.files[0]);\n  };\n\n  const onChangeZipHandler = e => {\n    // setVideoPreview(url)\n    setSubTopicZip(e.target.files[0]);\n  }; // function to reset\n\n\n  const reSetForm = () => {\n    setSubTopicName(\"\");\n    setSubTopicDescription(\"\");\n    setMockTestLink(\"\");\n    setExamTestLink(\"\");\n    setLinkType(\"\");\n    setSubTopicVideo(\"\");\n    setSubTopicPpt(\"\");\n    setSubTopicZip(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Sub Topics Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"pageHeaderCard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-6 col-sm-6 col-12\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Sub Topic Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: subTopicName,\n                      type: \"text\",\n                      placeholder: \"Enter Sub Topic Name\",\n                      onChange: e => setSubTopicName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Sub Topic Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: subTopicDescription,\n                      placeholder: \"Enter Sub Topic Description\",\n                      as: \"textarea\",\n                      rows: 3,\n                      onChange: e => setSubTopicDescription(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: [\"Sub Topic Ppt File  \", /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: baseUrl + \"/\" + subTopic.file,\n                        style: {\n                          marginLeft: 10\n                        },\n                        target: \"_blank\",\n                        children: \"View File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 81\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      ref: ref => chooseTopicVideoRef = ref,\n                      type: \"file\",\n                      placeholder: \"choose Sub Topic PPT\",\n                      onChange: e => onChangePptHandler(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: [\"Sub Topic Exam Zip \", /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: baseUrl + \"/\" + examLink,\n                        style: {\n                          marginLeft: 10\n                        },\n                        target: \"_blank\",\n                        children: \"View Exam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 80\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"file\",\n                      placeholder: \"choose Sub Topic Exam Zip\",\n                      onChange: e => onChangeZipHandler(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate('/dashboard/subTopics/addSubTopic/' + topicID),\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-3 col-12 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  editTopicDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => addNewTopic(),\n              children: \"Add Sub Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => {\n        setModalVisible(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm(), navigate('/dashboard/subTopics/addSubTopic/' + topicID))\n                }, void 0, false);\n              },\n              children: \"Add New Sub Topic \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/topics/subTopic/' + topicID),\n              children: \"Back To Sub Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditSubTopic, \"BQd8EDt+gxvxXJWJ7ZT6dK/p6eY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditSubTopic;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditSubTopic\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/subTopic/SubTopicAddEdit.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","createTopic","editTopic","getTopicById","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","baseUrl","modalStyle","useParams","createSubTopic","editSubTopic","getSubTopicById","AddEditSubTopic","props","subTopicID","subTopicStatus","topicID","mode","setMode","subTopic","setSubTopic","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","subTopicName","setSubTopicName","subTopicDescription","setSubTopicDescription","mockTestLink","setMockTestLink","examTestLink","setExamTestLink","linkType","setLinkType","linkString","setLinkString","subTopicVideo","setSubTopicVideo","subTopicPpt","setSubTopicPpt","subTopicZip","setSubTopicZip","examID","setExamID","examLink","setExamLink","videoPreview","setVideoPreview","chooseTopicVideoRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","then","res","console","log","status","name","description","exam","_id","link","catch","err","editTopicDetails","addNewTopic","onChangePptHandler","e","target","files","onChangeZipHandler","reSetForm","display","height","justifyContent","alignItems","margin","value","file","marginLeft","ref","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { baseUrl, modalStyle } from 'src/config'\nimport { useParams } from 'react-router-dom'\nimport { createSubTopic, editSubTopic, getSubTopicById } from 'src/api/SubTopic/SubTopic'\nexport default function AddEditSubTopic(props) {\n    // const subTopicID = props.match.params.subTopicId;\n    // const subTopicStatus = props.match.params.subTopicStatus;\n    const { subTopicID, subTopicStatus, topicID } = useParams()\n    // console.log(props)\n    // const subjectStatus = props.match.params.subjectStatus;\n    const [mode, setMode] = useState(subTopicID ? \"edit\" : \"add\")\n\n    //setting subjects data into a variable\n    const [subTopic, setSubTopic] = useState({});\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add subject Button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject Button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the subTopic user want to add\n    const [subTopicName, setSubTopicName] = useState();\n\n    //sets subTopic description user want to add\n    const [subTopicDescription, setSubTopicDescription] = useState()\n\n    //sets mock test link user want to add\n    const [mockTestLink, setMockTestLink] = useState()\n\n    //sets exma test link user want to add\n    const [examTestLink, setExamTestLink] = useState()\n\n    //sets link type user want to add\n    const [linkType, setLinkType] = useState()\n\n    //sets vide link user want to add\n    const [linkString, setLinkString] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicVideo, setSubTopicVideo] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicPpt, setSubTopicPpt] = useState()\n\n    //sets subTopic video user want to add\n    const [subTopicZip, setSubTopicZip] = useState()\n    const [examID, setExamID] = useState()\n    const [examLink, setExamLink] = useState()\n    //sets subTopic video user want to add\n    const [videoPreview, setVideoPreview] = useState(null);\n\n    //referance variable for video file choose\n    let chooseTopicVideoRef = useRef()\n\n    // sets varialbe for video status\n    const [videoStatus, setVideoStatus] = useState(false)\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    //updating mode state on change of subject id\n    // useEffect(() => {\n    // }, [subTopicID])\n\n    useEffect(() => {\n\n        setMode(subTopicID ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getSubTopicById(subTopicID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Topics by id into state variable\n                console.log(res)\n                setSubTopic(res.subTopic);\n                setSubTopicName(res.subTopic.name)\n                setSubTopicDescription(res.subTopic.description)\n                setExamID(res?.exam?._id)\n                setExamLink(res?.exam?.link)\n                // setMockTestLink(res.subTopic.mockTestLink)\n                // setExamTestLink(res.subTopic.examTestLink)\n                // setLinkType(res.subTopic.videoLink.linkType)\n                // setVideoStatus(res.subTopic.videoLink.linkType)\n                // setLinkString(res.subTopic.videoLink.linkString)\n                // setSubTopicPpt()\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [subTopicID])\n\n    //edit the details  of the existing subTopic\n    function editTopicDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (subTopicID != '') {\n            editSubTopic(subTopicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, examID, subTopicStatus)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Topic details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill all the subTopic details');\n        }\n\n    }\n\n    //adds new subTopic \n    function addNewTopic() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (subTopicName && subTopicDescription) {\n            createSubTopic(topicID, subTopicName, subTopicDescription, subTopicZip, subTopicPpt, 'active')\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Sub Topic Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Topic details');\n        }\n    }\n\n    // on change video handler\n    const onChangePptHandler = (e) => {\n\n        // setVideoPreview(url)\n        setSubTopicPpt(e.target.files[0])\n    }\n    const onChangeZipHandler = (e) => {\n\n        // setVideoPreview(url)\n        setSubTopicZip(e.target.files[0])\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setSubTopicName(\"\")\n        setSubTopicDescription(\"\")\n        setMockTestLink(\"\")\n        setExamTestLink(\"\")\n        setLinkType(\"\")\n        setSubTopicVideo(\"\")\n        setSubTopicPpt(\"\")\n        setSubTopicZip(\"\")\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Sub Topics Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n\n                                        <Form>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Sub Topic Name</Form.Label>\n                                                <Form.Control value={subTopicName} type=\"text\" placeholder=\"Enter Sub Topic Name\" onChange={(e) => setSubTopicName(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Description</Form.Label>\n                                                <Form.Control value={subTopicDescription} placeholder=\"Enter Sub Topic Description\" as=\"textarea\" rows={3} onChange={(e) => setSubTopicDescription(e.target.value)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Ppt File  <a href={baseUrl + \"/\" + subTopic.file} style={{ marginLeft: 10 }} target=\"_blank\">View File</a> </Form.Label>\n                                                <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Sub Topic PPT\" onChange={(e) => onChangePptHandler(e)} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Sub Topic Exam Zip <a href={baseUrl + \"/\" + examLink} style={{ marginLeft: 10 }} target=\"_blank\">View Exam</a> </Form.Label>\n\n                                                <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => onChangeZipHandler(e)} />\n                                            </Form.Group>\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Mock Test Link </Form.Label>\n                                                <Form.Control value={mockTestLink} type=\"text\" placeholder=\"Enter Mock Test Link\" onChange={(e) => setMockTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Exam Test Link</Form.Label>\n                                                <Form.Control value={examTestLink} type=\"text\" placeholder=\"Enter Exam Test Link\" onChange={(e) => setExamTestLink(e.target.value)} />\n                                            </Form.Group> */}\n                                            {/* <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Link Type</Form.Label>\n                                                <Form.Select value={linkType} onChange={(e) => setLinkType(e.target.value)} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    <option value='upload'>Upload</option>\n                                                    <option value='link'>Link</option>\n                                                    <option value='iframe'>iFrame</option>\n                                                </Form.Select>\n                                            </Form.Group> */}\n                                            {/* {linkType != 'upload' ? (\n                                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>Topic Video Link </Form.Label>\n                                                    <Form.Control value={linkString} required type=\"text\" placeholder=\"Enter Topic Video Link\" onChange={(e) => setLinkString(e.target.value)} />\n                                                </Form.Group>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Topic Video</Form.Label>\n                                                        {mode == 'edit' ? (\n                                                            videoStatus == \"upload\" ? (\n                                                                <div className=\"col-6 col-lg-6 d-flex\">\n                                                                    <img src=\"/Assets/vector.jpg\" className=\"btn w-50 h-100\" />\n                                                                    <div>\n                                                                        <Button   variant=\"text\" type='Button' className='text-danger btn fs-1' onClick={() => setVideoStatus(null)}>&times;</Button>\n                                                                    </div>\n                                                                </div>\n                                                            ) : (\n                                                                <>\n                                                                    <div className=\"col-6 col-lg-6\">\n                                                                        <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                    </div>\n                                                                    <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangePptHandler(e)} style={{ visibility: 'hidden' }} />\n                                                                </>\n                                                            )\n\n                                                        ) : (\n\n                                                            <>\n                                                                <div className=\"col-6 col-lg-6\">\n                                                                    <img src={videoPreview ? \"/Assets/vector.jpg\" : \"/Assets/vector (1).jpg\"} className=\"btn w-50 h-100\" type='Button' onClick={() => chooseTopicVideoRef.click()} />\n                                                                </div>\n                                                                <Form.Control ref={ref => chooseTopicVideoRef = ref} type=\"file\" placeholder=\"choose Topic video\" onChange={(e) => onChangePptHandler(e)} style={{ visibility: 'hidden' }} />\n                                                            </>\n                                                        )}\n                                                    </Form.Group>\n                                                </>\n                                            )} */}\n                                        </Form>\n\n\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {/* <Button variant=\"outlined\"  onClick={() => history.goBack()}>Cancel</Button> */}\n                                        <Button onClick={() => navigate('/dashboard/subTopics/addSubTopic/' + topicID)} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-3 col-12 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\"  >\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editTopicDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\"  >\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\"\n                                            onClick={() => addNewTopic()}\n                                        >Add Sub Topic</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => { setModalVisible(false) }}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/subTopics/addSubTopic/' + topicID)}</>) }}\n                            >Add New Sub Topic </Button>\n\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/topics/subTopic/' + topicID)}\n                            >Back To Sub Topics</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}