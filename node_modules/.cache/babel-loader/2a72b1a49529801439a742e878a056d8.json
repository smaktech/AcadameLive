{"ast":null,"code":"var _toConsumableArray = require(\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\n/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  var regex = hljs.regex; // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n\n  var C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [{\n      begin: /\\\\\\n/\n    }]\n  });\n  var DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  var NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  var TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  var FUNCTION_TYPE_RE = '(?!struct)(' + DECLTYPE_AUTO_RE + '|' + regex.optional(NAMESPACE_RE) + '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE) + ')';\n  var CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  }; // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n\n  var CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  var STRINGS = {\n    className: 'string',\n    variants: [{\n      begin: '(u8?|U|L)?\"',\n      end: '\"',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n      end: '\\'',\n      illegal: '.'\n    }, hljs.END_SAME_AS_BEGIN({\n      begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n      end: /\\)([^()\\\\ ]{0,16})\"/\n    })]\n  };\n  var NUMBERS = {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b(0b[01\\']+)'\n    }, {\n      begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n    }, {\n      begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n    }],\n    relevance: 0\n  };\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword: 'if else elif endif define undef warning error line ' + 'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [{\n      begin: /\\\\\\n/,\n      relevance: 0\n    }, hljs.inherit(STRINGS, {\n      className: 'string'\n    }), {\n      className: 'string',\n      begin: /<.*?>/\n    }, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n  var TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n  var FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\('; // https://en.cppreference.com/w/cpp/keyword\n\n  var RESERVED_KEYWORDS = ['alignas', 'alignof', 'and', 'and_eq', 'asm', 'atomic_cancel', 'atomic_commit', 'atomic_noexcept', 'auto', 'bitand', 'bitor', 'break', 'case', 'catch', 'class', 'co_await', 'co_return', 'co_yield', 'compl', 'concept', 'const_cast|10', 'consteval', 'constexpr', 'constinit', 'continue', 'decltype', 'default', 'delete', 'do', 'dynamic_cast|10', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'final', 'for', 'friend', 'goto', 'if', 'import', 'inline', 'module', 'mutable', 'namespace', 'new', 'noexcept', 'not', 'not_eq', 'nullptr', 'operator', 'or', 'or_eq', 'override', 'private', 'protected', 'public', 'reflexpr', 'register', 'reinterpret_cast|10', 'requires', 'return', 'sizeof', 'static_assert', 'static_cast|10', 'struct', 'switch', 'synchronized', 'template', 'this', 'thread_local', 'throw', 'transaction_safe', 'transaction_safe_dynamic', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'using', 'virtual', 'volatile', 'while', 'xor', 'xor_eq']; // https://en.cppreference.com/w/cpp/keyword\n\n  var RESERVED_TYPES = ['bool', 'char', 'char16_t', 'char32_t', 'char8_t', 'double', 'float', 'int', 'long', 'short', 'void', 'wchar_t', 'unsigned', 'signed', 'const', 'static'];\n  var TYPE_HINTS = ['any', 'auto_ptr', 'barrier', 'binary_semaphore', 'bitset', 'complex', 'condition_variable', 'condition_variable_any', 'counting_semaphore', 'deque', 'false_type', 'future', 'imaginary', 'initializer_list', 'istringstream', 'jthread', 'latch', 'lock_guard', 'multimap', 'multiset', 'mutex', 'optional', 'ostringstream', 'packaged_task', 'pair', 'promise', 'priority_queue', 'queue', 'recursive_mutex', 'recursive_timed_mutex', 'scoped_lock', 'set', 'shared_future', 'shared_lock', 'shared_mutex', 'shared_timed_mutex', 'shared_ptr', 'stack', 'string_view', 'stringstream', 'timed_mutex', 'thread', 'true_type', 'tuple', 'unique_lock', 'unique_ptr', 'unordered_map', 'unordered_multimap', 'unordered_multiset', 'unordered_set', 'variant', 'vector', 'weak_ptr', 'wstring', 'wstring_view'];\n  var FUNCTION_HINTS = ['abort', 'abs', 'acos', 'apply', 'as_const', 'asin', 'atan', 'atan2', 'calloc', 'ceil', 'cerr', 'cin', 'clog', 'cos', 'cosh', 'cout', 'declval', 'endl', 'exchange', 'exit', 'exp', 'fabs', 'floor', 'fmod', 'forward', 'fprintf', 'fputs', 'free', 'frexp', 'fscanf', 'future', 'invoke', 'isalnum', 'isalpha', 'iscntrl', 'isdigit', 'isgraph', 'islower', 'isprint', 'ispunct', 'isspace', 'isupper', 'isxdigit', 'labs', 'launder', 'ldexp', 'log', 'log10', 'make_pair', 'make_shared', 'make_shared_for_overwrite', 'make_tuple', 'make_unique', 'malloc', 'memchr', 'memcmp', 'memcpy', 'memset', 'modf', 'move', 'pow', 'printf', 'putchar', 'puts', 'realloc', 'scanf', 'sin', 'sinh', 'snprintf', 'sprintf', 'sqrt', 'sscanf', 'std', 'stderr', 'stdin', 'stdout', 'strcat', 'strchr', 'strcmp', 'strcpy', 'strcspn', 'strlen', 'strncat', 'strncmp', 'strncpy', 'strpbrk', 'strrchr', 'strspn', 'strstr', 'swap', 'tan', 'tanh', 'terminate', 'to_underlying', 'tolower', 'toupper', 'vfprintf', 'visit', 'vprintf', 'vsprintf'];\n  var LITERALS = ['NULL', 'false', 'nullopt', 'nullptr', 'true']; // https://en.cppreference.com/w/cpp/keyword\n\n  var BUILT_IN = ['_Pragma'];\n  var CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n  var FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: regex.concat(/\\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, hljs.IDENT_RE, regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n  var EXPRESSION_CONTAINS = [FUNCTION_DISPATCH, PREPROCESSOR, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBERS, STRINGS];\n  var EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [{\n      begin: /=/,\n      end: /;/\n    }, {\n      begin: /\\(/,\n      end: /\\)/\n    }, {\n      beginKeywords: 'new throw return else',\n      end: /;/\n    }],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      contains: EXPRESSION_CONTAINS.concat(['self']),\n      relevance: 0\n    }]),\n    relevance: 0\n  };\n  var FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [{\n      // to prevent it from being confused as the function title\n      begin: DECLTYPE_AUTO_RE,\n      keywords: CPP_KEYWORDS,\n      relevance: 0\n    }, {\n      begin: FUNCTION_TITLE,\n      returnBegin: true,\n      contains: [TITLE_MODE],\n      relevance: 0\n    }, // needed because we do not have look-behind on the below rule\n    // to prevent it from grabbing the final : in a :: pair\n    {\n      begin: /::/,\n      relevance: 0\n    }, // initializers\n    {\n      begin: /:/,\n      endsWithParent: true,\n      contains: [STRINGS, NUMBERS]\n    }, // allow for multiple declarations, e.g.:\n    // extern void f(int), g(char);\n    {\n      relevance: 0,\n      match: /,/\n    }, {\n      className: 'params',\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: CPP_KEYWORDS,\n      relevance: 0,\n      contains: [C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES, // Count matching parentheses.\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: ['self', C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRINGS, NUMBERS, CPP_PRIMITIVE_TYPES]\n      }]\n    }, CPP_PRIMITIVE_TYPES, C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, PREPROCESSOR]\n  };\n  return {\n    name: 'C++',\n    aliases: ['cc', 'c++', 'h++', 'hpp', 'hh', 'hxx', 'cxx'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(EXPRESSION_CONTEXT, FUNCTION_DECLARATION, FUNCTION_DISPATCH, EXPRESSION_CONTAINS, [PREPROCESSOR, {\n      // containers: ie, `vector <int> rooms (9);`\n      begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<',\n      end: '>',\n      keywords: CPP_KEYWORDS,\n      contains: ['self', CPP_PRIMITIVE_TYPES]\n    }, {\n      begin: hljs.IDENT_RE + '::',\n      keywords: CPP_KEYWORDS\n    }, {\n      match: [// extra complexity to deal with `enum class` and `enum struct`\n      /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/, /\\s+/, /\\w+/],\n      className: {\n        1: 'keyword',\n        3: 'title.class'\n      }\n    }])\n  };\n}\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\n\n\nfunction arduino(hljs) {\n  var ARDUINO_KW = {\n    type: [\"boolean\", \"byte\", \"word\", \"String\"],\n    built_in: [\"KeyboardController\", \"MouseController\", \"SoftwareSerial\", \"EthernetServer\", \"EthernetClient\", \"LiquidCrystal\", \"RobotControl\", \"GSMVoiceCall\", \"EthernetUDP\", \"EsploraTFT\", \"HttpClient\", \"RobotMotor\", \"WiFiClient\", \"GSMScanner\", \"FileSystem\", \"Scheduler\", \"GSMServer\", \"YunClient\", \"YunServer\", \"IPAddress\", \"GSMClient\", \"GSMModem\", \"Keyboard\", \"Ethernet\", \"Console\", \"GSMBand\", \"Esplora\", \"Stepper\", \"Process\", \"WiFiUDP\", \"GSM_SMS\", \"Mailbox\", \"USBHost\", \"Firmata\", \"PImage\", \"Client\", \"Server\", \"GSMPIN\", \"FileIO\", \"Bridge\", \"Serial\", \"EEPROM\", \"Stream\", \"Mouse\", \"Audio\", \"Servo\", \"File\", \"Task\", \"GPRS\", \"WiFi\", \"Wire\", \"TFT\", \"GSM\", \"SPI\", \"SD\"],\n    _hints: [\"setup\", \"loop\", \"runShellCommandAsynchronously\", \"analogWriteResolution\", \"retrieveCallingNumber\", \"printFirmwareVersion\", \"analogReadResolution\", \"sendDigitalPortPair\", \"noListenOnLocalhost\", \"readJoystickButton\", \"setFirmwareVersion\", \"readJoystickSwitch\", \"scrollDisplayRight\", \"getVoiceCallStatus\", \"scrollDisplayLeft\", \"writeMicroseconds\", \"delayMicroseconds\", \"beginTransmission\", \"getSignalStrength\", \"runAsynchronously\", \"getAsynchronously\", \"listenOnLocalhost\", \"getCurrentCarrier\", \"readAccelerometer\", \"messageAvailable\", \"sendDigitalPorts\", \"lineFollowConfig\", \"countryNameWrite\", \"runShellCommand\", \"readStringUntil\", \"rewindDirectory\", \"readTemperature\", \"setClockDivider\", \"readLightSensor\", \"endTransmission\", \"analogReference\", \"detachInterrupt\", \"countryNameRead\", \"attachInterrupt\", \"encryptionType\", \"readBytesUntil\", \"robotNameWrite\", \"readMicrophone\", \"robotNameRead\", \"cityNameWrite\", \"userNameWrite\", \"readJoystickY\", \"readJoystickX\", \"mouseReleased\", \"openNextFile\", \"scanNetworks\", \"noInterrupts\", \"digitalWrite\", \"beginSpeaker\", \"mousePressed\", \"isActionDone\", \"mouseDragged\", \"displayLogos\", \"noAutoscroll\", \"addParameter\", \"remoteNumber\", \"getModifiers\", \"keyboardRead\", \"userNameRead\", \"waitContinue\", \"processInput\", \"parseCommand\", \"printVersion\", \"readNetworks\", \"writeMessage\", \"blinkVersion\", \"cityNameRead\", \"readMessage\", \"setDataMode\", \"parsePacket\", \"isListening\", \"setBitOrder\", \"beginPacket\", \"isDirectory\", \"motorsWrite\", \"drawCompass\", \"digitalRead\", \"clearScreen\", \"serialEvent\", \"rightToLeft\", \"setTextSize\", \"leftToRight\", \"requestFrom\", \"keyReleased\", \"compassRead\", \"analogWrite\", \"interrupts\", \"WiFiServer\", \"disconnect\", \"playMelody\", \"parseFloat\", \"autoscroll\", \"getPINUsed\", \"setPINUsed\", \"setTimeout\", \"sendAnalog\", \"readSlider\", \"analogRead\", \"beginWrite\", \"createChar\", \"motorsStop\", \"keyPressed\", \"tempoWrite\", \"readButton\", \"subnetMask\", \"debugPrint\", \"macAddress\", \"writeGreen\", \"randomSeed\", \"attachGPRS\", \"readString\", \"sendString\", \"remotePort\", \"releaseAll\", \"mouseMoved\", \"background\", \"getXChange\", \"getYChange\", \"answerCall\", \"getResult\", \"voiceCall\", \"endPacket\", \"constrain\", \"getSocket\", \"writeJSON\", \"getButton\", \"available\", \"connected\", \"findUntil\", \"readBytes\", \"exitValue\", \"readGreen\", \"writeBlue\", \"startLoop\", \"IPAddress\", \"isPressed\", \"sendSysex\", \"pauseMode\", \"gatewayIP\", \"setCursor\", \"getOemKey\", \"tuneWrite\", \"noDisplay\", \"loadImage\", \"switchPIN\", \"onRequest\", \"onReceive\", \"changePIN\", \"playFile\", \"noBuffer\", \"parseInt\", \"overflow\", \"checkPIN\", \"knobRead\", \"beginTFT\", \"bitClear\", \"updateIR\", \"bitWrite\", \"position\", \"writeRGB\", \"highByte\", \"writeRed\", \"setSpeed\", \"readBlue\", \"noStroke\", \"remoteIP\", \"transfer\", \"shutdown\", \"hangCall\", \"beginSMS\", \"endWrite\", \"attached\", \"maintain\", \"noCursor\", \"checkReg\", \"checkPUK\", \"shiftOut\", \"isValid\", \"shiftIn\", \"pulseIn\", \"connect\", \"println\", \"localIP\", \"pinMode\", \"getIMEI\", \"display\", \"noBlink\", \"process\", \"getBand\", \"running\", \"beginSD\", \"drawBMP\", \"lowByte\", \"setBand\", \"release\", \"bitRead\", \"prepare\", \"pointTo\", \"readRed\", \"setMode\", \"noFill\", \"remove\", \"listen\", \"stroke\", \"detach\", \"attach\", \"noTone\", \"exists\", \"buffer\", \"height\", \"bitSet\", \"circle\", \"config\", \"cursor\", \"random\", \"IRread\", \"setDNS\", \"endSMS\", \"getKey\", \"micros\", \"millis\", \"begin\", \"print\", \"write\", \"ready\", \"flush\", \"width\", \"isPIN\", \"blink\", \"clear\", \"press\", \"mkdir\", \"rmdir\", \"close\", \"point\", \"yield\", \"image\", \"BSSID\", \"click\", \"delay\", \"read\", \"text\", \"move\", \"peek\", \"beep\", \"rect\", \"line\", \"open\", \"seek\", \"fill\", \"size\", \"turn\", \"stop\", \"home\", \"find\", \"step\", \"tone\", \"sqrt\", \"RSSI\", \"SSID\", \"end\", \"bit\", \"tan\", \"cos\", \"sin\", \"pow\", \"map\", \"abs\", \"max\", \"min\", \"get\", \"run\", \"put\"],\n    literal: [\"DIGITAL_MESSAGE\", \"FIRMATA_STRING\", \"ANALOG_MESSAGE\", \"REPORT_DIGITAL\", \"REPORT_ANALOG\", \"INPUT_PULLUP\", \"SET_PIN_MODE\", \"INTERNAL2V56\", \"SYSTEM_RESET\", \"LED_BUILTIN\", \"INTERNAL1V1\", \"SYSEX_START\", \"INTERNAL\", \"EXTERNAL\", \"DEFAULT\", \"OUTPUT\", \"INPUT\", \"HIGH\", \"LOW\"]\n  };\n  var ARDUINO = cPlusPlus(hljs);\n  var kws =\n  /** @type {Record<string,any>} */\n  ARDUINO.keywords;\n  kws.type = [].concat(_toConsumableArray(kws.type), _toConsumableArray(ARDUINO_KW.type));\n  kws.literal = [].concat(_toConsumableArray(kws.literal), _toConsumableArray(ARDUINO_KW.literal));\n  kws.built_in = [].concat(_toConsumableArray(kws.built_in), _toConsumableArray(ARDUINO_KW.built_in));\n  kws._hints = ARDUINO_KW._hints;\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n  return ARDUINO;\n}\n\nmodule.exports = arduino;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/arduino.js"],"names":["cPlusPlus","hljs","regex","C_LINE_COMMENT_MODE","COMMENT","contains","begin","DECLTYPE_AUTO_RE","NAMESPACE_RE","TEMPLATE_ARGUMENT_RE","FUNCTION_TYPE_RE","optional","CPP_PRIMITIVE_TYPES","className","CHARACTER_ESCAPES","STRINGS","variants","end","illegal","BACKSLASH_ESCAPE","END_SAME_AS_BEGIN","NUMBERS","relevance","PREPROCESSOR","keywords","keyword","inherit","C_BLOCK_COMMENT_MODE","TITLE_MODE","IDENT_RE","FUNCTION_TITLE","RESERVED_KEYWORDS","RESERVED_TYPES","TYPE_HINTS","FUNCTION_HINTS","LITERALS","BUILT_IN","CPP_KEYWORDS","type","literal","built_in","_type_hints","FUNCTION_DISPATCH","_hint","concat","lookahead","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","beginKeywords","FUNCTION_DECLARATION","returnBegin","excludeEnd","endsWithParent","match","name","aliases","classNameAliases","arduino","ARDUINO_KW","_hints","ARDUINO","kws","supersetOf","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const regex = hljs.regex;\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(?!struct)(' +\n    DECLTYPE_AUTO_RE + '|' +\n    regex.optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + regex.optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'type',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + '|.)',\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      keyword:\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'string'\n      }),\n      {\n        className: 'string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: regex.optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = regex.optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_KEYWORDS = [\n    'alignas',\n    'alignof',\n    'and',\n    'and_eq',\n    'asm',\n    'atomic_cancel',\n    'atomic_commit',\n    'atomic_noexcept',\n    'auto',\n    'bitand',\n    'bitor',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'co_await',\n    'co_return',\n    'co_yield',\n    'compl',\n    'concept',\n    'const_cast|10',\n    'consteval',\n    'constexpr',\n    'constinit',\n    'continue',\n    'decltype',\n    'default',\n    'delete',\n    'do',\n    'dynamic_cast|10',\n    'else',\n    'enum',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'for',\n    'friend',\n    'goto',\n    'if',\n    'import',\n    'inline',\n    'module',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'not',\n    'not_eq',\n    'nullptr',\n    'operator',\n    'or',\n    'or_eq',\n    'override',\n    'private',\n    'protected',\n    'public',\n    'reflexpr',\n    'register',\n    'reinterpret_cast|10',\n    'requires',\n    'return',\n    'sizeof',\n    'static_assert',\n    'static_cast|10',\n    'struct',\n    'switch',\n    'synchronized',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'transaction_safe',\n    'transaction_safe_dynamic',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'using',\n    'virtual',\n    'volatile',\n    'while',\n    'xor',\n    'xor_eq'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const RESERVED_TYPES = [\n    'bool',\n    'char',\n    'char16_t',\n    'char32_t',\n    'char8_t',\n    'double',\n    'float',\n    'int',\n    'long',\n    'short',\n    'void',\n    'wchar_t',\n    'unsigned',\n    'signed',\n    'const',\n    'static'\n  ];\n\n  const TYPE_HINTS = [\n    'any',\n    'auto_ptr',\n    'barrier',\n    'binary_semaphore',\n    'bitset',\n    'complex',\n    'condition_variable',\n    'condition_variable_any',\n    'counting_semaphore',\n    'deque',\n    'false_type',\n    'future',\n    'imaginary',\n    'initializer_list',\n    'istringstream',\n    'jthread',\n    'latch',\n    'lock_guard',\n    'multimap',\n    'multiset',\n    'mutex',\n    'optional',\n    'ostringstream',\n    'packaged_task',\n    'pair',\n    'promise',\n    'priority_queue',\n    'queue',\n    'recursive_mutex',\n    'recursive_timed_mutex',\n    'scoped_lock',\n    'set',\n    'shared_future',\n    'shared_lock',\n    'shared_mutex',\n    'shared_timed_mutex',\n    'shared_ptr',\n    'stack',\n    'string_view',\n    'stringstream',\n    'timed_mutex',\n    'thread',\n    'true_type',\n    'tuple',\n    'unique_lock',\n    'unique_ptr',\n    'unordered_map',\n    'unordered_multimap',\n    'unordered_multiset',\n    'unordered_set',\n    'variant',\n    'vector',\n    'weak_ptr',\n    'wstring',\n    'wstring_view'\n  ];\n\n  const FUNCTION_HINTS = [\n    'abort',\n    'abs',\n    'acos',\n    'apply',\n    'as_const',\n    'asin',\n    'atan',\n    'atan2',\n    'calloc',\n    'ceil',\n    'cerr',\n    'cin',\n    'clog',\n    'cos',\n    'cosh',\n    'cout',\n    'declval',\n    'endl',\n    'exchange',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'forward',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'fscanf',\n    'future',\n    'invoke',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'labs',\n    'launder',\n    'ldexp',\n    'log',\n    'log10',\n    'make_pair',\n    'make_shared',\n    'make_shared_for_overwrite',\n    'make_tuple',\n    'make_unique',\n    'malloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'move',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'realloc',\n    'scanf',\n    'sin',\n    'sinh',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'std',\n    'stderr',\n    'stdin',\n    'stdout',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'swap',\n    'tan',\n    'tanh',\n    'terminate',\n    'to_underlying',\n    'tolower',\n    'toupper',\n    'vfprintf',\n    'visit',\n    'vprintf',\n    'vsprintf'\n  ];\n\n  const LITERALS = [\n    'NULL',\n    'false',\n    'nullopt',\n    'nullptr',\n    'true'\n  ];\n\n  // https://en.cppreference.com/w/cpp/keyword\n  const BUILT_IN = [\n    '_Pragma'\n  ];\n\n  const CPP_KEYWORDS = {\n    type: RESERVED_TYPES,\n    keyword: RESERVED_KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_IN,\n    _type_hints: TYPE_HINTS\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: 'function.dispatch',\n    relevance: 0,\n    keywords: {\n      // Only for relevance, not highlighting.\n      _hint: FUNCTION_HINTS\n    },\n    begin: regex.concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!switch)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      regex.lookahead(/(<[^<>]+>|)\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      // allow for multiple declarations, e.g.:\n      // extern void f(int), g(char);\n      {\n        relevance: 0,\n        match: /,/\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      'function.dispatch': 'built_in'\n    },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          match: [\n            // extra complexity to deal with `enum class` and `enum struct`\n            /\\b(?:enum(?:\\s+(?:class|struct))?|class|struct|union)/,\n            /\\s+/,\n            /\\w+/\n          ],\n          className: {\n            1: 'keyword',\n            3: 'title.class'\n          }\n        }\n      ])\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    type: [\n      \"boolean\",\n      \"byte\",\n      \"word\",\n      \"String\"\n    ],\n    built_in: [\n      \"KeyboardController\",\n      \"MouseController\",\n      \"SoftwareSerial\",\n      \"EthernetServer\",\n      \"EthernetClient\",\n      \"LiquidCrystal\",\n      \"RobotControl\",\n      \"GSMVoiceCall\",\n      \"EthernetUDP\",\n      \"EsploraTFT\",\n      \"HttpClient\",\n      \"RobotMotor\",\n      \"WiFiClient\",\n      \"GSMScanner\",\n      \"FileSystem\",\n      \"Scheduler\",\n      \"GSMServer\",\n      \"YunClient\",\n      \"YunServer\",\n      \"IPAddress\",\n      \"GSMClient\",\n      \"GSMModem\",\n      \"Keyboard\",\n      \"Ethernet\",\n      \"Console\",\n      \"GSMBand\",\n      \"Esplora\",\n      \"Stepper\",\n      \"Process\",\n      \"WiFiUDP\",\n      \"GSM_SMS\",\n      \"Mailbox\",\n      \"USBHost\",\n      \"Firmata\",\n      \"PImage\",\n      \"Client\",\n      \"Server\",\n      \"GSMPIN\",\n      \"FileIO\",\n      \"Bridge\",\n      \"Serial\",\n      \"EEPROM\",\n      \"Stream\",\n      \"Mouse\",\n      \"Audio\",\n      \"Servo\",\n      \"File\",\n      \"Task\",\n      \"GPRS\",\n      \"WiFi\",\n      \"Wire\",\n      \"TFT\",\n      \"GSM\",\n      \"SPI\",\n      \"SD\"\n    ],\n    _hints: [\n      \"setup\",\n      \"loop\",\n      \"runShellCommandAsynchronously\",\n      \"analogWriteResolution\",\n      \"retrieveCallingNumber\",\n      \"printFirmwareVersion\",\n      \"analogReadResolution\",\n      \"sendDigitalPortPair\",\n      \"noListenOnLocalhost\",\n      \"readJoystickButton\",\n      \"setFirmwareVersion\",\n      \"readJoystickSwitch\",\n      \"scrollDisplayRight\",\n      \"getVoiceCallStatus\",\n      \"scrollDisplayLeft\",\n      \"writeMicroseconds\",\n      \"delayMicroseconds\",\n      \"beginTransmission\",\n      \"getSignalStrength\",\n      \"runAsynchronously\",\n      \"getAsynchronously\",\n      \"listenOnLocalhost\",\n      \"getCurrentCarrier\",\n      \"readAccelerometer\",\n      \"messageAvailable\",\n      \"sendDigitalPorts\",\n      \"lineFollowConfig\",\n      \"countryNameWrite\",\n      \"runShellCommand\",\n      \"readStringUntil\",\n      \"rewindDirectory\",\n      \"readTemperature\",\n      \"setClockDivider\",\n      \"readLightSensor\",\n      \"endTransmission\",\n      \"analogReference\",\n      \"detachInterrupt\",\n      \"countryNameRead\",\n      \"attachInterrupt\",\n      \"encryptionType\",\n      \"readBytesUntil\",\n      \"robotNameWrite\",\n      \"readMicrophone\",\n      \"robotNameRead\",\n      \"cityNameWrite\",\n      \"userNameWrite\",\n      \"readJoystickY\",\n      \"readJoystickX\",\n      \"mouseReleased\",\n      \"openNextFile\",\n      \"scanNetworks\",\n      \"noInterrupts\",\n      \"digitalWrite\",\n      \"beginSpeaker\",\n      \"mousePressed\",\n      \"isActionDone\",\n      \"mouseDragged\",\n      \"displayLogos\",\n      \"noAutoscroll\",\n      \"addParameter\",\n      \"remoteNumber\",\n      \"getModifiers\",\n      \"keyboardRead\",\n      \"userNameRead\",\n      \"waitContinue\",\n      \"processInput\",\n      \"parseCommand\",\n      \"printVersion\",\n      \"readNetworks\",\n      \"writeMessage\",\n      \"blinkVersion\",\n      \"cityNameRead\",\n      \"readMessage\",\n      \"setDataMode\",\n      \"parsePacket\",\n      \"isListening\",\n      \"setBitOrder\",\n      \"beginPacket\",\n      \"isDirectory\",\n      \"motorsWrite\",\n      \"drawCompass\",\n      \"digitalRead\",\n      \"clearScreen\",\n      \"serialEvent\",\n      \"rightToLeft\",\n      \"setTextSize\",\n      \"leftToRight\",\n      \"requestFrom\",\n      \"keyReleased\",\n      \"compassRead\",\n      \"analogWrite\",\n      \"interrupts\",\n      \"WiFiServer\",\n      \"disconnect\",\n      \"playMelody\",\n      \"parseFloat\",\n      \"autoscroll\",\n      \"getPINUsed\",\n      \"setPINUsed\",\n      \"setTimeout\",\n      \"sendAnalog\",\n      \"readSlider\",\n      \"analogRead\",\n      \"beginWrite\",\n      \"createChar\",\n      \"motorsStop\",\n      \"keyPressed\",\n      \"tempoWrite\",\n      \"readButton\",\n      \"subnetMask\",\n      \"debugPrint\",\n      \"macAddress\",\n      \"writeGreen\",\n      \"randomSeed\",\n      \"attachGPRS\",\n      \"readString\",\n      \"sendString\",\n      \"remotePort\",\n      \"releaseAll\",\n      \"mouseMoved\",\n      \"background\",\n      \"getXChange\",\n      \"getYChange\",\n      \"answerCall\",\n      \"getResult\",\n      \"voiceCall\",\n      \"endPacket\",\n      \"constrain\",\n      \"getSocket\",\n      \"writeJSON\",\n      \"getButton\",\n      \"available\",\n      \"connected\",\n      \"findUntil\",\n      \"readBytes\",\n      \"exitValue\",\n      \"readGreen\",\n      \"writeBlue\",\n      \"startLoop\",\n      \"IPAddress\",\n      \"isPressed\",\n      \"sendSysex\",\n      \"pauseMode\",\n      \"gatewayIP\",\n      \"setCursor\",\n      \"getOemKey\",\n      \"tuneWrite\",\n      \"noDisplay\",\n      \"loadImage\",\n      \"switchPIN\",\n      \"onRequest\",\n      \"onReceive\",\n      \"changePIN\",\n      \"playFile\",\n      \"noBuffer\",\n      \"parseInt\",\n      \"overflow\",\n      \"checkPIN\",\n      \"knobRead\",\n      \"beginTFT\",\n      \"bitClear\",\n      \"updateIR\",\n      \"bitWrite\",\n      \"position\",\n      \"writeRGB\",\n      \"highByte\",\n      \"writeRed\",\n      \"setSpeed\",\n      \"readBlue\",\n      \"noStroke\",\n      \"remoteIP\",\n      \"transfer\",\n      \"shutdown\",\n      \"hangCall\",\n      \"beginSMS\",\n      \"endWrite\",\n      \"attached\",\n      \"maintain\",\n      \"noCursor\",\n      \"checkReg\",\n      \"checkPUK\",\n      \"shiftOut\",\n      \"isValid\",\n      \"shiftIn\",\n      \"pulseIn\",\n      \"connect\",\n      \"println\",\n      \"localIP\",\n      \"pinMode\",\n      \"getIMEI\",\n      \"display\",\n      \"noBlink\",\n      \"process\",\n      \"getBand\",\n      \"running\",\n      \"beginSD\",\n      \"drawBMP\",\n      \"lowByte\",\n      \"setBand\",\n      \"release\",\n      \"bitRead\",\n      \"prepare\",\n      \"pointTo\",\n      \"readRed\",\n      \"setMode\",\n      \"noFill\",\n      \"remove\",\n      \"listen\",\n      \"stroke\",\n      \"detach\",\n      \"attach\",\n      \"noTone\",\n      \"exists\",\n      \"buffer\",\n      \"height\",\n      \"bitSet\",\n      \"circle\",\n      \"config\",\n      \"cursor\",\n      \"random\",\n      \"IRread\",\n      \"setDNS\",\n      \"endSMS\",\n      \"getKey\",\n      \"micros\",\n      \"millis\",\n      \"begin\",\n      \"print\",\n      \"write\",\n      \"ready\",\n      \"flush\",\n      \"width\",\n      \"isPIN\",\n      \"blink\",\n      \"clear\",\n      \"press\",\n      \"mkdir\",\n      \"rmdir\",\n      \"close\",\n      \"point\",\n      \"yield\",\n      \"image\",\n      \"BSSID\",\n      \"click\",\n      \"delay\",\n      \"read\",\n      \"text\",\n      \"move\",\n      \"peek\",\n      \"beep\",\n      \"rect\",\n      \"line\",\n      \"open\",\n      \"seek\",\n      \"fill\",\n      \"size\",\n      \"turn\",\n      \"stop\",\n      \"home\",\n      \"find\",\n      \"step\",\n      \"tone\",\n      \"sqrt\",\n      \"RSSI\",\n      \"SSID\",\n      \"end\",\n      \"bit\",\n      \"tan\",\n      \"cos\",\n      \"sin\",\n      \"pow\",\n      \"map\",\n      \"abs\",\n      \"max\",\n      \"min\",\n      \"get\",\n      \"run\",\n      \"put\"\n    ],\n    literal: [\n      \"DIGITAL_MESSAGE\",\n      \"FIRMATA_STRING\",\n      \"ANALOG_MESSAGE\",\n      \"REPORT_DIGITAL\",\n      \"REPORT_ANALOG\",\n      \"INPUT_PULLUP\",\n      \"SET_PIN_MODE\",\n      \"INTERNAL2V56\",\n      \"SYSTEM_RESET\",\n      \"LED_BUILTIN\",\n      \"INTERNAL1V1\",\n      \"SYSEX_START\",\n      \"INTERNAL\",\n      \"EXTERNAL\",\n      \"DEFAULT\",\n      \"OUTPUT\",\n      \"INPUT\",\n      \"HIGH\",\n      \"LOW\"\n    ]\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.type = [ ...kws.type, ...ARDUINO_KW.type ];\n  kws.literal = [ ...kws.literal, ...ARDUINO_KW.literal ];\n  kws.built_in = [ ...kws.built_in, ...ARDUINO_KW.built_in ];\n  kws._hints = ARDUINO_KW._hints;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nmodule.exports = arduino;\n"]},"metadata":{},"sourceType":"script"}