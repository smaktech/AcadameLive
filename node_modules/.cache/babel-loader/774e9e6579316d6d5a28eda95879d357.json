{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from'@reduxjs/toolkit';import{omit}from'lodash';// utils\nimport axios from'../../utils/axios';//\nimport{dispatch}from'../store';// ----------------------------------------------------------------------\nfunction objFromArray(array){var key=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'id';return array.reduce(function(accumulator,current){accumulator[current[key]]=current;return accumulator;},{});}var initialState={isLoading:false,error:null,board:{cards:{},columns:{},columnOrder:[]}};var slice=createSlice({name:'kanban',initialState:initialState,reducers:{// START LOADING\nstartLoading:function startLoading(state){state.isLoading=true;},// HAS ERROR\nhasError:function hasError(state,action){state.isLoading=false;state.error=action.payload;},// GET BOARD\ngetBoardSuccess:function getBoardSuccess(state,action){state.isLoading=false;var board=action.payload;var cards=objFromArray(board.cards);var columns=objFromArray(board.columns);var columnOrder=board.columnOrder;state.board={cards:cards,columns:columns,columnOrder:columnOrder};},// CREATE NEW COLUMN\ncreateColumnSuccess:function createColumnSuccess(state,action){var newColumn=action.payload;state.isLoading=false;state.board.columns=_objectSpread(_objectSpread({},state.board.columns),{},_defineProperty({},newColumn.id,newColumn));state.board.columnOrder.push(newColumn.id);},persistCard:function persistCard(state,action){var columns=action.payload;state.board.columns=columns;},persistColumn:function persistColumn(state,action){state.board.columnOrder=action.payload;},addTask:function addTask(state,action){var _action$payload=action.payload,card=_action$payload.card,columnId=_action$payload.columnId;state.board.cards[card.id]=card;state.board.columns[columnId].cardIds.push(card.id);},deleteTask:function deleteTask(state,action){var _action$payload2=action.payload,cardId=_action$payload2.cardId,columnId=_action$payload2.columnId;state.board.columns[columnId].cardIds=state.board.columns[columnId].cardIds.filter(function(id){return id!==cardId;});state.board.cards=omit(state.board.cards,[cardId]);},// UPDATE COLUMN\nupdateColumnSuccess:function updateColumnSuccess(state,action){var column=action.payload;state.isLoading=false;state.board.columns[column.id]=column;},// DELETE COLUMN\ndeleteColumnSuccess:function deleteColumnSuccess(state,action){var columnId=action.payload.columnId;var deletedColumn=state.board.columns[columnId];state.isLoading=false;state.board.columns=omit(state.board.columns,[columnId]);state.board.cards=omit(state.board.cards,_toConsumableArray(deletedColumn.cardIds));state.board.columnOrder=state.board.columnOrder.filter(function(c){return c!==columnId;});}}});// Reducer\nexport default slice.reducer;var actions=slice.actions;// ----------------------------------------------------------------------\nexport{actions};export function getBoard(){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(slice.actions.startLoading());_context.prev=1;_context.next=4;return axios.get('/api/kanban/board');case 4:response=_context.sent;dispatch(slice.actions.getBoardSuccess(response.data.board));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(slice.actions.hasError(_context.t0));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function createColumn(newColumn){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(slice.actions.startLoading());_context2.prev=1;_context2.next=4;return axios.post('/api/kanban/columns/new',newColumn);case 4:response=_context2.sent;dispatch(slice.actions.createColumnSuccess(response.data.column));_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch(slice.actions.hasError(_context2.t0));case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function updateColumn(columnId,updateColumn){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(slice.actions.startLoading());_context3.prev=1;_context3.next=4;return axios.post('/api/kanban/columns/update',{columnId:columnId,updateColumn:updateColumn});case 4:response=_context3.sent;dispatch(slice.actions.updateColumnSuccess(response.data.column));_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);dispatch(slice.actions.hasError(_context3.t0));case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function deleteColumn(columnId){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(slice.actions.startLoading());_context4.prev=1;_context4.next=4;return axios.post('/api/kanban/columns/delete',{columnId:columnId});case 4:dispatch(slice.actions.deleteColumnSuccess({columnId:columnId}));_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](1);dispatch(slice.actions.hasError(_context4.t0));case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[1,7]]);}));}// ----------------------------------------------------------------------\nexport function persistColumn(newColumnOrder){return function(){dispatch(slice.actions.persistColumn(newColumnOrder));};}// ----------------------------------------------------------------------\nexport function persistCard(columns){return function(){dispatch(slice.actions.persistCard(columns));};}// ----------------------------------------------------------------------\nexport function addTask(_ref5){var card=_ref5.card,columnId=_ref5.columnId;return function(){dispatch(slice.actions.addTask({card:card,columnId:columnId}));};}// ----------------------------------------------------------------------\nexport function deleteTask(_ref6){var cardId=_ref6.cardId,columnId=_ref6.columnId;return function(dispatch){dispatch(slice.actions.deleteTask({cardId:cardId,columnId:columnId}));};}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/redux/slices/kanban.js"],"names":["createSlice","omit","axios","dispatch","objFromArray","array","key","reduce","accumulator","current","initialState","isLoading","error","board","cards","columns","columnOrder","slice","name","reducers","startLoading","state","hasError","action","payload","getBoardSuccess","createColumnSuccess","newColumn","id","push","persistCard","persistColumn","addTask","card","columnId","cardIds","deleteTask","cardId","filter","updateColumnSuccess","column","deleteColumnSuccess","deletedColumn","c","reducer","actions","getBoard","get","response","data","createColumn","post","updateColumn","deleteColumn","newColumnOrder"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { omit } from 'lodash';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  board: {\n    cards: {},\n    columns: {},\n    columnOrder: [],\n  },\n};\n\nconst slice = createSlice({\n  name: 'kanban',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET BOARD\n    getBoardSuccess(state, action) {\n      state.isLoading = false;\n      const board = action.payload;\n      const cards = objFromArray(board.cards);\n      const columns = objFromArray(board.columns);\n      const { columnOrder } = board;\n      state.board = {\n        cards,\n        columns,\n        columnOrder,\n      };\n    },\n\n    // CREATE NEW COLUMN\n    createColumnSuccess(state, action) {\n      const newColumn = action.payload;\n      state.isLoading = false;\n      state.board.columns = {\n        ...state.board.columns,\n        [newColumn.id]: newColumn,\n      };\n      state.board.columnOrder.push(newColumn.id);\n    },\n\n    persistCard(state, action) {\n      const columns = action.payload;\n      state.board.columns = columns;\n    },\n\n    persistColumn(state, action) {\n      state.board.columnOrder = action.payload;\n    },\n\n    addTask(state, action) {\n      const { card, columnId } = action.payload;\n\n      state.board.cards[card.id] = card;\n      state.board.columns[columnId].cardIds.push(card.id);\n    },\n\n    deleteTask(state, action) {\n      const { cardId, columnId } = action.payload;\n\n      state.board.columns[columnId].cardIds = state.board.columns[columnId].cardIds.filter((id) => id !== cardId);\n      state.board.cards = omit(state.board.cards, [cardId]);\n    },\n\n    // UPDATE COLUMN\n    updateColumnSuccess(state, action) {\n      const column = action.payload;\n\n      state.isLoading = false;\n      state.board.columns[column.id] = column;\n    },\n\n    // DELETE COLUMN\n    deleteColumnSuccess(state, action) {\n      const { columnId } = action.payload;\n      const deletedColumn = state.board.columns[columnId];\n\n      state.isLoading = false;\n      state.board.columns = omit(state.board.columns, [columnId]);\n      state.board.cards = omit(state.board.cards, [...deletedColumn.cardIds]);\n      state.board.columnOrder = state.board.columnOrder.filter((c) => c !== columnId);\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\nexport const { actions } = slice;\n\n// ----------------------------------------------------------------------\n\nexport function getBoard() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/kanban/board');\n      dispatch(slice.actions.getBoardSuccess(response.data.board));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function createColumn(newColumn) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/kanban/columns/new', newColumn);\n      dispatch(slice.actions.createColumnSuccess(response.data.column));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function updateColumn(columnId, updateColumn) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/kanban/columns/update', {\n        columnId,\n        updateColumn,\n      });\n      dispatch(slice.actions.updateColumnSuccess(response.data.column));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteColumn(columnId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.post('/api/kanban/columns/delete', { columnId });\n      dispatch(slice.actions.deleteColumnSuccess({ columnId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function persistColumn(newColumnOrder) {\n  return () => {\n    dispatch(slice.actions.persistColumn(newColumnOrder));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function persistCard(columns) {\n  return () => {\n    dispatch(slice.actions.persistCard(columns));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function addTask({ card, columnId }) {\n  return () => {\n    dispatch(slice.actions.addTask({ card, columnId }));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteTask({ cardId, columnId }) {\n  return (dispatch) => {\n    dispatch(slice.actions.deleteTask({ cardId, columnId }));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}