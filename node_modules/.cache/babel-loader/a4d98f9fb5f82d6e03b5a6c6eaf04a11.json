{"ast":null,"code":"/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = ['abs', 'accept', 'alarm', 'and', 'atan2', 'bind', 'binmode', 'bless', 'break', 'caller', 'chdir', 'chmod', 'chomp', 'chop', 'chown', 'chr', 'chroot', 'close', 'closedir', 'connect', 'continue', 'cos', 'crypt', 'dbmclose', 'dbmopen', 'defined', 'delete', 'die', 'do', 'dump', 'each', 'else', 'elsif', 'endgrent', 'endhostent', 'endnetent', 'endprotoent', 'endpwent', 'endservent', 'eof', 'eval', 'exec', 'exists', 'exit', 'exp', 'fcntl', 'fileno', 'flock', 'for', 'foreach', 'fork', 'format', 'formline', 'getc', 'getgrent', 'getgrgid', 'getgrnam', 'gethostbyaddr', 'gethostbyname', 'gethostent', 'getlogin', 'getnetbyaddr', 'getnetbyname', 'getnetent', 'getpeername', 'getpgrp', 'getpriority', 'getprotobyname', 'getprotobynumber', 'getprotoent', 'getpwent', 'getpwnam', 'getpwuid', 'getservbyname', 'getservbyport', 'getservent', 'getsockname', 'getsockopt', 'given', 'glob', 'gmtime', 'goto', 'grep', 'gt', 'hex', 'if', 'index', 'int', 'ioctl', 'join', 'keys', 'kill', 'last', 'lc', 'lcfirst', 'length', 'link', 'listen', 'local', 'localtime', 'log', 'lstat', 'lt', 'ma', 'map', 'mkdir', 'msgctl', 'msgget', 'msgrcv', 'msgsnd', 'my', 'ne', 'next', 'no', 'not', 'oct', 'open', 'opendir', 'or', 'ord', 'our', 'pack', 'package', 'pipe', 'pop', 'pos', 'print', 'printf', 'prototype', 'push', 'q|0', 'qq', 'quotemeta', 'qw', 'qx', 'rand', 'read', 'readdir', 'readline', 'readlink', 'readpipe', 'recv', 'redo', 'ref', 'rename', 'require', 'reset', 'return', 'reverse', 'rewinddir', 'rindex', 'rmdir', 'say', 'scalar', 'seek', 'seekdir', 'select', 'semctl', 'semget', 'semop', 'send', 'setgrent', 'sethostent', 'setnetent', 'setpgrp', 'setpriority', 'setprotoent', 'setpwent', 'setservent', 'setsockopt', 'shift', 'shmctl', 'shmget', 'shmread', 'shmwrite', 'shutdown', 'sin', 'sleep', 'socket', 'socketpair', 'sort', 'splice', 'split', 'sprintf', 'sqrt', 'srand', 'stat', 'state', 'study', 'sub', 'substr', 'symlink', 'syscall', 'sysopen', 'sysread', 'sysseek', 'system', 'syswrite', 'tell', 'telldir', 'tie', 'tied', 'time', 'times', 'tr', 'truncate', 'uc', 'ucfirst', 'umask', 'undef', 'unless', 'unlink', 'unpack', 'unshift', 'untie', 'until', 'use', 'utime', 'values', 'vec', 'wait', 'waitpid', 'wantarray', 'warn', 'when', 'while', 'write', 'x|0', 'xor', 'y|0']; // https://perldoc.perl.org/perlre#Modifiers\n\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/ // contains defined later\n\n  };\n  const VAR = {\n    variants: [{\n      begin: /\\$\\d/\n    }, {\n      begin: regex.concat(/[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/, // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z])(?![@$%])`)\n    }, {\n      begin: /[$%@][^\\s\\w{]/,\n      relevance: 0\n    }]\n  };\n  const STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  const REGEX_DELIMS = [/!/, /\\//, /\\|/, /\\?/, /'/, /\"/, // valid but infrequent and weird\n  /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n\n  const PAIRED_DOUBLE_RE = function (prefix, open) {\n    let close = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\\\\1';\n    const middle = close === '\\\\1' ? close : regex.concat(close, open);\n    return regex.concat(regex.concat(\"(?:\", prefix, \")\"), open, /(?:\\\\.|[^\\\\\\/])*?/, middle, /(?:\\\\.|[^\\\\\\/])*?/, close, REGEX_MODIFIERS);\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n\n\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(regex.concat(\"(?:\", prefix, \")\"), open, /(?:\\\\.|[^\\\\\\/])*?/, close, REGEX_MODIFIERS);\n  };\n\n  const PERL_DEFAULT_CONTAINS = [VAR, hljs.HASH_COMMENT_MODE, hljs.COMMENT(/^=\\w/, /=cut/, {\n    endsWithParent: true\n  }), METHOD, {\n    className: 'string',\n    contains: STRING_CONTAINS,\n    variants: [{\n      begin: 'q[qwxr]?\\\\s*\\\\(',\n      end: '\\\\)',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\[',\n      end: '\\\\]',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\{',\n      end: '\\\\}',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\|',\n      end: '\\\\|',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*<',\n      end: '>',\n      relevance: 5\n    }, {\n      begin: 'qw\\\\s+q',\n      end: 'q',\n      relevance: 5\n    }, {\n      begin: '\\'',\n      end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\{\\w+\\}/,\n      relevance: 0\n    }, {\n      begin: '-?\\\\w+\\\\s*=>',\n      relevance: 0\n    }]\n  }, {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  }, {\n    // regexp container\n    begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n    keywords: 'split return print reverse grep',\n    relevance: 0,\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      variants: [// allow matching common delimiters\n      {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, {\n          capture: true\n        }))\n      }, // and then paired delmis\n      {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\")\n      }, {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\")\n      }, {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\")\n      }],\n      relevance: 2\n    }, {\n      className: 'regexp',\n      variants: [{\n        // could be a comment in many languages so do not count\n        // as relevant\n        begin: /(m|qr)\\/\\//,\n        relevance: 0\n      }, // prefix is optional with /regex/\n      {\n        begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)\n      }, // allow matching common delimiters\n      {\n        begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, {\n          capture: true\n        }), /\\1/)\n      }, // allow common paired delmins\n      {\n        begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)\n      }, {\n        begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)\n      }, {\n        begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)\n      }]\n    }]\n  }, {\n    className: 'function',\n    beginKeywords: 'sub',\n    end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n    excludeEnd: true,\n    relevance: 5,\n    contains: [hljs.TITLE_MODE]\n  }, {\n    begin: '-\\\\w\\\\b',\n    relevance: 0\n  }, {\n    begin: \"^__DATA__$\",\n    end: \"^__END__$\",\n    subLanguage: 'mojolicious',\n    contains: [{\n      begin: \"^@@.*\",\n      end: \"$\",\n      className: \"comment\"\n    }]\n  }];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n  return {\n    name: 'Perl',\n    aliases: ['pl', 'pm'],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/perl.js"],"names":["perl","hljs","regex","KEYWORDS","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","join","SUBST","className","begin","end","keywords","METHOD","VAR","variants","concat","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","REGEX_DELIMS","PAIRED_DOUBLE_RE","prefix","open","close","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","either","capture","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = {\n    variants: [\n      {\n        begin: /\\$\\d/\n      },\n      {\n        begin: regex.concat(\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        begin: /[$%@][^\\s\\w{]/,\n        relevance: 0\n      }\n    ]\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : regex.concat(close, open);\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)},\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/)},\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)}\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;\n"]},"metadata":{},"sourceType":"script"}