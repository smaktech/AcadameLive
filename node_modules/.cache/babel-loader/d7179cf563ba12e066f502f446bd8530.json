{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\classes\\\\AddEditClasses.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { useParams } from 'react-router-dom';\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { editClass, createClass, getClassById } from \"../../api/Classes/Classes\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditClasses(props) {\n  _s();\n\n  console.log(props); // const classId = props.match.params.classId;\n  // const classStatus = props.match.params.classStatus;\n\n  const {\n    classId,\n    classStatus\n  } = useParams();\n  const [mode, setMode] = useState(classId ? \"edit\" : \"add\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add class button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit class button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the class user want to add\n\n  const [className, setclassName] = useState(); //shows the error when users try to add class without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false); //updating mode state on change of class id\n\n  useEffect(() => {\n    setMode(classId ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getClassById(classId).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched class by id into state variable\n        setclassName(res.course.name);\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [classId]); //edit the details basically the name of the existing class\n\n  function editclassDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (className != '') {\n      editClass(classId, className, classStatus).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Qualification details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the class name');\n    }\n  } //adds new class \n\n\n  function addNewclass() {\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false);\n\n    if (className != '') {\n      createClass(className, 'active').then(res => {\n        // console.log(res);\n        if (res.status) {\n          setAddLoader(false);\n          setModalLine1('New Qualification Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the class name');\n    }\n  } // function to reset\n\n\n  const reSetForm = () => {\n    setclassName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Qualification Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"pageHeaderCard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Class Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"   text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-6 col-sm-6 col-12\",\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: mode == 'edit' ? /*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"Enter class Name\",\n                    \"aria-label\": \"Search\",\n                    \"aria-describedby\": \"basic-addon1\",\n                    onChange: e => setclassName(e.target.value),\n                    value: className\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"Enter class Name\",\n                    \"aria-label\": \"Search\",\n                    \"aria-describedby\": \"basic-addon1\",\n                    onChange: e => setclassName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => navigate('/dashboard/classes'),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  editclassDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => addNewclass(),\n              children: \"Add Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm(), navigate('/dashboard/classes/addClass'))\n                }, void 0, false);\n              },\n              children: \"Add New Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/classes'),\n              children: \"Back To Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditClasses, \"irkh2cyobN8X6jyX8+QTukZE16o=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditClasses;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditClasses\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/classes/AddEditClasses.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","useParams","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","editClass","createClass","getClassById","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","AddEditClasses","props","console","log","classId","classStatus","mode","setMode","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","className","setclassName","errorMessage","setErrorMessage","error","showError","then","res","status","course","name","catch","err","editclassDetails","addNewclass","reSetForm","display","height","justifyContent","alignItems","margin","e","target","value","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport {  InputGroup, FormControl, Table } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n  \n import {useParams} from'react-router-dom'\n \nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { editClass, createClass, getClassById } from \"../../api/Classes/Classes\"\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal} from 'react-bootstrap'\nimport Grid from '@mui/material/Grid'; \nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\n\nexport default function AddEditClasses(props) {\n    console.log(props)\n    // const classId = props.match.params.classId;\n    // const classStatus = props.match.params.classStatus;\n    const {classId, classStatus} = useParams()\n    const [mode, setMode] = useState(classId ? \"edit\" : \"add\")\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate =  useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add class button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit class button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the class user want to add\n    const [className, setclassName] = useState();\n\n    //shows the error when users try to add class without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    //updating mode state on change of class id\n    useEffect(() => {\n        setMode(classId ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getClassById(classId).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched class by id into state variable\n                setclassName(res.course.name)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, [classId])\n\n    //edit the details basically the name of the existing class\n    function editclassDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (className != '') {\n            editClass(classId, className, classStatus)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Qualification details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the class name');\n        }\n\n    }\n\n    //adds new class \n    function addNewclass() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (className != '') {\n            createClass(className, 'active')\n                .then((res) => {\n                    // console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Qualification Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the class name');\n        }\n    }\n\n\n    // function to reset\n    const reSetForm = () => {\n        setclassName('')\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Qualification Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height:'100vh',justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20}/>\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    <label>Class Name</label>\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div> \n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n                                        <InputGroup className=\"mb-3\" >\n\n                                            {mode == 'edit' ? (\n                                                <FormControl\n                                                    placeholder=\"Enter class Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setclassName(e.target.value)}\n                                                    value={className}\n                                                />\n                                            ) : (\n                                                <FormControl\n                                                    placeholder=\"Enter class Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setclassName(e.target.value)}\n                                                />\n                                            )}\n\n                                        </InputGroup>\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        <Button  variant=\"outlined\"  onClick={() => navigate('/dashboard/classes')} >Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? ( \n                                            <Button variant=\"outlined\"  >\n                                               <CircularProgress size={20}/>\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\"  onClick={() => { editclassDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\"  >\n                                            <CircularProgress size={20}/>\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" \n                                            onClick={() => addNewclass()}\n                                        >Add Qualification</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalVisible(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{alignItems: 'center',display: 'flex',flexDirection: 'column'}}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\"  style={{ marginRight: 10 ,marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false),reSetForm() }</>) : (<>{setModalVisible(false),reSetForm(),navigate('/dashboard/classes/addClass')}</>) }}\n                            >Add New Qualification</Button>\n                            &emsp;\n                            <Button variant=\"contained\"  style={{ marginRight: 10 ,marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/classes')}\n                            >Back To Qualification</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}