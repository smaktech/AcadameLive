{"ast":null,"code":"import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'; //Fetch all subject data using offset and limit!\n\nasync function getAllSubjects(page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/subjest/filterSubject';else apiLink = apiUrl + '/subject/filterSubject?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //api to change the status of the user\n\n\nasync function editSubject(subjectID, name, status, subjectIcon) {\n  // var details = {\n  //   \"name\": name,\n  //   \"status\": status\n  // };\n  // var formBody = [];\n  // for (var property in details) {\n  //   var encodedKey = encodeURIComponent(property);\n  //   var encodedValue = encodeURIComponent(details[property]);\n  //   formBody.push(encodedKey + \"=\" + encodedValue);\n  // }\n  // formBody = formBody.join(\"&\");\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('image', subjectIcon);\n  formData.append('status', status);\n  const data = await fetch(apiUrl + '/subject/editSubject/' + subjectID, {\n    method: 'PATCH',\n    headers: {// Accept: 'application/json',\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n} //api function for adding a subject \n// async function createSubject(name, status) {\n//   var details = {\n//     \"name\": name,\n//     \"status\": status\n//   };\n//   var formBody = [];\n//   for (var property in details) {\n//     var encodedKey = encodeURIComponent(property);\n//     var encodedValue = encodeURIComponent(details[property]);\n//     formBody.push(encodedKey + \"=\" + encodedValue);\n//   }\n//   formBody = formBody.join(\"&\");\n//   const data = await fetch(apiUrl + '/subject/createSubject', {\n//     method: 'POST',\n//     headers: {\n//       // Accept: 'application/json',\n//       'Content-Type': 'application/x-www-form-urlencoded',\n//     },\n//     body: formBody,\n//   }).then((res) => res.json());\n//   return data;\n// }\n\n\nasync function createSubject(name, status, icon) {\n  console.log(name, status, icon);\n  let headers = new Headers();\n  headers.append('Access-Control-Allow-Origin', apiUrl);\n  headers.append('Access-Control-Allow-Credentials', 'true');\n  headers.append('GET', 'POST', 'OPTIONS');\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('image', icon);\n  formData.append('status', status);\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n\n  const data = await fetch(`${apiUrl}/subject/createSubject`, {\n    method: 'POST',\n    headers,\n    body: formData\n  });\n  console.log(data);\n  return data;\n} //api to delete the user from the database\n\n\nasync function deleteSubject(subjectId) {\n  const data = await fetch(apiUrl + '/subject/deleteSubjectById/' + subjectId, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //api to get the details of a particular user by sending the userId\n\n\nasync function getSubjectById(subjectId) {\n  const data = await fetch(apiUrl + '/subject/getSubjectById/' + subjectId, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nasync function getSubjectByFilter(searchString, status, startDate, endDate, page, limit, sortByDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    endDate: endDate,\n    page: page,\n    limit: limit,\n    sortByDate: sortByDate\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/subject/filterSubject';else apiLink = apiUrl + '/subject/filterSubject?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nexport { getAllSubjects, editSubject, deleteSubject, getSubjectById, createSubject, getSubjectByFilter };","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Subject/Subject.js"],"names":["apiUrl","objToQueryString","getAllSubjects","page","limit","queryString","apiLink","data","fetch","method","headers","Accept","then","res","json","editSubject","subjectID","name","status","subjectIcon","formData","FormData","append","body","formBody","createSubject","icon","console","log","Headers","pair","entries","deleteSubject","subjectId","getSubjectById","getSubjectByFilter","searchString","startDate","endDate","sortByDate"],"mappings":"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","sourcesContent":["import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n//Fetch all subject data using offset and limit!\nasync function getAllSubjects(page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subjest/filterSubject'\n  else\n    apiLink = apiUrl + '/subject/filterSubject?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\n//api to change the status of the user\n\nasync function editSubject(subjectID, name, status,subjectIcon) {\n  // var details = {\n  //   \"name\": name,\n  //   \"status\": status\n  // };\n\n  // var formBody = [];\n  // for (var property in details) {\n  //   var encodedKey = encodeURIComponent(property);\n  //   var encodedValue = encodeURIComponent(details[property]);\n  //   formBody.push(encodedKey + \"=\" + encodedValue);\n  // }\n  // formBody = formBody.join(\"&\");\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('image', subjectIcon)\n  formData.append('status', status)\n  const data = await fetch(apiUrl + '/subject/editSubject/' + subjectID, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formBody,\n  }).then((res) => res.json());\n  return data;\n\n}\n\n//api function for adding a subject \n// async function createSubject(name, status) {\n//   var details = {\n//     \"name\": name,\n//     \"status\": status\n//   };\n\n//   var formBody = [];\n//   for (var property in details) {\n//     var encodedKey = encodeURIComponent(property);\n//     var encodedValue = encodeURIComponent(details[property]);\n//     formBody.push(encodedKey + \"=\" + encodedValue);\n//   }\n//   formBody = formBody.join(\"&\");\n//   const data = await fetch(apiUrl + '/subject/createSubject', {\n//     method: 'POST',\n//     headers: {\n//       // Accept: 'application/json',\n//       'Content-Type': 'application/x-www-form-urlencoded',\n//     },\n//     body: formBody,\n//   }).then((res) => res.json());\n//   return data;\n// }\n\nasync function createSubject(name, status, icon) {\n  console.log(name, status, icon)\n\n  let headers = new Headers();\n  headers.append('Access-Control-Allow-Origin', apiUrl);\n  headers.append('Access-Control-Allow-Credentials', 'true');\n  headers.append('GET', 'POST', 'OPTIONS');\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('image', icon)\n  formData.append('status', status)\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n\n  const data = await fetch(`${apiUrl}/subject/createSubject`, {\n    method: 'POST',\n    headers,\n    body: formData\n  })\n  console.log(data)\n  return data;\n}\n\n//api to delete the user from the database\nasync function deleteSubject(subjectId) {\n  const data = await fetch(apiUrl + '/subject/deleteSubjectById/' + subjectId, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n//api to get the details of a particular user by sending the userId\nasync function getSubjectById(subjectId) {\n  const data = await fetch(apiUrl + '/subject/getSubjectById/' + subjectId, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nasync function getSubjectByFilter(searchString, status, startDate, endDate, page, limit, sortByDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    endDate: endDate,\n    page: page,\n    limit: limit,\n    sortByDate: sortByDate\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subject/filterSubject'\n  else\n    apiLink = apiUrl + '/subject/filterSubject?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n\n}\n\nexport { getAllSubjects, editSubject, deleteSubject, getSubjectById, createSubject, getSubjectByFilter }"]},"metadata":{},"sourceType":"module"}