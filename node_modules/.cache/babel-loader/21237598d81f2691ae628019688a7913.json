{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';// @mui\nimport{MenuItem,ListItemText,Stack}from'@mui/material';// hooks\nimport useLocales from'../../../hooks/useLocales';// components\nimport Image from'../../../components/Image';import MenuPopover from'../../../components/MenuPopover';import{IconButtonAnimate}from'../../../components/animate';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function LanguagePopover(){var anchorRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useLocales=useLocales(),allLang=_useLocales.allLang,currentLang=_useLocales.currentLang,onChangeLang=_useLocales.onChangeLang;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButtonAnimate,{ref:anchorRef,onClick:function onClick(){return setOpen(true);},sx:_objectSpread({padding:0,width:44,height:44},open&&{bgcolor:'action.selected'}),children:/*#__PURE__*/_jsx(Image,{disabledEffect:true,src:currentLang.icon,alt:currentLang.label})}),/*#__PURE__*/_jsx(MenuPopover,{open:open,onClose:function onClose(){return setOpen(false);},anchorEl:anchorRef.current,children:/*#__PURE__*/_jsx(Stack,{spacing:0.5,sx:{p:1},children:allLang.map(function(option){return/*#__PURE__*/_jsxs(MenuItem,{selected:option.value===currentLang.value,onClick:function onClick(){onChangeLang(option.value);setOpen(false);},sx:{height:40,borderRadius:1,px:1},children:[/*#__PURE__*/_jsx(Image,{disabledEffect:true,alt:option.label,src:option.icon,sx:{mr:2}}),/*#__PURE__*/_jsx(ListItemText,{primaryTypographyProps:{variant:'body2'},children:option.label})]},option.value);})})})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/header/LanguagePopover.js"],"names":["useRef","useState","MenuItem","ListItemText","Stack","useLocales","Image","MenuPopover","IconButtonAnimate","LanguagePopover","anchorRef","open","setOpen","allLang","currentLang","onChangeLang","padding","width","height","bgcolor","icon","label","current","p","map","option","value","borderRadius","px","mr","variant"],"mappings":"+TAAA,OAASA,MAAT,CAAiBC,QAAjB,KAAiC,OAAjC,CACA;AACA,OAASC,QAAT,CAAmBC,YAAnB,CAAiCC,KAAjC,KAA8C,eAA9C,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,OAASC,iBAAT,KAAkC,6BAAlC,CAEA;6IAEA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACxC,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAAC,IAAD,CAAxB,CACA,cAAwBC,QAAQ,CAAC,KAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,gBAA+CP,UAAU,EAAzD,CAAQQ,OAAR,aAAQA,OAAR,CAAiBC,WAAjB,aAAiBA,WAAjB,CAA8BC,YAA9B,aAA8BA,YAA9B,CAEA,mBACE,wCACE,KAAC,iBAAD,EACE,GAAG,CAAEL,SADP,CAEE,OAAO,CAAE,yBAAME,CAAAA,OAAO,CAAC,IAAD,CAAb,EAFX,CAGE,EAAE,gBACAI,OAAO,CAAE,CADT,CAEAC,KAAK,CAAE,EAFP,CAGAC,MAAM,CAAE,EAHR,EAIIP,IAAI,EAAI,CAAEQ,OAAO,CAAE,iBAAX,CAJZ,CAHJ,uBAUE,KAAC,KAAD,EAAO,cAAc,KAArB,CAAsB,GAAG,CAAEL,WAAW,CAACM,IAAvC,CAA6C,GAAG,CAAEN,WAAW,CAACO,KAA9D,EAVF,EADF,cAcE,KAAC,WAAD,EAAa,IAAI,CAAEV,IAAnB,CAAyB,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAAC,KAAD,CAAb,EAAlC,CAAwD,QAAQ,CAAEF,SAAS,CAACY,OAA5E,uBACE,KAAC,KAAD,EAAO,OAAO,CAAE,GAAhB,CAAqB,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAzB,UACGV,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,qBACX,MAAC,QAAD,EAEE,QAAQ,CAAEA,MAAM,CAACC,KAAP,GAAiBZ,WAAW,CAACY,KAFzC,CAGE,OAAO,CAAE,kBAAM,CACbX,YAAY,CAACU,MAAM,CAACC,KAAR,CAAZ,CACAd,OAAO,CAAC,KAAD,CAAP,CACD,CANH,CAOE,EAAE,CAAE,CAAEM,MAAM,CAAE,EAAV,CAAcS,YAAY,CAAE,CAA5B,CAA+BC,EAAE,CAAE,CAAnC,CAPN,wBASE,KAAC,KAAD,EAAO,cAAc,KAArB,CAAsB,GAAG,CAAEH,MAAM,CAACJ,KAAlC,CAAyC,GAAG,CAAEI,MAAM,CAACL,IAArD,CAA2D,EAAE,CAAE,CAAES,EAAE,CAAE,CAAN,CAA/D,EATF,cAWE,KAAC,YAAD,EAAc,sBAAsB,CAAE,CAAEC,OAAO,CAAE,OAAX,CAAtC,UAA6DL,MAAM,CAACJ,KAApE,EAXF,GACOI,MAAM,CAACC,KADd,CADW,EAAZ,CADH,EADF,EAdF,GADF,CAoCD","sourcesContent":["import { useRef, useState } from 'react';\n// @mui\nimport { MenuItem, ListItemText, Stack } from '@mui/material';\n// hooks\nimport useLocales from '../../../hooks/useLocales';\n// components\nimport Image from '../../../components/Image';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const { allLang, currentLang, onChangeLang } = useLocales();\n\n  return (\n    <>\n      <IconButtonAnimate\n        ref={anchorRef}\n        onClick={() => setOpen(true)}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && { bgcolor: 'action.selected' }),\n        }}\n      >\n        <Image disabledEffect src={currentLang.icon} alt={currentLang.label} />\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={() => setOpen(false)} anchorEl={anchorRef.current}>\n        <Stack spacing={0.5} sx={{ p: 1 }}>\n          {allLang.map((option) => (\n            <MenuItem\n              key={option.value}\n              selected={option.value === currentLang.value}\n              onClick={() => {\n                onChangeLang(option.value);\n                setOpen(false);\n              }}\n              sx={{ height: 40, borderRadius: 1, px: 1 }}\n            >\n              <Image disabledEffect alt={option.label} src={option.icon} sx={{ mr: 2 }} />\n\n              <ListItemText primaryTypographyProps={{ variant: 'body2' }}>{option.label}</ListItemText>\n            </MenuItem>\n          ))}\n        </Stack>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}