{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//page for all users listing!\nimport React,{useState,useEffect,forwardRef,useRef}from'react';import{InputGroup,FormControl,Table,Form}from'react-bootstrap';import ModalHeader from'react-bootstrap/ModalHeader';import{useSelector}from'react-redux';import{Link,useNavigate,Redirect}from'react-router-dom';import{updatePassword,changeName,uploadImage}from'../../api/Profile/Profile';import Loader from\"react-loader-spinner\";import{BsSortDownAlt,BsFillTrashFill,BiBlock}from\"react-icons/bs\";import MaterialTable from'material-table';import{fetchboards,editBoards,deleteboard,getBoardById}from\"../../api/Boards/Boards\";import{createBoard}from'../../api/Boards/Boards';import{useParams}from'react-router-dom';import CircularProgress from'@mui/material/CircularProgress';import Card from'@mui/material/Card';import CardContent from'@mui/material/CardContent';import{Button}from'@mui/material';import{Modal as BootstrapModal}from'react-bootstrap';import Grid from'@mui/material/Grid';import Modal from'@mui/material/Modal';import Box from'@mui/material/Box';import{modalStyle}from'src/config';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddEditBoards(props){// const boardId = props.match.params.board/oardStatus;\nvar _useParams=useParams(),boardId=_useParams.boardId,boardStatus=_useParams.boardStatus;console.log('Check board id',boardId);var _useState=useState(boardId?\"edit\":\"add\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalVisible=_useState4[0],setModalVisible=_useState4[1];var navigate=useNavigate();//sets and display the line in the success modal!\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),modalLine1=_useState6[0],setModalLine1=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),modalLine2=_useState8[0],setModalLine2=_useState8[1];//sets the loader for add board button\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),addLoader=_useState10[0],setAddLoader=_useState10[1];//sets the loader for edit board button\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),editLoader=_useState12[0],setEditLoader=_useState12[1];//sets the loader for edit subject button\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),editFormLoader=_useState14[0],setEditFormLoader=_useState14[1];//sets the name of the board user want to add\nvar _useState15=useState(),_useState16=_slicedToArray(_useState15,2),boardName=_useState16[0],setboardName=_useState16[1];//shows the error when users try to add board without name\nvar _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),errorMessage=_useState18[0],setErrorMessage=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),error=_useState20[0],showError=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),boardIcon=_useState22[0],setBoardIcon=_useState22[1];//updating mode state on change of board id\nuseEffect(function(){setMode(boardId?\"edit\":\"add\");setEditFormLoader(true);getBoardById(boardId).then(function(res){console.log('res',res);if(res.status){//setting the fetched board by id into state variable\nsetboardName(res.course.name);}setEditFormLoader(false);}).catch(function(err){console.error(err);});},[boardId]);console.log(boardId,boardName,boardStatus);//edit the details basically the name of the existing board\nfunction editboardDetails(){setModalVisible(false);setEditLoader(true);showError(false);if(boardName!=''){editBoards(boardId,boardName,boardStatus,boardIcon).then(function(res){console.log('hello',res);if(res.status){setEditLoader(false);setModalLine1('Board details has been');setModalLine2('updated successfully');setModalVisible(true);}else{setEditLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.error(err);setEditLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the board name');}}//adds new board \nfunction addNewboard(){setModalVisible(false);setAddLoader(true);showError(false);if(boardName!=''){createBoard(boardName,'active',boardIcon).then(function(res){console.log(res);if(res.status){setAddLoader(false);setModalLine1('New Board Added');setModalLine2('Successfully');setModalVisible(true);}else{setAddLoader(false);showError(true);setErrorMessage('Error occured');}}).catch(function(err){console.log(err);setAddLoader(false);showError(true);setErrorMessage('Error occured');});}else{setAddLoader(false);showError(true);setErrorMessage('Please fill the board name');}}// function to reset\nvar reSetForm=function reSetForm(){setboardName('');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mt-3 txt-5282F0 fw-bold\",children:\"Boards Management\"}),/*#__PURE__*/_jsx(\"hr\",{className:\"mt-4\"}),editFormLoader?/*#__PURE__*/_jsx(\"div\",{className:\"w-100 py-2 px-6 me-3\",style:{display:'flex',height:'100vh',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\" align-items-center\",children:[/*#__PURE__*/_jsx(Card,{className:\"w-100\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[error?/*#__PURE__*/_jsx(\"div\",{className:\"row pt-2 \",style:{margin:5},children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-5  col-sm-12 clr-danger-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"   text-center\",children:errorMessage})})}):/*#__PURE__*/_jsx(_Fragment,{children:\" \"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-6 col-12\",children:/*#__PURE__*/_jsx(Form,{children:mode=='edit'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Board Name\"}),/*#__PURE__*/_jsx(Form.Control,{value:boardName,type:\"text\",placeholder:\"Enter board Name\",onChange:function onChange(e){return setboardName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Icon\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return setBoardIcon(e.target.files[0]);}})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Board Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter board Name\",onChange:function onChange(e){return setboardName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Choose Icon\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",placeholder:\"choose Sub Topic Exam Zip\",onChange:function onChange(e){return setBoardIcon(e.target.files[0]);}})]})]})})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:mode==\"edit\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return navigate('/dashboard/boards');},variant:\"outlined\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:editLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){editboardDetails();},children:\"Save Changes\"})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-2 col-md-2 col-6 mt-3 \",children:addLoader?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:/*#__PURE__*/_jsx(CircularProgress,{size:20})}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return addNewboard();},children:\"Add board\"})})})]})}),/*#__PURE__*/_jsx(Modal,{open:modalVisible,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,onClose:function onClose(){return setModalVisible(false);},children:/*#__PURE__*/_jsx(Box,{sx:modalStyle,children:/*#__PURE__*/_jsxs(BootstrapModal.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center txt-5282F0 my-4\",children:[/*#__PURE__*/_jsx(\"img\",{src:'/Assets/modalPhoto.png'}),/*#__PURE__*/_jsx(\"h3\",{children:modalLine1}),/*#__PURE__*/_jsx(\"h3\",{className:\"modalLowerText\",children:modalLine2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4 pb-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",className:\" px-5\",style:{marginRight:10},onClick:function onClick(){mode=='add'?/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm())}):/*#__PURE__*/_jsx(_Fragment,{children:(setModalVisible(false),reSetForm(),navigate('/dashboard/boards/addBoard'))});},children:\"Add New Board\"}),\"\\u2003\",/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:\" px-5\",style:{marginRight:10},onClick:function onClick(){return navigate('/dashboard/boards');},children:\"Back To Boards\"})]})]})})})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/boards/AddEditBoards.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchboards","editBoards","deleteboard","getBoardById","createBoard","useParams","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","AddEditBoards","props","boardId","boardStatus","console","log","mode","setMode","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","boardName","setboardName","errorMessage","setErrorMessage","error","showError","boardIcon","setBoardIcon","then","res","status","course","name","catch","err","editboardDetails","addNewboard","reSetForm","display","height","justifyContent","alignItems","margin","e","target","value","files","marginRight"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchboards, editBoards, deleteboard, getBoardById } from \"../../api/Boards/Boards\"\n\nimport { createBoard } from '../../api/Boards/Boards'\nimport { useParams } from 'react-router-dom'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\n\n\nexport default function AddEditBoards(props) {\n    // const boardId = props.match.params.board/oardStatus;\n    const { boardId, boardStatus } = useParams()\n    console.log('Check board id', boardId)\n    const [mode, setMode] = useState(boardId ? \"edit\" : \"add\")\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add board button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit board button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the board user want to add\n    const [boardName, setboardName] = useState();\n\n    //shows the error when users try to add board without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [boardIcon, setBoardIcon] = useState(\"\");\n\n    //updating mode state on change of board id\n    useEffect(() => {\n        setMode(boardId ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getBoardById(boardId).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched board by id into state variable\n                setboardName(res.course.name)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, [boardId])\n\n    console.log(boardId, boardName, boardStatus)\n    //edit the details basically the name of the existing board\n    function editboardDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (boardName != '') {\n            editBoards(boardId, boardName, boardStatus,boardIcon)\n                .then((res) => {\n                    console.log('hello', res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Board details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the board name');\n        }\n\n    }\n\n    //adds new board \n    function addNewboard() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (boardName != '') {\n            createBoard(boardName, 'active', boardIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Board Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the board name');\n        }\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setboardName('')\n    }\n\n\n    return (\n        <>\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Boards Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent>\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div className=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div className=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div className=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n                                        {/* <InputGroup className=\"mb-3\" >\n\n                                            {mode == 'edit' ? (\n                                                <FormControl\n                                                    placeholder=\"Enter board Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setboardName(e.target.value)}\n                                                    value={boardName}\n                                                    required\n                                                />\n                                            ) : (\n                                                <FormControl\n                                                    placeholder=\"Enter board Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setboardName(e.target.value)}\n                                                    required\n                                                />\n                                            )}\n\n                                        </InputGroup> */}\n\n                                        <Form>\n                                            {mode == 'edit' ? (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control value={boardName} type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setboardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control   type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setboardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            )}\n                                        </Form>\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        <Button onClick={() => navigate('/dashboard/boards')} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\">\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editboardDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\">\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" onClick={() => addNewboard()}\n                                        >Add board</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalVisible(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\" px-5\" style={{ marginRight: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/boards/addBoard')}</>) }}\n                            >Add New Board</Button>\n                            &emsp;\n                            <Button variant=\"contained\" className=\" px-5\" style={{ marginRight: 10 }}\n                                onClick={() => navigate('/dashboard/boards')}\n                            >Back To Boards</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}