{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\courses\\\\Courses.js\",\n    _s = $RefreshSig$();\n\n//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic';\nimport { deleteCourse, editCourse, getAllCourse, getCourseByFilter } from '../../api/Courses/Courses';\nimport { getAllClasses } from '../../api/Classes/Classes';\nimport { getAllBoard } from '../../api/Boards/Boards';\nimport { dataLimit } from '../../config';\nimport { getAllSubjects } from '../../api/Subject/Subject';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button } from '@mui/material';\nimport SingleCourseRow from './SingleCourseRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Courses(props) {\n  _s();\n\n  const tableIcons = materialTableIcons; //setting course data into a variable\n\n  const [course, setCourse] = useState([]); //setting course data into a variable\n\n  const [boardData, setBoardData] = useState([]); //setting course data into a variable\n\n  const [subjectData, setSubjectData] = useState([]);\n  const [noCourses, setNoCourses] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the topic who is blocked or deleted\n\n  const [actionCouseId, setCourseId] = useState();\n  const [subjectName, setSubjectName] = useState(''); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false); //sets the visibility of the filter modal \n\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [subjectID, setSubjectID] = useState();\n  const [topicID, setTopicID] = useState();\n  const [classesID, setClassesID] = useState();\n  const [boardID, setBoardID] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      console.log(filterDateFrom);\n      getCourseByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus, boardID, subjectID).then(res => {\n        console.log(\"res\", res);\n\n        if (res.status) {\n          setCourse(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setCourse([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false); // resetFilterData()\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoCourses(false);\n    setTableDataLoading(true);\n    getAllCourse(page, rowLimit).then(res => {\n      console.log('Courses Data', res);\n\n      if (res.status) {\n        //setting the fetched Course into state variable\n        setCourse(res.results.data);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //setting no Course found variable true \n        setNoCourses(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [page, rowLimit]);\n  useEffect(() => {\n    // fetching all boards\n    getAllBoard(page, rowLimit).then(res => {\n      console.log('Boards', res);\n\n      if (res.status) {\n        //setting the fetched board into state variable\n        setBoardData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all classes\n\n    getAllSubjects(page, rowLimit).then(res => {\n      console.log('Subjects', res);\n\n      if (res.status) {\n        //setting the fetched classes into state variable\n        setSubjectData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); //opens up the delete modal for deleting the Course\n\n  function openDeleteAlertModal(id, index) {\n    console.log(id, index);\n    setCourseId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the Course?');\n    setInfo('All the details of the Course will be removed from the Platform');\n    setModalAlertTitle(true);\n  } //function to change the status of the Course to blocked!\n\n\n  function changeCourseStatus(rowData, index, status) {\n    var _rowData$boardID, _rowData$subBoardID, _rowData$classesID, _rowData$subjectID;\n\n    editCourse(rowData._id, rowData.name, rowData === null || rowData === void 0 ? void 0 : (_rowData$boardID = rowData.boardID) === null || _rowData$boardID === void 0 ? void 0 : _rowData$boardID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subBoardID = rowData.subBoardID) === null || _rowData$subBoardID === void 0 ? void 0 : _rowData$subBoardID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$classesID = rowData.classesID) === null || _rowData$classesID === void 0 ? void 0 : _rowData$classesID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subjectID = rowData.subjectID) === null || _rowData$subjectID === void 0 ? void 0 : _rowData$subjectID._id, rowData === null || rowData === void 0 ? void 0 : rowData.description, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        // const index = rowData.tableData.id;\n        //updating Course status in state array\n        const updatedRows = [...course];\n        updatedRows[index].status = status;\n        setCourse(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  } //sets the filter data to null\n\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to delete the Subject from the database\n\n\n  function deleteCourseProfile() {\n    setActionLoader(true);\n    deleteCourse(actionCouseId).then(res => {\n      // console.log(res)\n      if (res.status) {\n        const index = rowId; //removing deleted Courses from state array \n\n        const updatedRows = [...course];\n        updatedRows.splice(index, 1);\n        setCourse(updatedRows);\n        setModalContent('Course Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n    console.log('Course side check', deleteCourseProfile);\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Courses Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\",\n                onClick: () => navigate('/dashboard/courses/addCourse'),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New Course\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Added On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Board Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Qualification Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: course.map((row, index) => /*#__PURE__*/_jsxDEV(SingleCourseRow, {\n              changeCourseStatus: changeCourseStatus,\n              row: row,\n              index: index,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 57\n            }, this) // {console.log('single course',row )                            \n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        colSpan: 3,\n        count: totalPages * rowLimit,\n        rowsPerPage: rowLimit,\n        page: page - 1,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: onPageChange,\n        onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this Course?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteCourseProfile() : changeCourseStatus();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: completionModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Updated Courses!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: modalContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary px-5\",\n              onClick: () => setCompletionModal(false),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Board\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setBoardID(e.target.value),\n                  value: boardID,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Board\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 41\n                  }, this), boardData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item._id,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setSubjectID(e.target.value),\n                  value: classesID,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 41\n                  }, this), subjectData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item._id,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\" // onClick={()=>resetFilterData()}\n              ,\n              onClick: () => resetFilterData(),\n              children: \"Reset \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 29\n            }, this), \"\\u2003\", filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(Loader, {\n                type: \"Puff\",\n                color: \"white\",\n                height: 30,\n                width: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                applyFilters();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Courses, \"LqlDgnAxr7E6RbPUya8U4o+WRxI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/courses/Courses.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","materialTableIcons","modalStyle","getAllTopics","getTopicByFilter","deleteCourse","editCourse","getAllCourse","getCourseByFilter","getAllClasses","getAllBoard","dataLimit","getAllSubjects","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","Button","SingleCourseRow","Courses","props","tableIcons","course","setCourse","boardData","setBoardData","subjectData","setSubjectData","noCourses","setNoCourses","months","modalTitle","setModalTitle","tableDataLoading","setTableDataLoading","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionCouseId","setCourseId","subjectName","setSubjectName","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","subjectID","setSubjectID","topicID","setTopicID","classesID","setClassesID","boardID","setBoardID","sortByDate","setSortByDate","filterLoader","setFilterLoader","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","navigate","console","log","then","res","status","results","data","catch","err","materialTableRef","error","openDeleteAlertModal","id","index","changeCourseStatus","rowData","_id","name","subBoardID","description","updatedRows","alert","resetFilterData","deleteCourseProfile","splice","applyFilters","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","e","p","mx","map","row","inputProps","native","marginTop","item"],"mappings":"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","sourcesContent":["//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\n// import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\nimport { deleteCourse, editCourse, getAllCourse, getCourseByFilter } from '../../api/Courses/Courses'\nimport { getAllClasses } from '../../api/Classes/Classes'\nimport { getAllBoard } from '../../api/Boards/Boards'\nimport { dataLimit } from '../../config';\nimport { getAllSubjects } from '../../api/Subject/Subject';\n\n\n\n\n\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Button } from '@mui/material';\nimport SingleCourseRow from './SingleCourseRow';\n\nexport default function Courses(props) {\n    const tableIcons = materialTableIcons\n    //setting course data into a variable\n    const [course, setCourse] = useState([]);\n\n    //setting course data into a variable\n    const [boardData, setBoardData] = useState([]);\n\n    //setting course data into a variable\n    const [subjectData, setSubjectData] = useState([]);\n\n    const [noCourses, setNoCourses] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id and name of the topic who is blocked or deleted\n    const [actionCouseId, setCourseId] = useState();\n    const [subjectName, setSubjectName] = useState('');\n\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    //sets the visibility of the filter modal \n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n    const [subjectID, setSubjectID] = useState()\n    const [topicID, setTopicID] = useState()\n    const [classesID, setClassesID] = useState()\n    const [boardID, setBoardID] = useState()\n\n\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [totalPages, setTotalPages] = useState();\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            console.log(filterDateFrom)\n            getCourseByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus, boardID, subjectID)\n                .then((res) => {\n                    console.log(\"res\", res)\n                    if (res.status) {\n                        setCourse(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setCourse([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                    // resetFilterData()\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n    }, [search, filterLoader])\n\n    const materialTableRef = useRef()\n    useEffect(() => {\n        setNoCourses(false)\n        setTableDataLoading(true)\n        getAllCourse(page, rowLimit).then((res) => {\n            console.log('Courses Data', res);\n            if (res.status) {\n                //setting the fetched Course into state variable\n                setCourse(res.results.data);\n                setTotalPages(res.results.totalPages)\n            }\n            else {\n                //setting no Course found variable true \n                setNoCourses(true);\n            }\n            setTableDataLoading(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [page, rowLimit])\n\n\n    useEffect(() => {\n        // fetching all boards\n        getAllBoard(page, rowLimit).then((res) => {\n            console.log('Boards', res);\n            if (res.status) {\n                //setting the fetched board into state variable\n                setBoardData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        // fetching all classes\n        getAllSubjects(page, rowLimit).then((res) => {\n            console.log('Subjects', res);\n            if (res.status) {\n                //setting the fetched classes into state variable\n                setSubjectData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, [])\n\n    //opens up the delete modal for deleting the Course\n    function openDeleteAlertModal(id, index) {\n        console.log(id, index)\n\n        setCourseId(id);\n        setRowId(index)\n        setModalMode('delete');\n        setModalTitle('Delete the Course?');\n        setInfo('All the details of the Course will be removed from the Platform');\n        setModalAlertTitle(true)\n    }\n\n    //function to change the status of the Course to blocked!\n    function changeCourseStatus(rowData, index, status) {\n        editCourse(rowData._id, rowData.name, rowData?.boardID?._id, rowData?.subBoardID?._id, rowData?.classesID?._id, rowData?.subjectID?._id, rowData?.description, status)\n            .then((res => {\n                // console.log('res',res);\n                if (res.status) {\n                    // const index = rowData.tableData.id;\n                    //updating Course status in state array\n                    const updatedRows = [...course];\n                    updatedRows[index].status = status;\n                    setCourse(updatedRows);\n\n                }\n                else {\n                    alert(\"error occured\")\n                }\n            }))\n            .catch((err => {\n                console.log('err', err);\n            }))\n    }\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to delete the Subject from the database\n    function deleteCourseProfile() {\n        setActionLoader(true)\n        deleteCourse(actionCouseId)\n            .then((res) => {\n                // console.log(res)\n                if (res.status) {\n                    const index = rowId;\n                    //removing deleted Courses from state array \n                    const updatedRows = [...course]\n                    updatedRows.splice(index, 1)\n                    setCourse(updatedRows);\n                    setModalContent('Course Deleted successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                    setActionLoader(false)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n            console.log('Course side check',deleteCourseProfile)\n    }\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n    // function for pagination\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Courses Management</h5>\n            {/* <hr className=\"mt-4\" /> */}\n            <div className=\"d-flex align-items-center mt-3\">\n                <Card className=\"w-100\">\n                    <CardContent className=\"pageHeaderCard\">\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mx: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\n                                    onClick={() => navigate('/dashboard/courses/addCourse')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Course</Button>\n                                <Button variant=\"contained\" className=\"\" >Export</Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            {/* <div className=\"row\" style={{ marginBottom: 10, marginLeft: 50 }}>\n                            <div className=\"col-lg-5 col-sm-6 col-12\">\n                            </div>\n                            <div className=\"col-lg-3 col-md-2 col-6 \">\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-12\">\n                                <Button variant=\"contained\" className=\"btn btn-primary py-2 px-5 me-3\"\n                                    onClick={() => navigate('/dashboard/courses/addCourse')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Course</Button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <InputGroup className=\"mb-3\" >\n                                    <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-lg-4 col-md-2 col-6 \">\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className=\"col-lg-2 col-md-2 col-6 \">\n                                <Button variant=\"contained\" className=\"py-2 px-5 me-3\" >Export</Button>\n                            </div>\n                        </div> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying Subject details  */}\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell >Name</TableCell>\n                            <TableCell >Added On</TableCell>\n                            <TableCell >Board Name</TableCell>\n                            <TableCell >Qualification Name</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Action</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {course.map((row, index) => <SingleCourseRow changeCourseStatus={changeCourseStatus} row={row} index={index} openDeleteAlertModal={openDeleteAlertModal} />\n                                    // {console.log('single course',row )                            \n                                )}\n                                    \n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n            <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                <TablePagination\n\n                    rowsPerPageOptions={[5, 10, 25]}\n                    colSpan={3}\n                    count={totalPages * rowLimit}\n                    rowsPerPage={rowLimit}\n                    page={page - 1}\n                    SelectProps={{\n                        inputProps: {\n                            'aria-label': 'rows per page',\n                        },\n                        native: true,\n                    }}\n                    onPageChange={onPageChange}\n                    onRowsPerPageChange={onRowPerChange}\n                // ActionsComponent={TablePaginationActions}\n                />\n            </div>\n            {/* </div> */}\n\n            {/* Modal for delete or blocking confirmation */}\n            <Modal\n                open={modalAlertTitle}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalAlertTitle(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    {modalTitle}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>Are you sure to {modalMode} this Course?</p>\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\n                                onClick={() => setModalAlertTitle(false)}\n                            >Cancel</Button>\n                            &emsp;\n                            {actionLodaer ? (\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\n                                    onClick={() => { modalMode == 'delete' ? (deleteCourseProfile()) : (changeCourseStatus()) }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for successful deletion and block */}\n            <Modal\n                show={completionModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Box style={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Updated Courses!\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </Modal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>{modalContent}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <button className=\"btn btn-primary px-5\"\n                                onClick={() => setCompletionModal(false)}\n                            >OK</button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setFilterModal(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header>\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Added Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Board</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setBoardID(e.target.value)} value={boardID}>\n                                        <option value={null}>Board</option>\n                                        {boardData.map((item, index) => (\n                                            <option value={item._id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Subject</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setSubjectID(e.target.value)} value={classesID}>\n                                        <option value={null}>Subject</option>\n                                        {subjectData.map((item, index) => (\n                                            <option value={item._id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option value={null}>Status</option>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"inactive\">Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\n                                // onClick={()=>resetFilterData()}\n                                onClick={() => resetFilterData()}\n                            >Reset </Button>\n                            &emsp;\n                            {filterLoader ? (\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\n                                    <Loader\n                                        type=\"Puff\"\n                                        color=\"white\"\n                                        height={30}\n                                        width={30}\n                                    />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\n                                    onClick={() => { applyFilters() }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}