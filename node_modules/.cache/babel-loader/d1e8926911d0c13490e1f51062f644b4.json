{"ast":null,"code":"import { objToQueryString } from '../../config';\nimport { apiUrl } from '../../config'; //Fetch all users data using offset and limit!\n\nasync function fetchCMS() {\n  const data = await fetch(apiUrl + '/cms/getCMS/', {\n    method: 'GET',\n    headers: {// Accept: 'application/json',\n      // 'Content-Type': 'application/json',\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nasync function editTermAndConditions(cmsID, termsAndConditions) {\n  var details = {\n    \"termsAndConditions\": termsAndConditions\n  };\n  var formBody = [];\n\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/cms/editTerms/' + cmsID, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n}\n\nasync function editAboutUs(cmsID, aboutUs) {\n  var details = {\n    \"aboutUs\": aboutUs\n  };\n  var formBody = [];\n\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/cms/editAboutUs/' + cmsID, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n}\n\nasync function editPrivacyPolicy(cmsID, privacyPolicy) {\n  var details = {\n    \"privacyPolicy\": privacyPolicy\n  };\n  var formBody = [];\n\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/cms/editPolicy/' + cmsID, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n} //Fetch all faq data using offset and limit!\n\n\nasync function getAllFQA(page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit\n  });\n  var apiLink;\n  if (queryString == null) apiLink = apiUrl + '/faq/filterFaq';else apiLink = apiUrl + '/faq/filterFaq?' + queryString;\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n} //function to create the FAQ\n\n\nasync function createFAQ(ques, ans) {\n  var details = {\n    \"ques\": ques,\n    \"ans\": ans\n  };\n  var formBody = [];\n\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/faq/createFaq', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n} //function to edit the FAQ\n\n\nasync function editFAQ(faqID, ques, ans) {\n  var details = {\n    \"ques\": ques,\n    \"ans\": ans\n  };\n  var formBody = [];\n\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/faq/editFaq/' + faqID, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formBody\n  }).then(res => res.json());\n  return data;\n} //api to delete the Faq from the database\n\n\nasync function deleteFAQ(faqID) {\n  const data = await fetch(apiUrl + '/faq/deleteFaqById/' + faqID, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json());\n  return data;\n}\n\nexport { fetchCMS, editTermAndConditions, editAboutUs, editPrivacyPolicy, getAllFQA, deleteFAQ, createFAQ, editFAQ };","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/CMS/CMS.js"],"names":["objToQueryString","apiUrl","fetchCMS","data","fetch","method","headers","then","res","json","editTermAndConditions","cmsID","termsAndConditions","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","Accept","body","editAboutUs","aboutUs","editPrivacyPolicy","privacyPolicy","getAllFQA","page","limit","queryString","apiLink","createFAQ","ques","ans","editFAQ","faqID","deleteFAQ"],"mappings":"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","sourcesContent":["import { objToQueryString } from '../../config';\n  import { apiUrl } from '../../config';\n\n//Fetch all users data using offset and limit!\nasync function fetchCMS() {\n    const data = await fetch(apiUrl + '/cms/getCMS/', {\n        method: 'GET',\n        headers: {\n            // Accept: 'application/json',\n            // 'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n\n}\nasync function editTermAndConditions(cmsID, termsAndConditions) {\n\n    var details = {\n        \"termsAndConditions\": termsAndConditions,\n    };\n\n    var formBody = [];\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/cms/editTerms/' + cmsID, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    return data;\n\n}\n\nasync function editAboutUs(cmsID, aboutUs) {\n\n    var details = {\n        \"aboutUs\": aboutUs,\n    };\n\n    var formBody = [];\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/cms/editAboutUs/' + cmsID, {\n        method: 'PATCH',\n        headers: {\n            // Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    return data;\n\n}\n\nasync function editPrivacyPolicy(cmsID, privacyPolicy) {\n\n    var details = {\n        \"privacyPolicy\": privacyPolicy,\n    };\n\n    var formBody = [];\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/cms/editPolicy/' + cmsID, {\n        method: 'PATCH',\n        headers: {\n            // Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//Fetch all faq data using offset and limit!\nasync function getAllFQA(page, limit) {\n    const queryString = objToQueryString({\n        page: page,\n        limit: limit,\n    })\n    var apiLink;\n    if (queryString == null)\n        apiLink = apiUrl + '/faq/filterFaq'\n    else\n        apiLink = apiUrl + '/faq/filterFaq?' + queryString\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n//function to create the FAQ\nasync function createFAQ(ques , ans) {\n\n    var details = {\n        \"ques\": ques,\n        \"ans\": ans\n    };\n\n    var formBody = [];\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/faq/createFaq', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//function to edit the FAQ\n\nasync function editFAQ(faqID, ques , ans ) {\n\n    var details = {\n        \"ques\": ques,\n        \"ans\": ans\n    };\n\n    var formBody = [];\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/faq/editFaq/' + faqID, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//api to delete the Faq from the database\nasync function deleteFAQ(faqID) {\n    const data = await fetch(apiUrl + '/faq/deleteFaqById/' + faqID, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\nexport { fetchCMS, editTermAndConditions, editAboutUs, editPrivacyPolicy, getAllFQA, deleteFAQ,createFAQ,editFAQ }"]},"metadata":{},"sourceType":"module"}