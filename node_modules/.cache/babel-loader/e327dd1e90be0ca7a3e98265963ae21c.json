{"ast":null,"code":"// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [// DecimalFloatingPointLiteral\n  // including ExponentPart\n  {\n    begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` + `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  }, // excluding ExponentPart\n  {\n    begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)`\n  }, {\n    begin: `(${frac})[fFdD]?\\\\b`\n  }, {\n    begin: `\\\\b(${decimalDigits})[fFdD]\\\\b`\n  }, // HexadecimalFloatingPointLiteral\n  {\n    begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` + `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b`\n  }, // DecimalIntegerLiteral\n  {\n    begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b'\n  }, // HexIntegerLiteral\n  {\n    begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b`\n  }, // OctalIntegerLiteral\n  {\n    begin: '\\\\b0(_*[0-7])*[lL]?\\\\b'\n  }, // BinaryIntegerLiteral\n  {\n    begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b'\n  }],\n  relevance: 0\n};\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\n\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n/** @type LanguageFn */\n\n\nfunction java(hljs) {\n  hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = ['synchronized', 'abstract', 'private', 'var', 'static', 'if', 'const ', 'for', 'while', 'strictfp', 'finally', 'protected', 'import', 'native', 'final', 'void', 'enum', 'else', 'break', 'transient', 'catch', 'instanceof', 'volatile', 'case', 'assert', 'package', 'default', 'public', 'try', 'switch', 'continue', 'throws', 'protected', 'public', 'private', 'module', 'requires', 'exports', 'do'];\n  const BUILT_INS = ['super', 'this'];\n  const LITERALS = ['false', 'true', 'null'];\n  const TYPES = ['char', 'boolean', 'long', 'float', 'int', 'byte', 'short', 'double'];\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [\"self\"] // allow nested () inside our annotation\n\n    }]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [hljs.C_BLOCK_COMMENT_MODE],\n    endsParent: true\n  };\n  return {\n    name: 'Java',\n    aliases: ['jsp'],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        // eat up @'s in emails to prevent them to be recognized as doctags\n        begin: /\\w+@/,\n        relevance: 0\n      }, {\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }), // relevance boost\n    {\n      begin: /import java\\.[a-z]+\\./,\n      keywords: \"import\",\n      relevance: 2\n    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      begin: /\"\"\"/,\n      end: /\"\"\"/,\n      className: \"string\",\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      match: [/\\b(?:class|interface|enum|extends|implements|new)/, /\\s+/, JAVA_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      }\n    }, {\n      begin: [JAVA_IDENT_RE, /\\s+/, JAVA_IDENT_RE, /\\s+/, /=/],\n      className: {\n        1: \"type\",\n        3: \"variable\",\n        5: \"operator\"\n      }\n    }, {\n      begin: [/record/, /\\s+/, JAVA_IDENT_RE],\n      className: {\n        1: \"keyword\",\n        3: \"title.class\"\n      },\n      contains: [PARAMS, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, {\n      // Expression keywords prevent 'keyword Name(...)' from being\n      // recognized as a function definition\n      beginKeywords: 'new throw return else',\n      relevance: 0\n    }, {\n      begin: ['(?:' + GENERIC_IDENT_RE + '\\\\s+)', hljs.UNDERSCORE_IDENT_RE, /\\s*(?=\\()/],\n      className: {\n        2: \"title.function\"\n      },\n      keywords: KEYWORDS,\n      contains: [{\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [ANNOTATION, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, NUMERIC, hljs.C_BLOCK_COMMENT_MODE]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, NUMERIC, ANNOTATION]\n  };\n}\n\nmodule.exports = java;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/java.js"],"names":["decimalDigits","frac","hexDigits","NUMERIC","className","variants","begin","relevance","recurRegex","re","substitution","depth","replace","_","java","hljs","regex","JAVA_IDENT_RE","GENERIC_IDENT_RE","MAIN_KEYWORDS","BUILT_INS","LITERALS","TYPES","KEYWORDS","keyword","literal","type","built_in","ANNOTATION","contains","end","PARAMS","keywords","C_BLOCK_COMMENT_MODE","endsParent","name","aliases","illegal","COMMENT","C_LINE_COMMENT_MODE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","match","beginKeywords","UNDERSCORE_IDENT_RE","module","exports"],"mappings":"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","sourcesContent":["// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\nLanguage: Java\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\nCategory: common, enterprise\nWebsite: https://www.java.com/\n*/\n\n/**\n * Allows recursive regex expressions to a given depth\n *\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\n * (abc(abc(abc)))\n *\n * @param {string} re\n * @param {RegExp} substitution (should be a g mode regex)\n * @param {number} depth\n * @returns {string}``\n */\nfunction recurRegex(re, substitution, depth) {\n  if (depth === -1) return \"\";\n\n  return re.replace(substitution, _ => {\n    return recurRegex(re, substitution, depth - 1);\n  });\n}\n\n/** @type LanguageFn */\nfunction java(hljs) {\n  hljs.regex;\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE +\n    recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\n  const MAIN_KEYWORDS = [\n    'synchronized',\n    'abstract',\n    'private',\n    'var',\n    'static',\n    'if',\n    'const ',\n    'for',\n    'while',\n    'strictfp',\n    'finally',\n    'protected',\n    'import',\n    'native',\n    'final',\n    'void',\n    'enum',\n    'else',\n    'break',\n    'transient',\n    'catch',\n    'instanceof',\n    'volatile',\n    'case',\n    'assert',\n    'package',\n    'default',\n    'public',\n    'try',\n    'switch',\n    'continue',\n    'throws',\n    'protected',\n    'public',\n    'private',\n    'module',\n    'requires',\n    'exports',\n    'do'\n  ];\n\n  const BUILT_INS = [\n    'super',\n    'this'\n  ];\n\n  const LITERALS = [\n    'false',\n    'true',\n    'null'\n  ];\n\n  const TYPES = [\n    'char',\n    'boolean',\n    'long',\n    'float',\n    'int',\n    'byte',\n    'short',\n    'double'\n  ];\n\n  const KEYWORDS = {\n    keyword: MAIN_KEYWORDS,\n    literal: LITERALS,\n    type: TYPES,\n    built_in: BUILT_INS\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + JAVA_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [ \"self\" ] // allow nested () inside our annotation\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    keywords: KEYWORDS,\n    relevance: 0,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    endsParent: true\n  };\n\n  return {\n    name: 'Java',\n    aliases: [ 'jsp' ],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      // relevance boost\n      {\n        begin: /import java\\.[a-z]+\\./,\n        keywords: \"import\",\n        relevance: 2\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/,\n        className: \"string\",\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        match: [\n          /\\b(?:class|interface|enum|extends|implements|new)/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        }\n      },\n      {\n        begin: [\n          JAVA_IDENT_RE,\n          /\\s+/,\n          JAVA_IDENT_RE,\n          /\\s+/,\n          /=/\n        ],\n        className: {\n          1: \"type\",\n          3: \"variable\",\n          5: \"operator\"\n        }\n      },\n      {\n        begin: [\n          /record/,\n          /\\s+/,\n          JAVA_IDENT_RE\n        ],\n        className: {\n          1: \"keyword\",\n          3: \"title.class\"\n        },\n        contains: [\n          PARAMS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        begin: [\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\n          hljs.UNDERSCORE_IDENT_RE,\n          /\\s*(?=\\()/\n        ],\n        className: {\n          2: \"title.function\"\n        },\n        keywords: KEYWORDS,\n        contains: [\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              ANNOTATION,\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              NUMERIC,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      NUMERIC,\n      ANNOTATION\n    ]\n  };\n}\n\nmodule.exports = java;\n"]},"metadata":{},"sourceType":"script"}