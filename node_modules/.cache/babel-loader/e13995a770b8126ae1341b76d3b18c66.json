{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\evaluation\\\\Evaluationview.js\",\n    _s = $RefreshSig$();\n\nimport { dynamic, InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap'; // import { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses'\n// import { createEvaluation } from '../../api/Evaluation/Evaluation'\n\nimport TablePagination from '@mui/material/TablePagination';\nimport { apiUrl } from '../../config';\nimport { createAnswer, getSingleAnswer, editAnswer, getAnswerapi } from '../../api/Answer/Answer';\nimport { getQuestion } from '../../api/Question/Question'; // import { createStudentevalans } from '../../api/StudentEvalAns/studentevalans'\n// import { createStudenteval } from '../../api/StudentEval/studenteval'\n\nimport { getAllEvaluation, deleteCourse, getEvaluationByFilter, getEvaluationById, getAllUserEvaluations } from '../../api/Evaluation/Evaluation';\nimport { Box, CardContent, CardMedia, Divider, Fade, Grid, Grow, TableRow, Typography } from '@mui/material'; // import { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\n// import { getAllBoard } from '../../api/Boards/Boards'\n// import { getAllSubjects } from '../../api/Subject/Subject'\n\nimport test2 from './image/geogebra-export.png';\nimport { getAllCourses } from '../../api/Courses/Courses'; // import { getAllSubBoard } from 'src/api/SubBoard/SubBoard'\n// import { getAllClasses } from '../../api/Classes/Classes';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport \"./app.css\";\nimport ReactPaginate from \"react-paginate\";\nimport TableContainer from '@mui/material/TableContainer';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport Container from '@material-ui/core/Container'; // import Addmoreinput from './dynamic';\n// import Dynfield from './dynfield';\n// import RemoveIcon from '@material-ui/icons/Remove';\n// import AddIcon from '@material-ui/icons/Add';\n\nimport Icon from '@material-ui/core/Icon'; // import App from './test'\n\nimport SaveIcon from '@mui/icons-material/Save'; // import * as serviceWorker from './serviceWorker';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n\nimport { Button, TextField } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap'; // import Grid from '@mui/material/Grid';\n\nimport Modal from '@mui/material/Modal'; // import Box from '@mui/material/Box';\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal,  InputGroup, FormControl, Nav, Row, Col, Sonnet } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\"; // import { getUserById, changeStatus, deleteUser } from \"../../api/Users/Users\"\n// import { imageBaseUrl } from '../../config';\n// import Tabs from 'react-bootstrap/Tabs'\n// import { materialTableIcons } from './config';\n// import MaterialTable from 'material-table'\n// import { getAllUserCourses } from '../../api/Courses/Courses'\n// import { CategoryScale, PointElement, LinearScale, BarElement, Title, Tooltip, Legend, Chart } from 'chart.js';\n// import { Bar } from 'react-chartjs-2';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab'; // import Typography from '@mui/material/Typography';\n// import Box from '@mui/material/Box';\n// import CardContent from '@mui/material/CardContent';\n// import Table from '@mui/material/Table';\n\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell'; // import TableContainer from '@mui/material/TableContainer';\n\nimport TableHead from '@mui/material/TableHead'; // import { Button } from '@mui/material';\n// import Grid from '@mui/material/Grid';\n// import CircularProgress from '@mui/material/CircularProgress';\n// import Modal from '@mui/material/Modal';\n// import UserCoursesRow  from './UserCoursesRow'\n\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { baseUrl, dataLimit } from '../../config'; // import test2 from './test2';\n// import { update } from 'lodash';\n// import { dataLimit } from '../../config';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst perpage = 1;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n})); // import UserSubscriptionRow from './UserSubscriptionRow'\n// import { getEarningsByUserId } from 'src/api/Earnings/Earnings'\n// import UserPaymentRow from './UserPaymentRow'\n\nvar className = '';\nvar boardName = '';\nvar subBoardName = '';\nvar subjectName = '';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport default function User(props) {\n  _s();\n\n  // const courseID = props.match.params.courseId;\n  // const courseStatus = props.match.params.courseStatus;\n  const {\n    courseID,\n    courseStatus\n  } = useParams(); // console.log(props)\n  // const subjectStatus = props.match.params.subjectStatus;\n\n  const [mode, setMode] = useState(courseID ? \"edit\" : \"add\"); //setting subjects data into a variable\n\n  const [course2, setCourse2] = useState({});\n  const [subject3, setSubject3] = useState({}); //setting course data into a variable\n\n  const [boardData, setBoardData] = useState([]); //setting course data into a variable\n\n  const [classesData, setClassesData] = useState([]);\n  const [coursesData, setCoursesData] = useState([]);\n  const [single, setSingle] = useState([]);\n  const [answertable, setAnswertable] = useState([]);\n  const [allanswer, setAllanswer] = useState([]);\n  const [multipleanswer, setMultipleanswer] = useState([]);\n  const [rowLimit, setRowLimit] = useState(dataLimit); //setting course data into a variable\n\n  const [subjectData, setSubjectData] = useState([]);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [noCourses, setNoCourses] = useState(false); //setting course data into a variable\n\n  const topicData = useRef([]);\n  const {\n    upid,\n    boardStatus\n  } = useParams();\n  console.log('Check Update id', upid);\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success mo\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add course button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the course name user want to add\n\n  const [name, setName] = useState(); //sets topic description user want to add\n\n  const [description1, setDescription1] = useState(); //sets board user want to add\n\n  const [board, setBoard] = useState();\n  const [board2, setBoard2] = useState(); //sets classes user want to add\n  // const [classes, setClasses] = useState()\n\n  const [classes1, setClasses1] = useState();\n  const [totalPages, setTotalPages] = useState(); //sets subject user want to add\n  // const [subject, setSubject] = useState()\n\n  const [subject2, setSubject2] = useState();\n  const [currentPage, setCurrentPage] = useState(0); //sets topic  user want to add\n\n  const [topic, setTopic] = useState([]);\n  const [chooseTopic, setChooseTopic] = useState([]);\n  const [newTopic, setNewTopic] = useState(1); // console.log(chooseTopic)\n\n  const [subBoardsData, setSubBoardsData] = useState([]); // console.log(subBoardsData)\n\n  const [selectedSubBoard, setSelectedSubBoard] = useState(); //sets course picture user want to add\n\n  const [coursePicture, setCoursePicture] = useState();\n  const [course, setCourse] = useState([]); //sets course picture preview user want to add\n\n  const [picturePreview, setPicturePreview] = useState(null); //referance variable for video file choose\n\n  let chooseCoursePictureRef = useRef();\n  let chooseTopicRef = useRef(); // sets varialbe for video status\n\n  const [videoStatus, setVideoStatus] = useState(false); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false);\n  const [page, setPage] = useState(1);\n  const [test, setTest] = useState();\n  const [limit, setLimit] = useState(100);\n  const [classState, setClassState] = useState('');\n  const [boardState, setBoardState] = useState('');\n  const [subBoardState, setSubBoardState] = useState('');\n  const [subjectState, setSubjectState] = useState('');\n  const [courseState, setCourseState] = useState('');\n  const [foodState, setFoodState] = useState();\n  const [formula, setFormula] = useState();\n  const [question, setQuestion] = useState('');\n  const [media, setMedia] = useState(''); // const courseID ='';\n  // const [editFormLoader, setEditFormLoader] = useState(false)\n  // const [mode, setMode] = useState(courseID ? \"edit\" : \"add\");\n\n  const [hint, setHint] = useState('');\n  const [type, setType] = useState('');\n  const [marks, setMarks] = useState('');\n  const [ansid, setAnsID] = useState('');\n  console.log('Answer ID', ansid);\n  const [stuevalid, setStuevalid] = useState();\n  const [evalansid, setEvalansid] = useState();\n  const [questionid, setquestionid] = useState();\n  const [qmark, setQmark] = useState(); // const [stuevalid, setstuevalid] = useState()\n\n  const [evalid, setevalid] = useState();\n  const [studentname, setStudentname] = useState();\n  const [examdatetaken, setExamdatetaken] = useState(); // const [subject, setSubject] = useState()\n  // const [course, setCourse] = useState()\n\n  const [answerstud, setAnswerstud] = useState();\n  const [studevalid, setStudevalid] = useState(0);\n  const [questionindex, setQuestionindex] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [showhide, setShowhide] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const {\n    id\n  } = useParams();\n  console.log('only id', id);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //constant for storing the details of the particular user\n\n  const [userDetailsById, setUserDetailsById] = useState([]);\n  const [userProfileImg, setUserProfileImg] = useState(''); //sets the all courses of user\n\n  const [userCourses, setUserCourses] = useState([]); // console.log('userCourses', userCourses)\n  //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false);\n  const [filterModal, setFilterModal] = useState(false); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [completedCouresNum, setCompletedCouresNum] = useState(0); //variable to configure whether the user of that particular id is available or not\n\n  const [noUserFound, setNoUserFound] = useState(false); // example\n  //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(false);\n  const [tab, setTab] = React.useState(0);\n  const [userPayments, setUserPayments] = useState([]);\n  const [totalPaymentAmount, setTotalPaymentAmount] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  }; // var answerindex = 0\n  // console.log('request params', id)\n\n\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl); // free memory when ever this component is unmounted\n\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n\n  const onSelectFile = e => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    } // I've kept this example simple by using the first image instead of multiple\n\n\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const gotonext = async () => {\n    let newQuestionIndex = questionindex + 1;\n    if (newQuestionIndex === single.length) return;\n    setQuestionindex(newQuestionIndex, nextdata(newQuestionIndex)); // alert(questionindex)\n\n    return true;\n  };\n\n  const gotoprev = async () => {\n    let newQuestionIndex = questionindex - 1;\n    console.log(newQuestionIndex, \"questionIndexxxxx\");\n    if (newQuestionIndex < 0) return;\n    setQuestionindex(newQuestionIndex, prevdata(newQuestionIndex));\n    return true;\n  }; // Get the img object using its Id\n\n\n  const img = document.getElementById(\"img1\"); // Function to increase image size\n\n  function enlargeImg() {\n    // Set image size to 1.5 times original\n    img.style.transform = \"scale(1.5)\"; //   img.style.transform = \"scaleX(1.5)\";\n\n    img.style.width = \"60%\"; // Animation effect\n\n    img.style.transition = \"transform 0.45s ease\";\n  }\n\n  function resetImg() {\n    // Set image size to original\n    img.style.transform = \"scale(1)\";\n    img.style.transition = \"transform 0.25s ease\";\n  }\n\n  const handleshowhide = event => {\n    const getuser = event.target.value;\n    setShowhide(getuser);\n  };\n\n  const handleSubmit = e => {\n    //e.preventDefault();\n    alert('Answer Submitted');\n    setAnswer('');\n  };\n\n  const addNewEvaluation = async () => {\n    //    const nextLabel={\"next\"};\n    // gotonext();\n    setAnswerstud('');\n    alert(\" Answer submitted\");\n    console.log('This is get all evaluation data', setCourse2);\n\n    const handleNext = () => {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }; //         if (studevalid==0){\n    //         var studevalid1 = await createStudenteval(course2, subject3, evalid, studentname, examdatetaken, status)\n    //         setStudevalid(studevalid1)\n    //         console.log('WORKING STUDEVALIDVAR', studevalid)\n    //         createStudentevalans(studevalid1, answerstud, question, hint, marks, type, stuevalid, evalansid, questionid, qmark)\n    //         console.log('studentevalans', createStudentevalans)\n    //     }\n    //     else if(studevalid!=0){\n    //         var studevalid115 = createStudentevalans(studevalid, answerstud, question, hint, marks, type, stuevalid, evalansid, questionid, qmark)\n    //         console.log('studentevalans', createStudentevalans)\n    // }\n\n\n    editAnswer(hint, type, marks, answer, ansid); // console.log('edit answer client', hint)       \n  };\n\n  const [courseImage, setCourseImage] = useState(null);\n  useEffect(async () => {\n    if (board) {\n      const response = await getAllSubBoard(board, 1, 1000);\n\n      if (response.status) {\n        setSubBoardsData(response.results.data);\n      }\n    }\n  }, [board]);\n\n  const nextdata = async qindex => {\n    console.log(\"allanswer\", allanswer);\n    console.log(\"single\", single); // await  sleep(2000) \n\n    const parsValue = JSON.parse(allanswer[questionindex].inputfields);\n    setQuestion(single[qindex].question);\n    setMedia(single[qindex].media);\n    setMultipleanswer(JSON.parse(allanswer[qindex].mcqFields));\n    setHint(parsValue[0].hint);\n    setType(parsValue[0].type);\n    setMarks(parsValue[0].marks);\n    setAnswer(parsValue[0].answer);\n    return true;\n  };\n\n  const prevdata = async qIndex => {\n    // await  sleep(2000) \n    console.log(\"inside prev data\", qIndex, single);\n    const parsValue = JSON.parse(allanswer[questionindex].inputfields);\n    setQuestion(single[qIndex].question);\n    setMedia(single[qIndex].media);\n    setMultipleanswer(JSON.parse(allanswer[qIndex].mcqFields));\n    setHint(parsValue[0].hint);\n    setType(parsValue[0].type);\n    setMarks(parsValue[0].marks);\n    setAnswer(parsValue[0].answer);\n    return true;\n  }; // useEffect(() => {\n  //     setMode(courseID ? \"edit\" : \"add\")\n  //     setEditFormLoader(true)\n  //     getCourseById(courseID).then((res) => {\n  //         console.log('res', res);\n  //         if (res.status) {\n  //             //setting the fetched Course by id into state variable\n  //             setCourse(res.course);\n  //             setName(res.course.name)\n  //             // setDescription(res.course.description)\n  //             //setBoard(res?.course?.board?._id)\n  //             setSelectedSubBoard(res?.course?.subBoardID?._id)\n  //             // setClasses(res.course.classesID._id)\n  //             // setSubject(res.course.subjectID._id)\n  //             setTopic(res.course.topicIDs)\n  //             setCoursePicture(res.course.coursePicture)\n  //         }\n  //         setEditFormLoader(false)\n  //     })\n  //         .catch((err) => {\n  //             console.error(err);\n  //         });\n  // }, [courseID])\n  // useEffect(() => {\n  //     // fetching all boards\n  //     getAllBoard(page, limit).then((res) => {\n  //         console.log('Boards', res);\n  //         if (res.status) {\n  //             //setting the fetched board into state variable\n  //             setBoardData(res.results.data);\n  //         }\n  //     })\n  //         .catch((err) => {\n  //             console.error(err);\n  //         });\n  //     // fetching all topics\n  //     getAllTopics(page, limit).then((res) => {\n  //         console.log('Topics', res);\n  //         if (res.status) {\n  //             //setting the fetched topic into state variable\n  //             topicData.current = res.results.data;\n  //             chooseTopicHandler()\n  //         }\n  //     })\n  //         .catch((err) => {\n  //             console.error(err);\n  //         });\n  //     // fetching all classes\n  //     getAllClasses(page, limit).then((res) => {\n  //         console.log('Classes', res);\n  //         if (res.status) {\n  //             //setting the fetched classes into state variable\n  //             setClassesData(res.results.data);\n  //         }\n  //     })\n  //         .catch((err) => {\n  //             console.error(err);\n  //         });\n  //     // fetching all courses \n  // getAllCourses(page, limit).then((res) => {\n  //     console.log('course', res);\n  //     if (res.status) {\n  //         //setting the fetched classes into state variable\n  //         setCoursesData(res.results.id);\n  //     }\n  // })\n  //     .catch((err) => {\n  //         console.error(err);\n  //     });\n  //     // fetching all subjects\n  //     getAllSubjects(page, limit).then((res) => {\n  //         console.log('Subjects', res);\n  //         if (res.status) {\n  //             //setting the fetched Subject into state variable\n  //             setSubjectData(res.results.data);\n  //         }\n  //     })\n  //         .catch((err) => {\n  //             console.error(err);\n  //         });\n  // }, [])\n  // const classes = useStyles()\n  // const [inputFields, setInputFields] = useState([\n  //     { type: '', hint: '', answer: '', marks: '' },\n  // ]);\n  // //edit the details  of the existing Course\n  // function editCourseDetails() {\n  //     setModalVisible(false);\n  //     setEditLoader(true);\n  //     showError(false);\n  //     if (courseID != '') {\n  //         editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus, courseImage)\n  //             .then((res) => {\n  //                 console.log(res);\n  //                 if (res.status) {\n  //                     setEditLoader(false);\n  //                     setModalLine1('Subject details has been');\n  //                     setModalLine2('updated successfully')\n  //                     setModalVisible(true)\n  //                 }\n  //                 else {\n  //                     setEditLoader(false);\n  //                     showError(true);\n  //                     setErrorMessage('Error occured');\n  //                 }\n  //             })\n  //             .catch((err) => {\n  //                 console.error(err);\n  //                 setEditLoader(false)\n  //                 showError(true);\n  //                 setErrorMessage('Error occured');\n  //             })\n  //     }\n  //     else {\n  //         setAddLoader(false)\n  //         showError(true);\n  //         setErrorMessage('Please fill all the Course details');\n  //     }\n  // }\n\n\n  useEffect(() => {\n    // setDataLoading(true);\n    // setNoCourses(false);\n    //  // fetching All answer and questions\n    if (allanswer.length == 0) {\n      getSingleAnswer(id).then(res => {\n        console.log('coursesData', res.results);\n        console.log('qIndex', questionindex);\n\n        if (res.status) {\n          //  //setting the fetched Topics into state variable\n          // setAnswertable(res.results)\n          // setMarks(res.results.marks);\n          // setType(res.results.type);\n          if (allanswer.length == 0) setAllanswer(res.results);\n          const parsValue = JSON.parse(res.results[questionindex].inputfields);\n          console.log('getSingleAnswer data state', res.results);\n          console.log('JSON parse data state', parsValue);\n          setMultipleanswer(JSON.parse(res.results[questionindex].mcqFields));\n          setHint(parsValue[0].hint);\n          setType(parsValue[0].type);\n          setMarks(parsValue[0].marks);\n          ;\n          setAnswer(parsValue[0].answer);\n          setAnsID(res.results[questionindex]._id); // setTotalPages(res.results.totalPages);\n        } else {\n          //  //setting no Topic found variable true\n          setNoCourses(true);\n        }\n\n        setDataLoading(false);\n      }).catch(err => {// console.error(err);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // setDataLoading(true);\n    // setNoCourses(false);\n    //  // fetching All answer and questions\n    getQuestion(id, rowLimit).then(res => {\n      console.log('QuestionData', res);\n\n      if (res.status) {\n        //  //setting the fetched Topics into state variable\n        if (single.length == 0) setSingle(res.results);\n        setQuestion(res.results[questionindex].question);\n        setMedia(res.results[questionindex].media); // setQuestion(res.results.question);\n\n        console.log('Take Test Answer Data students portal', res.results);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //  //setting no Topic found variable true\n        setNoCourses(true);\n      }\n\n      setDataLoading(false);\n    }).catch(err => {// console.error(err);\n    });\n  }, [page, rowLimit]);\n  console.log(\"multioleeeeee\", multipleanswer, hint, type, marks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container pageHeaderCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8 col-12\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: tab,\n                onChange: handleChange,\n                \"aria-label\": \"basic tabs example\",\n                variant: \"scrollable\",\n                scrollButtons: \"on\",\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Review Part\",\n                  ...a11yProps(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(TabPanel, {\n                value: tab,\n                index: 0,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"singlequesedit col-lg-4 col-sm-6  col-12\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"newedit\",\n                        style: {\n                          backgroundColor: \"cadetblue\",\n                          padding: \"30px\",\n                          height: \"265px\",\n                          width: \"300%\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"viet col-6\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlTextarea1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 736,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                children: \"Question\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 737,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 737,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"text\",\n                              readOnly: true,\n                              value: question,\n                              onChange: e => setQuestion(e.target.value),\n                              as: \"textarea\",\n                              rows: 5\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 739,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"hidden\",\n                              value: id,\n                              onChange: e => setID(e.target.value)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 742,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"hidden\",\n                              value: questionindex,\n                              onChange: e => setID(e.target.value)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 743,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 735,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 734,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"vlviewedit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 746,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"editmedia col-6\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                children: \"Media\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 749,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 749,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Card, {\n                              style: {\n                                backgroundColor: \"#5f9ea0\",\n                                width: \"90%\",\n                                height: \"63%\"\n                              },\n                              sx: {\n                                border: '1px solid yellow'\n                              },\n                              className: \"imght\",\n                              onClick: () => enlargeImg(),\n                              id: \"img1\",\n                              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: `https://academeserverapp.herokuapp.com/${media}`,\n                                width: \"100%\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 755,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 750,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 756,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 756,\n                              columnNumber: 67\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 756,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 748,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 733,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"events\",\n                              style: {\n                                marginTop: '-64%'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"editev\",\n                                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                    className: \"mb-6 mt-3 \",\n                                    controlId: \"exampleForm.ControlInput1\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 771,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                      children: \"Answer in Part\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 772,\n                                      columnNumber: 89\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 772,\n                                    columnNumber: 77\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 770,\n                                  columnNumber: 73\n                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"editpart\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                        children: \"Hint\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 776,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 776,\n                                      columnNumber: 81\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                      readOnly: true,\n                                      type: \"text\",\n                                      value: hint,\n                                      onChange: e => setHint(e.target.value)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 777,\n                                      columnNumber: 81\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 775,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"edittype\",\n                                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                      controlId: \"exampleForm.ControlInput1\",\n                                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                          children: \"Type\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 781,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 781,\n                                        columnNumber: 85\n                                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                        readOnly: true,\n                                        type: \"text\",\n                                        value: type,\n                                        onChange: e => setType(e.target.value)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 782,\n                                        columnNumber: 85\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 780,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 779,\n                                    columnNumber: 77\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"editmarks\",\n                                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                      controlId: \"exampleForm.ControlInput1\",\n                                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                          children: \"Marks\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 789,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 789,\n                                        columnNumber: 85\n                                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                        readOnly: true,\n                                        type: \"text\",\n                                        value: marks,\n                                        onChange: e => setMarks(e.target.value)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 795,\n                                        columnNumber: 85\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 788,\n                                      columnNumber: 81\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 787,\n                                    columnNumber: 77\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 774,\n                                  columnNumber: 73\n                                }, this), multipleanswer.map((row, index) => {\n                                  console.log(\"rowwwww\", row);\n                                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                      className: \"mb-3 \",\n                                      controlId: \"exampleForm.ControlInput1\",\n                                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                                          children: \"Answer\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 807,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 807,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Form, {\n                                        className: \"custom-select\",\n                                        value: row.optiona,\n                                        onChange: e => {\n                                          const selectedFood = e.target.value;\n                                          setFoodState(selectedFood);\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 808,\n                                        columnNumber: 81\n                                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                        readOnly: true,\n                                        type: \"text\",\n                                        name: \"Answer\",\n                                        value: row.optiona,\n                                        onChange: e => setAnswer(e.target.value),\n                                        placeholder: \"Answers\",\n                                        as: \"textarea\",\n                                        rows: 5\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 816,\n                                        columnNumber: 81\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 806,\n                                      columnNumber: 77\n                                    }, this)\n                                  }, row.id, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 805,\n                                    columnNumber: 64\n                                  }, this);\n                                })]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 769,\n                                columnNumber: 69\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"editdiv\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"hidden\",\n                                  readOnly: true,\n                                  value: subject3,\n                                  onChange: e => setSubject3(e.target.value)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 827,\n                                  columnNumber: 73\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"hidden\",\n                                  readOnly: true,\n                                  value: course2,\n                                  onChange: e => setCourse2(e.target.value)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 828,\n                                  columnNumber: 73\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 826,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 768,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 767,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 766,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 45\n                    }, this), single.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"singleques col-lg-6 col-sm-6 col-12\",\n                          children: [/*#__PURE__*/_jsxDEV(Row, {\n                            children: [\"  \", /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-6 \",\n                              controlId: \"exampleForm.ControlTextarea1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 851,\n                              columnNumber: 68\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 851,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 857,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 850,\n                          columnNumber: 57\n                        }, this)\n                      }, row.question, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 845,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"events\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"answerpart\",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-6 mt-3 \",\n                              controlId: \"exampleForm.ControlInput1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 877,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 876,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \" col-lg-2 col-sm-6 col-12 mt-3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 880,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"  col-lg-2 col-sm-6 col-12  \",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 888,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 886,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-lg-2 col-sm-6 col-12 \",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 899,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 898,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"singleansrev col-lg-6 col-sm-6 col-12\",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3 \",\n                              controlId: \"exampleForm.ControlInput1\",\n                              children: /*#__PURE__*/_jsxDEV(Form, {\n                                className: \"custom-select\",\n                                value: foodState,\n                                onChange: e => {\n                                  const selectedFood = e.target.value;\n                                  setFoodState(selectedFood);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 915,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 913,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 912,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 875,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 874,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 844,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Update\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn btn-warning\",\n          onClick: () => gotoprev(),\n          size: \"small\",\n          variant: \"contained\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextedit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          class: \"btn btn-warning\",\n          onClick: () => gotonext(),\n          size: \"small\",\n          variant: \"contained\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"YQZ+Sc92Fr/9u+us6qLKxFm37V0=\", false, function () {\n  return [useParams, useParams, useNavigate, useParams];\n});\n\n_c2 = User;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"User\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/Evaluationview.js"],"names":["dynamic","InputGroup","FormControl","Table","Form","Row","Col","TablePagination","apiUrl","createAnswer","getSingleAnswer","editAnswer","getAnswerapi","getQuestion","getAllEvaluation","deleteCourse","getEvaluationByFilter","getEvaluationById","getAllUserEvaluations","Box","CardContent","CardMedia","Divider","Fade","Grid","Grow","TableRow","Typography","test2","getAllCourses","CircularProgress","Card","ReactPaginate","TableContainer","Pagination","Stack","Container","Icon","SaveIcon","Button","TextField","Modal","BootstrapModal","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","Tabs","Tab","TableBody","TableCell","TableHead","useParams","makeStyles","baseUrl","dataLimit","perpage","useStyles","theme","root","margin","spacing","button","className","boardName","subBoardName","subjectName","TabPanel","props","children","value","index","other","p","a11yProps","id","User","courseID","courseStatus","mode","setMode","course2","setCourse2","subject3","setSubject3","boardData","setBoardData","classesData","setClassesData","coursesData","setCoursesData","single","setSingle","answertable","setAnswertable","allanswer","setAllanswer","multipleanswer","setMultipleanswer","rowLimit","setRowLimit","subjectData","setSubjectData","dataLoading","setDataLoading","noCourses","setNoCourses","topicData","upid","boardStatus","console","log","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","name","setName","description1","setDescription1","board","setBoard","board2","setBoard2","classes1","setClasses1","totalPages","setTotalPages","subject2","setSubject2","currentPage","setCurrentPage","topic","setTopic","chooseTopic","setChooseTopic","newTopic","setNewTopic","subBoardsData","setSubBoardsData","selectedSubBoard","setSelectedSubBoard","coursePicture","setCoursePicture","course","setCourse","picturePreview","setPicturePreview","chooseCoursePictureRef","chooseTopicRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","page","setPage","test","setTest","limit","setLimit","classState","setClassState","boardState","setBoardState","subBoardState","setSubBoardState","subjectState","setSubjectState","courseState","setCourseState","foodState","setFoodState","formula","setFormula","question","setQuestion","media","setMedia","hint","setHint","type","setType","marks","setMarks","ansid","setAnsID","stuevalid","setStuevalid","evalansid","setEvalansid","questionid","setquestionid","qmark","setQmark","evalid","setevalid","studentname","setStudentname","examdatetaken","setExamdatetaken","answerstud","setAnswerstud","studevalid","setStudevalid","questionindex","setQuestionindex","answer","setAnswer","showhide","setShowhide","selectedFile","setSelectedFile","preview","setPreview","months","userDetailsById","setUserDetailsById","userProfileImg","setUserProfileImg","userCourses","setUserCourses","actionLodaer","setActionLoader","filterModal","setFilterModal","filterLoader","setFilterLoader","completedCouresNum","setCompletedCouresNum","noUserFound","setNoUserFound","tableDataLoading","setTableDataLoading","tab","setTab","userPayments","setUserPayments","totalPaymentAmount","setTotalPaymentAmount","handleChange","event","newValue","onPageChange","newPage","onRowPerChange","target","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","e","files","length","gotonext","newQuestionIndex","nextdata","gotoprev","prevdata","img","document","getElementById","enlargeImg","style","transform","width","transition","resetImg","handleshowhide","getuser","handleSubmit","alert","addNewEvaluation","handleNext","setActiveStep","prevActiveStep","courseImage","setCourseImage","response","getAllSubBoard","status","results","data","qindex","parsValue","JSON","parse","inputfields","mcqFields","qIndex","then","res","_id","catch","err","backgroundColor","padding","height","setID","border","marginTop","map","row","optiona","selectedFood"],"mappings":"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","sourcesContent":["import { dynamic, InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap'\r\n// import { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses'\r\n// import { createEvaluation } from '../../api/Evaluation/Evaluation'\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport { apiUrl } from '../../config';\r\nimport { createAnswer, getSingleAnswer, editAnswer, getAnswerapi } from '../../api/Answer/Answer'\r\nimport { getQuestion } from '../../api/Question/Question'\r\n// import { createStudentevalans } from '../../api/StudentEvalAns/studentevalans'\r\n// import { createStudenteval } from '../../api/StudentEval/studenteval'\r\nimport { getAllEvaluation, deleteCourse, getEvaluationByFilter, getEvaluationById, getAllUserEvaluations } from '../../api/Evaluation/Evaluation';\r\nimport { Box, CardContent, CardMedia, Divider, Fade, Grid, Grow, TableRow, Typography } from '@mui/material';\r\n// import { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\r\n// import { getAllBoard } from '../../api/Boards/Boards'\r\n// import { getAllSubjects } from '../../api/Subject/Subject'\r\nimport test2 from './image/geogebra-export.png';\r\nimport { getAllCourses } from '../../api/Courses/Courses';\r\n// import { getAllSubBoard } from 'src/api/SubBoard/SubBoard'\r\n// import { getAllClasses } from '../../api/Classes/Classes';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Card from '@mui/material/Card';\r\nimport \"./app.css\"\r\nimport ReactPaginate from \"react-paginate\";\r\nimport TableContainer from '@mui/material/TableContainer';\r\n\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n// import Addmoreinput from './dynamic';\r\n// import Dynfield from './dynfield';\r\n// import RemoveIcon from '@material-ui/icons/Remove';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import App from './test'\r\n\r\nimport SaveIcon from '@mui/icons-material/Save';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport { Button, TextField } from '@mui/material'\r\n\r\nimport { Modal as BootstrapModal } from 'react-bootstrap'\r\n// import Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\n// import Box from '@mui/material/Box';\r\n\r\n\r\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\r\n// import { Modal,  InputGroup, FormControl, Nav, Row, Col, Sonnet } from 'react-bootstrap'\r\nimport ModalHeader from 'react-bootstrap/ModalHeader'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\r\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\n\r\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\r\n// import { getUserById, changeStatus, deleteUser } from \"../../api/Users/Users\"\r\n// import { imageBaseUrl } from '../../config';\r\n// import Tabs from 'react-bootstrap/Tabs'\r\n// import { materialTableIcons } from './config';\r\n// import MaterialTable from 'material-table'\r\n// import { getAllUserCourses } from '../../api/Courses/Courses'\r\n// import { CategoryScale, PointElement, LinearScale, BarElement, Title, Tooltip, Legend, Chart } from 'chart.js';\r\n// import { Bar } from 'react-chartjs-2';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n// import Typography from '@mui/material/Typography';\r\n// import Box from '@mui/material/Box';\r\n\r\n\r\n// import CardContent from '@mui/material/CardContent';\r\n\r\n// import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\n// import TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\n// import { Button } from '@mui/material';\r\n\r\n// import Grid from '@mui/material/Grid';\r\n// import CircularProgress from '@mui/material/CircularProgress';\r\n// import Modal from '@mui/material/Modal';\r\n// import UserCoursesRow  from './UserCoursesRow'\r\nimport { useParams } from 'react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { baseUrl, dataLimit } from '../../config';\r\n// import test2 from './test2';\r\n// import { update } from 'lodash';\r\n// import { dataLimit } from '../../config';\r\nconst perpage = 1;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\n// import UserSubscriptionRow from './UserSubscriptionRow'\r\n// import { getEarningsByUserId } from 'src/api/Earnings/Earnings'\r\n// import UserPaymentRow from './UserPaymentRow'\r\n\r\nvar className = '';\r\nvar boardName = '';\r\nvar subBoardName = '';\r\nvar subjectName = '';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nexport default function User(props) {\r\n    // const courseID = props.match.params.courseId;\r\n    // const courseStatus = props.match.params.courseStatus;\r\n    const { courseID, courseStatus } = useParams()\r\n    // console.log(props)\r\n    // const subjectStatus = props.match.params.subjectStatus;\r\n    const [mode, setMode] = useState(courseID ? \"edit\" : \"add\")\r\n\r\n    //setting subjects data into a variable\r\n    const [course2, setCourse2] = useState({});\r\n    const [subject3, setSubject3] = useState({});\r\n\r\n    //setting course data into a variable\r\n    const [boardData, setBoardData] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const [classesData, setClassesData] = useState([]);\r\n    const [coursesData, setCoursesData] = useState([]);\r\n    const [single, setSingle] = useState([]);\r\n    const [answertable, setAnswertable] = useState([]);\r\n    const [allanswer, setAllanswer] = useState([]);\r\n    const [multipleanswer, setMultipleanswer] = useState([]);\r\n    const [rowLimit, setRowLimit] = useState(dataLimit)\r\n    //setting course data into a variable\r\n    const [subjectData, setSubjectData] = useState([]);\r\n    const [dataLoading, setDataLoading] = useState(false);\r\n    const [noCourses, setNoCourses] = useState(false);\r\n    //setting course data into a variable\r\n    const topicData = useRef([]);\r\n    const { upid, boardStatus } = useParams()\r\n    console.log('Check Update id', upid)\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    //sets and display the line in the success mo\r\n    const [modalLine1, setModalLine1] = useState('');\r\n    const [modalLine2, setModalLine2] = useState('')\r\n\r\n    //sets the loader for add course button\r\n    const [addLoader, setAddLoader] = useState(false)\r\n\r\n    //sets the loader for edit subject button\r\n    const [editLoader, setEditLoader] = useState(false)\r\n\r\n    //sets the loader for edit subject button\r\n    const [editFormLoader, setEditFormLoader] = useState(false)\r\n\r\n    //sets the name of the course name user want to add\r\n    const [name, setName] = useState();\r\n\r\n    //sets topic description user want to add\r\n    const [description1, setDescription1] = useState()\r\n\r\n    //sets board user want to add\r\n    const [board, setBoard] = useState();\r\n\r\n    const [board2, setBoard2] = useState();\r\n\r\n    //sets classes user want to add\r\n    // const [classes, setClasses] = useState()\r\n    const [classes1, setClasses1] = useState()\r\n    const [totalPages, setTotalPages] = useState();\r\n    //sets subject user want to add\r\n    // const [subject, setSubject] = useState()\r\n    const [subject2, setSubject2] = useState()\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    //sets topic  user want to add\r\n    const [topic, setTopic] = useState([])\r\n    const [chooseTopic, setChooseTopic] = useState([])\r\n    const [newTopic, setNewTopic] = useState(1)\r\n    // console.log(chooseTopic)\r\n    const [subBoardsData, setSubBoardsData] = useState([])\r\n    // console.log(subBoardsData)\r\n    const [selectedSubBoard, setSelectedSubBoard] = useState()\r\n    //sets course picture user want to add\r\n    const [coursePicture, setCoursePicture] = useState()\r\n    const [course, setCourse] = useState([]);\r\n    //sets course picture preview user want to add\r\n    const [picturePreview, setPicturePreview] = useState(null);\r\n\r\n    //referance variable for video file choose\r\n    let chooseCoursePictureRef = useRef()\r\n    let chooseTopicRef = useRef()\r\n\r\n    // sets varialbe for video status\r\n    const [videoStatus, setVideoStatus] = useState(false)\r\n\r\n    //shows the error when users try to add subject without name\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n    const [error, showError] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [test, setTest] = useState();\r\n\r\n    const [limit, setLimit] = useState(100);\r\n    const [classState, setClassState] = useState('')\r\n    const [boardState, setBoardState] = useState('')\r\n    const [subBoardState, setSubBoardState] = useState('')\r\n    const [subjectState, setSubjectState] = useState('')\r\n    const [courseState, setCourseState] = useState('')\r\n    const [foodState, setFoodState] = useState();\r\n    const [formula, setFormula] = useState();\r\n    const [question, setQuestion] = useState('')\r\n\r\n    const [media, setMedia] = useState('');\r\n    // const courseID ='';\r\n    // const [editFormLoader, setEditFormLoader] = useState(false)\r\n    // const [mode, setMode] = useState(courseID ? \"edit\" : \"add\");\r\n    const [hint, setHint] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [marks, setMarks] = useState('')\r\n    const [ansid, setAnsID] = useState('')\r\n    console.log('Answer ID', ansid)\r\n    const [stuevalid, setStuevalid] = useState()\r\n    const [evalansid, setEvalansid] = useState()\r\n    const [questionid, setquestionid] = useState()\r\n    const [qmark, setQmark] = useState()\r\n    // const [stuevalid, setstuevalid] = useState()\r\n    const [evalid, setevalid] = useState()\r\n    const [studentname, setStudentname] = useState()\r\n    const [examdatetaken, setExamdatetaken] = useState()\r\n    // const [subject, setSubject] = useState()\r\n    // const [course, setCourse] = useState()\r\n    const [answerstud, setAnswerstud] = useState()\r\n    const [studevalid, setStudevalid] = useState(0)\r\n    const [questionindex, setQuestionindex] = useState(0)\r\n    const [answer, setAnswer] = useState('')\r\n    const [showhide, setShowhide] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const { id } = useParams();\r\n    console.log('only id', id)\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    //constant for storing the details of the particular user\r\n    const [userDetailsById, setUserDetailsById] = useState([]);\r\n    const [userProfileImg, setUserProfileImg] = useState('')\r\n\r\n    //sets the all courses of user\r\n    const [userCourses, setUserCourses] = useState([])\r\n    // console.log('userCourses', userCourses)\r\n\r\n    //loader in the alert table on confirm button\r\n    const [actionLodaer, setActionLoader] = useState(false);\r\n\r\n    const [filterModal, setFilterModal] = useState(false);\r\n\r\n\r\n\r\n    //sets the loader of apply changes in filter modal\r\n    const [filterLoader, setFilterLoader] = useState(false);\r\n    const [completedCouresNum, setCompletedCouresNum] = useState(0);\r\n\r\n    //variable to configure whether the user of that particular id is available or not\r\n    const [noUserFound, setNoUserFound] = useState(false)\r\n    // example\r\n\r\n\r\n    //table data loading indicator\r\n    const [tableDataLoading, setTableDataLoading] = useState(false)\r\n    const [tab, setTab] = React.useState(0);\r\n    const [userPayments, setUserPayments] = useState([])\r\n    const [totalPaymentAmount, setTotalPaymentAmount] = useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setTab(newValue);\r\n\r\n    };\r\n    const onPageChange = (event, newPage) => {\r\n        // setRowLimit(parseInt(event.target.value), 4);\r\n        setPage(newPage + 1);\r\n        console.log(newPage + 1)\r\n    };\r\n    const onRowPerChange = (event) => {\r\n        setRowLimit(event.target.value)\r\n        console.log(event.target.value)\r\n        setPage(1)\r\n    }\r\n\r\n\r\n    // var answerindex = 0\r\n    // console.log('request params', id)\r\n\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n\r\n        // free memory when ever this component is unmounted\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n\r\n    const onSelectFile = e => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n\r\n        // I've kept this example simple by using the first image instead of multiple\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n    const gotonext = async () => {\r\n        let newQuestionIndex = questionindex + 1;\r\n        if(newQuestionIndex === single.length)\r\n        return\r\n       \r\n        setQuestionindex(newQuestionIndex, nextdata(newQuestionIndex));\r\n        // alert(questionindex)\r\n        return true\r\n\r\n    }\r\n    const gotoprev = async () => {\r\n        let newQuestionIndex = questionindex - 1;\r\n        console.log(newQuestionIndex, \"questionIndexxxxx\");\r\n        if(newQuestionIndex <0)\r\n        return\r\n        setQuestionindex(newQuestionIndex, prevdata(newQuestionIndex));\r\n        return true\r\n\r\n    }\r\n    // Get the img object using its Id\r\n    const img = document.getElementById(\"img1\");\r\n    // Function to increase image size\r\n    function enlargeImg() {\r\n        // Set image size to 1.5 times original\r\n        img.style.transform = \"scale(1.5)\";\r\n        //   img.style.transform = \"scaleX(1.5)\";\r\n        img.style.width = \"60%\";\r\n        // Animation effect\r\n        img.style.transition = \"transform 0.45s ease\";\r\n    }\r\n    function resetImg() {\r\n        // Set image size to original\r\n        img.style.transform = \"scale(1)\";\r\n        img.style.transition = \"transform 0.25s ease\";\r\n    }\r\n    const handleshowhide = (event) => {\r\n        const getuser = event.target.value;\r\n        setShowhide(getuser);\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        //e.preventDefault();\r\n        alert('Answer Submitted');\r\n        setAnswer('');\r\n    }\r\n\r\n    const addNewEvaluation = async () => {\r\n        //    const nextLabel={\"next\"};\r\n        // gotonext();\r\n        setAnswerstud('');\r\n        alert(\" Answer submitted\")\r\n\r\n        console.log('This is get all evaluation data', setCourse2);\r\n        const handleNext = () => {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        };\r\n        //         if (studevalid==0){\r\n        //         var studevalid1 = await createStudenteval(course2, subject3, evalid, studentname, examdatetaken, status)\r\n        //         setStudevalid(studevalid1)\r\n        //         console.log('WORKING STUDEVALIDVAR', studevalid)\r\n        //         createStudentevalans(studevalid1, answerstud, question, hint, marks, type, stuevalid, evalansid, questionid, qmark)\r\n        //         console.log('studentevalans', createStudentevalans)\r\n        //     }\r\n        //     else if(studevalid!=0){\r\n\r\n        //         var studevalid115 = createStudentevalans(studevalid, answerstud, question, hint, marks, type, stuevalid, evalansid, questionid, qmark)\r\n        //         console.log('studentevalans', createStudentevalans)\r\n\r\n        // }\r\n\r\n        editAnswer(hint, type, marks, answer, ansid)\r\n        // console.log('edit answer client', hint)       \r\n    }\r\n\r\n    const [courseImage, setCourseImage] = useState(null);\r\n    useEffect(async () => {\r\n        if (board) {\r\n            const response = await getAllSubBoard(board, 1, 1000)\r\n            if (response.status) {\r\n                setSubBoardsData(response.results.data);\r\n            }\r\n        }\r\n    }, [board])\r\n    const nextdata = async (qindex) => {\r\n        console.log(\"allanswer\", allanswer);\r\n        console.log(\"single\", single);\r\n\r\n        // await  sleep(2000) \r\n        const parsValue = JSON.parse(allanswer[questionindex].inputfields);\r\n            setQuestion(single[qindex].question);\r\n            setMedia(single[qindex].media);\r\n            \r\n            setMultipleanswer(JSON.parse(allanswer[qindex].mcqFields));\r\n            setHint(parsValue[0].hint);\r\n                    setType(parsValue[0].type);\r\n                    setMarks(parsValue[0].marks);\r\n                    setAnswer(parsValue[0].answer);\r\n           \r\n            return true\r\n        \r\n    }\r\n    const prevdata = async (qIndex) => {\r\n        // await  sleep(2000) \r\n        console.log(\"inside prev data\", qIndex, single)\r\n        const parsValue = JSON.parse(allanswer[questionindex].inputfields);\r\n            setQuestion(single[qIndex].question);\r\n            setMedia(single[qIndex].media);\r\n           \r\n            setMultipleanswer(JSON.parse(allanswer[qIndex].mcqFields));\r\n            setHint(parsValue[0].hint);\r\n                    setType(parsValue[0].type);\r\n                    setMarks(parsValue[0].marks);\r\n                    setAnswer(parsValue[0].answer);\r\n            return true\r\n        \r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setMode(courseID ? \"edit\" : \"add\")\r\n    //     setEditFormLoader(true)\r\n    //     getCourseById(courseID).then((res) => {\r\n    //         console.log('res', res);\r\n    //         if (res.status) {\r\n    //             //setting the fetched Course by id into state variable\r\n    //             setCourse(res.course);\r\n    //             setName(res.course.name)\r\n    //             // setDescription(res.course.description)\r\n    //             //setBoard(res?.course?.board?._id)\r\n    //             setSelectedSubBoard(res?.course?.subBoardID?._id)\r\n    //             // setClasses(res.course.classesID._id)\r\n    //             // setSubject(res.course.subjectID._id)\r\n    //             setTopic(res.course.topicIDs)\r\n    //             setCoursePicture(res.course.coursePicture)\r\n    //         }\r\n    //         setEditFormLoader(false)\r\n    //     })\r\n    //         .catch((err) => {\r\n    //             console.error(err);\r\n    //         });\r\n\r\n    // }, [courseID])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // fetching all boards\r\n    //     getAllBoard(page, limit).then((res) => {\r\n    //         console.log('Boards', res);\r\n    //         if (res.status) {\r\n    //             //setting the fetched board into state variable\r\n    //             setBoardData(res.results.data);\r\n    //         }\r\n    //     })\r\n    //         .catch((err) => {\r\n    //             console.error(err);\r\n    //         });\r\n\r\n    //     // fetching all topics\r\n    //     getAllTopics(page, limit).then((res) => {\r\n    //         console.log('Topics', res);\r\n    //         if (res.status) {\r\n    //             //setting the fetched topic into state variable\r\n    //             topicData.current = res.results.data;\r\n\r\n    //             chooseTopicHandler()\r\n    //         }\r\n    //     })\r\n    //         .catch((err) => {\r\n    //             console.error(err);\r\n    //         });\r\n\r\n\r\n    //     // fetching all classes\r\n    //     getAllClasses(page, limit).then((res) => {\r\n    //         console.log('Classes', res);\r\n    //         if (res.status) {\r\n    //             //setting the fetched classes into state variable\r\n    //             setClassesData(res.results.data);\r\n    //         }\r\n    //     })\r\n    //         .catch((err) => {\r\n    //             console.error(err);\r\n    //         });\r\n\r\n    //     // fetching all courses \r\n    // getAllCourses(page, limit).then((res) => {\r\n    //     console.log('course', res);\r\n    //     if (res.status) {\r\n    //         //setting the fetched classes into state variable\r\n    //         setCoursesData(res.results.id);\r\n    //     }\r\n    // })\r\n    //     .catch((err) => {\r\n    //         console.error(err);\r\n    //     });\r\n\r\n\r\n\r\n    //     // fetching all subjects\r\n    //     getAllSubjects(page, limit).then((res) => {\r\n    //         console.log('Subjects', res);\r\n    //         if (res.status) {\r\n    //             //setting the fetched Subject into state variable\r\n    //             setSubjectData(res.results.data);\r\n    //         }\r\n    //     })\r\n    //         .catch((err) => {\r\n    //             console.error(err);\r\n    //         });\r\n\r\n    // }, [])\r\n\r\n\r\n    // const classes = useStyles()\r\n    // const [inputFields, setInputFields] = useState([\r\n    //     { type: '', hint: '', answer: '', marks: '' },\r\n    // ]);\r\n\r\n\r\n\r\n\r\n\r\n    // //edit the details  of the existing Course\r\n    // function editCourseDetails() {\r\n    //     setModalVisible(false);\r\n    //     setEditLoader(true);\r\n    //     showError(false);\r\n    //     if (courseID != '') {\r\n\r\n    //         editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus, courseImage)\r\n    //             .then((res) => {\r\n    //                 console.log(res);\r\n    //                 if (res.status) {\r\n    //                     setEditLoader(false);\r\n    //                     setModalLine1('Subject details has been');\r\n    //                     setModalLine2('updated successfully')\r\n    //                     setModalVisible(true)\r\n    //                 }\r\n    //                 else {\r\n    //                     setEditLoader(false);\r\n    //                     showError(true);\r\n    //                     setErrorMessage('Error occured');\r\n    //                 }\r\n\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.error(err);\r\n    //                 setEditLoader(false)\r\n    //                 showError(true);\r\n    //                 setErrorMessage('Error occured');\r\n    //             })\r\n    //     }\r\n    //     else {\r\n    //         setAddLoader(false)\r\n    //         showError(true);\r\n    //         setErrorMessage('Please fill all the Course details');\r\n    //     }\r\n\r\n    // }\r\n    useEffect(() => {\r\n        // setDataLoading(true);\r\n        // setNoCourses(false);\r\n        //  // fetching All answer and questions\r\n        if (allanswer.length == 0) {\r\n\r\n            getSingleAnswer(id).then((res) => {\r\n\r\n                console.log('coursesData', res.results);\r\n                console.log('qIndex', questionindex);\r\n                if (res.status) {\r\n                    //  //setting the fetched Topics into state variable\r\n                    // setAnswertable(res.results)\r\n\r\n                    // setMarks(res.results.marks);\r\n                    // setType(res.results.type);\r\n                    if (allanswer.length == 0)\r\n                    setAllanswer(res.results);\r\n                    const parsValue = JSON.parse(res.results[questionindex].inputfields);\r\n                    console.log('getSingleAnswer data state', res.results);\r\n                    console.log('JSON parse data state', parsValue);\r\n                    setMultipleanswer(JSON.parse(res.results[questionindex].mcqFields))\r\n                    setHint(parsValue[0].hint);\r\n                    setType(parsValue[0].type);\r\n                    setMarks(parsValue[0].marks);;\r\n                    setAnswer(parsValue[0].answer);\r\n                    setAnsID(res.results[questionindex]._id)\r\n\r\n\r\n\r\n\r\n\r\n                    // setTotalPages(res.results.totalPages);\r\n\r\n                } else {\r\n                    //  //setting no Topic found variable true\r\n                    setNoCourses(true);\r\n                }\r\n\r\n                setDataLoading(false);\r\n            })\r\n\r\n                .catch((err) => {\r\n                    // console.error(err);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // setDataLoading(true);\r\n        // setNoCourses(false);\r\n        //  // fetching All answer and questions\r\n        getQuestion(id, rowLimit).then((res) => {\r\n\r\n            console.log('QuestionData', res);\r\n            if (res.status) {\r\n                //  //setting the fetched Topics into state variable\r\n                if (single.length == 0)\r\n                    setSingle(res.results);\r\n                setQuestion(res.results[questionindex].question);\r\n                setMedia(res.results[questionindex].media);\r\n                // setQuestion(res.results.question);\r\n\r\n                console.log('Take Test Answer Data students portal', res.results);\r\n                setTotalPages(res.results.totalPages);\r\n\r\n            } else {\r\n                //  //setting no Topic found variable true\r\n                setNoCourses(true);\r\n\r\n            }\r\n\r\n            setDataLoading(false);\r\n        })\r\n            .catch((err) => {\r\n                // console.error(err);\r\n            });\r\n    }, [page, rowLimit])\r\n\r\n    console.log(\"multioleeeeee\", multipleanswer, hint, type, marks);\r\n    return (\r\n        <>\r\n            <div className=\"container\" >\r\n                {/* <p className=\"mt-3 txt-5282F0\">Users {'>'} Details</p> */}\r\n                {/* <h5 className=\"mt-3 txt-5282F0 fw-bold\">Evaluation Management</h5> */}\r\n\r\n\r\n                <hr className=\"mt-4\" />\r\n                <div className=\"d-flex align-items-center\">\r\n                    <div className=\"container pageHeaderCard\">\r\n                        <div className=\"row\">\r\n                            {/* {console.log(userDetailsById)} */}\r\n\r\n                            <div className=\"col-lg-8 col-12\">\r\n                                {/* <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"courses\" style={{ backgroundColor: 'yellow' }}> */}\r\n                                <Tabs value={tab} onChange={handleChange} aria-label=\"basic tabs example\" variant={\"scrollable\"}\r\n                                    scrollButtons={\"on\"}>\r\n                                    {/* <Tab label=\"Your Question Is Here\" {...a11yProps(0)} /> */}\r\n                                    <Tab label=\"Review Part\" {...a11yProps(0)} />\r\n\r\n                                    {/* <div className='si'><Button>Save </Button></div> */}\r\n                                    {/* <Tab label=\"Payment\" {...a11yProps(2)} />\r\n                                        <Tab label=\"Subscription\" {...a11yProps(3)} /> */}\r\n                                    {/* <Tab label=\"Progress\" {...a11yProps(4)} /> */}\r\n                                </Tabs>\r\n                            </div>\r\n\r\n                            <Col sm={12}>\r\n                                <TabPanel value={tab} index={0}>\r\n                                    <Table>\r\n                                        {/* <TableHead>\r\n                                            <TableCell>S.No.</TableCell>\r\n                                            <TableCell >Course</TableCell>\r\n                                            <TableCell >No of Question</TableCell>\r\n                                            <TableCell >Students taken</TableCell>\r\n                                            <TableCell >Status</TableCell>\r\n                                            <TableCell >Action</TableCell>\r\n                                        </TableHead> */}\r\n                                        <TableBody>\r\n                                            <div className=\"singlequesedit col-lg-4 col-sm-6  col-12\">\r\n                                                <div className='newedit' style={{ backgroundColor: \"cadetblue\", padding: \"30px\", height: \"265px\", width: \"300%\" }}>\r\n                                                    <Row>\r\n                                                        <div className='viet col-6'>\r\n                                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                                            <Form.Label><h5>Question</h5></Form.Label>\r\n\r\n                                                            <Form.Control type=\"text\" readOnly={true} value={question} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control>\r\n                                                            {/* <Form.Control type=\"text\" readOnly={true} value={((allanswer.length>0)?allanswer[index].hint:'')} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control> */}\r\n                                                            {/* <Form.Control type=\"text\" readOnly={true} value={row._id} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control> */}\r\n                                                            <Form.Control type=\"hidden\" value={id} onChange={(e) => setID(e.target.value)}   ></Form.Control>\r\n                                                            <Form.Control type=\"hidden\" value={questionindex} onChange={(e) => setID(e.target.value)}   ></Form.Control>\r\n                                                        </div>\r\n                                                    </Row>\r\n                                                    <div className=\"vlviewedit\"></div>\r\n                                                    <Row>\r\n                                                        <div className='editmedia col-6'  >\r\n                                                            <Form.Label><h5>Media</h5></Form.Label>\r\n                                                            <Card style={{ backgroundColor: \"#5f9ea0\", width: \"90%\", height: \"63%\" }} sx={{ border: '1px solid yellow' }} className='imght' onClick={() => enlargeImg()} id=\"img1\">\r\n                                                                {/* <Form.Control  onChange1={(e) => setMedia(e.target.value)} /> */}\r\n                                                                {/* <iframe  img src={test2} width='100%' height=\"300%\" > </iframe> */}\r\n                                                                {/* <img src={`http://localhost:4000/${media}`} height=\"100%\" width='172%' /></Card> */}\r\n\r\n                                                                <img src={`https://academeserverapp.herokuapp.com/${media}`} width='100%' /></Card>\r\n                                                            <br /><br /><br />\r\n\r\n                                                        </div>\r\n                                                        {/* <div>\r\n                    <Button className=\" btn btn-warning\" size='small'  variant=\"contained\" onClick={()=>resetImg()}>Reset Image</Button>\r\n                    </div> */}\r\n\r\n                                                    </Row>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <div>\r\n                                                            <div  >\r\n                                                                <div className=\"events\" style={{ marginTop: '-64%' }}>\r\n                                                                    <div className='editev' >\r\n                                                                        <div >\r\n                                                                            <Form.Group className=\"mb-6 mt-3 \" controlId=\"exampleForm.ControlInput1\" ></Form.Group>\r\n                                                                            <Form.Label><h5>Answer in Part</h5></Form.Label>\r\n                                                                        </div>\r\n                                                                        <div className='editpart'>\r\n                                                                            <div >\r\n                                                                                <Form.Label><h5>Hint</h5></Form.Label>\r\n                                                                                <Form.Control readOnly={true} type=\"text\" value={hint} onChange={(e) => setHint(e.target.value)}    ></Form.Control>\r\n                                                                            </div>\r\n                                                                            <div className='edittype'>\r\n                                                                                <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                                                                                    <Form.Label><h5>Type</h5></Form.Label>\r\n                                                                                    <Form.Control readOnly={true} type=\"text\" value={type} onChange={(e) => setType(e.target.value)}    ></Form.Control>\r\n                                                                                    {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\nonChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                                                                                </Form.Group>\r\n                                                                            </div>\r\n                                                                            <div className='editmarks'>\r\n                                                                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                                    <Form.Label><h5>Marks</h5></Form.Label>\r\n                                                                                    {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                                                                                    {/* </Form.Select> */}\r\n                                                                                    {/* <Form.Control type=\"text\" name='marks' value={inputField.answer}\r\nonChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                                                                                    <Form.Control readOnly={true} type=\"text\" value={marks} onChange={(e) => setMarks(e.target.value)}  ></Form.Control>\r\n\r\n                                                                                </Form.Group>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n\r\n                                                                        {\r\n                                                    multipleanswer.map((row, index) =>{\r\n                                                    console.log(\"rowwwww\", row)\r\n                                                      return   <div key={row.id} >\r\n                                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                                <Form.Label><h5>Answer</h5></Form.Label>\r\n                                                                                <Form className=\"custom-select\"\r\n                                                                                    value={row.optiona}\r\n                                                                                    onChange={(e) => {\r\n                                                                                        const selectedFood = e.target.value;\r\n                                                                                        setFoodState(selectedFood);\r\n                                                                                    }}>\r\n\r\n                                                                                </Form>\r\n                                                                                <Form.Control readOnly={true} type=\"text\" name='Answer' value={row.optiona} onChange={(e) => setAnswer(e.target.value)} placeholder='Answers' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                            </Form.Group>\r\n\r\n                                                                        </div>\r\n                                                                        }\r\n                                                                        )\r\n                    \r\n                                                                        }\r\n                                                                    </div>\r\n                                                                \r\n                                                                    <div className='editdiv'>\r\n                                                                        <input type=\"hidden\" readOnly={true} value={subject3} onChange={(e) => setSubject3(e.target.value)} />\r\n                                                                        <input type=\"hidden\" readOnly={true} value={course2} onChange={(e) => setCourse2(e.target.value)} />\r\n                                                                    </div>\r\n\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    \r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n                                            {single.map((row, index) =>\r\n                                                <div>\r\n                                                    <div key={row.question}>\r\n                                                        {/* <div>\r\n                                                            <input type=\"hidden\" readOnly={true} value={subject3} onChange={(e) => setSubject3(e.target.value)} />\r\n                                                            <input type=\"hidden\" readOnly={true} value={course2} onChange={(e) => setCourse2(e.target.value)} />\r\n                                                        </div> */}\r\n                                                        <div className=\"singleques col-lg-6 col-sm-6 col-12\">\r\n                                                            <Row>  <Form.Group className=\"mb-6 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                                                {/* <Form.Label>Question</Form.Label> */}\r\n\r\n                                                                {/* <Form.Control type={\"text\"} readOnly={true} value={row.question} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control> */}\r\n                                                                {/* <Form.Control type=\"hidden\" value={id} onChange={(e) => setID(e.target.value)}   ></Form.Control> */}\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                {/* <div className='singleIV ' >\r\n                                                                    <h1 class=\"ig\">Media</h1>\r\n                                                                    <Card style={{ backgroundColor: \"gray\" }} sx={{ border: '1px solid yellow' }} className='imght'>\r\n                                                                        <Form.Control type=\"file\" onChange1={(e) => setMedia(e.target.value)} />\r\n                                                                        {selectedFile && <img src={preview} width='80%' />}</Card>\r\n\r\n                                                                </div> */}\r\n\r\n                                                            </Row>\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {/* { allanswer.map((rows, index) => */}\r\n\r\n                                                    <div  >\r\n                                                        <div className=\"events\">\r\n                                                            <div className=\"answerpart\">\r\n                                                                <Form.Group className=\"mb-6 mt-3 \" controlId=\"exampleForm.ControlInput1\" ></Form.Group>\r\n                                                                {/* <Form.Label>Answer in Part</Form.Label> */}\r\n                                                            </div>\r\n                                                            <div className=' col-lg-2 col-sm-6 col-12 mt-3'>\r\n                                                                {/* <Form.Label>Hint</Form.Label> */}\r\n                                                                {/* <Form.Control readOnly={true} type=\"text\" value={((allanswer.length > 0) ? allanswer[index].hint : '')} name=\"hint\" onChange={(e) => setHint(e.target.value)}  ></Form.Control> */}\r\n\r\n\r\n                                                            </div>\r\n                                                            <div className=\"  col-lg-2 col-sm-6 col-12  \">\r\n                                                                {/* <Form.Label>Type</Form.Label> */}\r\n                                                                <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n\r\n                                                                    {/* <Form.Control readOnly={true} type=\"text\" name='type'  onChange={(e) => setType(e.target.value)}></Form.Control> */}\r\n\r\n\r\n\r\n                                                                    {/* <Form.Control type=\"text\" name='optionA' value={((allanswer.length > 0) ? allanswer[index].type : '')}\r\n                                                                        onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                                                                </Form.Group>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-2 col-sm-6 col-12 \">\r\n                                                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                    {/* <Form.Label>Marks</Form.Label> */}\r\n                                                                    {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                                                                    {/* </Form.Select> */}\r\n                                                                    {/* <Form.Control type=\"text\" name='marks' value={inputField.answer}\r\n    onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                                                                    {/* <Form.Control readOnly={true} type=\"text\" name='Answer' value={((allanswer.length > 0) ? allanswer[index].marks : '')} placeholder='Marks' onChange={(e) => setMarks(e.target.value)}></Form.Control> */}\r\n                                                                </Form.Group>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            <div className=\"singleansrev col-lg-6 col-sm-6 col-12\">\r\n                                                                <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                    {/* <Form.Label>Answer</Form.Label> */}\r\n                                                                    <Form className=\"custom-select\"\r\n                                                                        value={foodState}\r\n                                                                        onChange={(e) => {\r\n                                                                            const selectedFood = e.target.value;\r\n                                                                            setFoodState(selectedFood);\r\n                                                                        }}>\r\n\r\n                                                                    </Form>\r\n                                                                    {/* <Form.Control type=\"text\" name='Answer' onChange={(e) => setAnswer(e.target.value)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control> */}\r\n                                                                </Form.Group>\r\n\r\n                                                            </div>\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    {/* )} */}\r\n                                                </div>\r\n\r\n                                            )}\r\n\r\n\r\n\r\n                                        </TableBody>\r\n\r\n\r\n\r\n\r\n\r\n                                        {/* <ReactPaginate className='pagination'\r\n                                                previousLabel={\"Previous\"}\r\n                                                nextLabel={\"next\"}\r\n                                                pageCount={pageCount}\r\n                                                onPageChange={handlePageClick}\r\n                                                containerClassName={\"pagination\"}\r\n                                                previousLinkClassName={\"pagination_link\"}\r\n                                                nextLinkClassName={\"paginatiom_link\"}\r\n                                                disabledClassName={\"pagination_link--disabled\"}\r\n                                                activeClassName={\"pagination_link--active\"}\r\n                                            /> */}\r\n\r\n                                    </Table>\r\n                                </TabPanel>\r\n                            </Col>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n          \r\n            {/* <Grid item xs={12} lg={12} md={12} sm={12} className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                    <TablePagination\r\n\r\n                        rowsPerPageOptions={[1, 2, 5, 10, 25]}\r\n                        colSpan={3}\r\n                        count={totalPages * rowLimit}\r\n                        rowsPerPage={rowLimit}\r\n                        page={page - 1}\r\n                        SelectProps={{\r\n                            inputProps: {\r\n                                'aria-label': 'rows per page',\r\n                            },\r\n                            native: true,\r\n                        }}\r\n                        onPageChange={onPageChange}\r\n                        onRowsPerPageChange={onRowPerChange}\r\n                    // ActionsComponent={TablePaginationActions}\r\n                    />\r\n                </div>\r\n            </Grid> */}\r\n              \r\n              <div class=\"Update\">\r\n\r\n<div className='predit'>\r\n    <Button class=\"btn btn-warning\" onClick={() => gotoprev()} size='small' variant=\"contained\">Previous</Button>\r\n</div>\r\n<div className='nextedit'>\r\n    <Button class=\"btn btn-warning\" onClick={() => gotonext()} size='small' variant=\"contained\">Next</Button>\r\n</div>\r\n</div>\r\n{/* <div className='updtbtn'>\r\n<Button class=\"btn btn-info\" size='small' onClick={() => addNewEvaluation()} variant=\"contained\">Update</Button>\r\n</div> */}\r\n        </>\r\n    \r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}