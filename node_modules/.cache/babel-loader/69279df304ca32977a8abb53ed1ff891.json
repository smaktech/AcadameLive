{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\extra\\\\form\\\\index.js\";\nimport * as Yup from 'yup'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Grid, Container, CardHeader, CardContent } from '@mui/material'; // routes\n\nimport { PATH_PAGE } from '../../../../routes/paths'; // utils\n\nimport { fData } from '../../../../utils/formatNumber'; // components\n\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs'; //\n\nimport FormikForm from './FormikForm';\nimport ReactHookForm from './ReactHookForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_FILE_SIZE = 2 * 1000 * 1000; // 2 Mb\n\nconst FILE_FORMATS = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: theme.spacing(11),\n    paddingBottom: theme.spacing(15)\n  };\n}); // ----------------------------------------------------------------------\n\nexport const defaultValues = {\n  fullName: '',\n  email: '',\n  age: '',\n  startDate: null,\n  endDate: null,\n  password: '',\n  confirmPassword: '',\n  quillEditor: '',\n  draftEditor: '',\n  photo: null,\n  terms: false\n};\nexport const FormSchema = Yup.object().shape({\n  fullName: Yup.string().required('Full name is required').min(6, 'Mininum 6 characters').max(15, 'Maximum 15 characters'),\n  email: Yup.string().required('Email is required').email('That is not an email'),\n  age: Yup.number().required('Age is required').positive('Age must be a positive number').integer().moreThan(18, 'Age must be greater than or equal to 18').lessThan(120, 'Age must be less than or equal to 120'),\n  startDate: Yup.date().nullable().required('Start date is required'),\n  endDate: Yup.date().required('End date is required').nullable().min(Yup.ref('startDate'), 'End date must be later than start date'),\n  password: Yup.string().required('Password is required').min(6, 'Password should be of minimum 6 characters length'),\n  confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password')], \"Password's not match\"),\n  quillEditor: Yup.string().required('Quill editor is required').min(200),\n  draftEditor: Yup.mixed().test('max text', 'Draft editor Must Be At Least 200 Characters', value => value && value.getCurrentContent().getPlainText('\\u0001').length > 200),\n  terms: Yup.boolean().oneOf([true], 'Must Accept Terms and Conditions'),\n  photo: Yup.mixed().required('Photo is is required').test('fileFormat', 'Unsupported Format', value => value && FILE_FORMATS.includes(value.type)).test('fileSize', `File must be less than or equal to ${fData(MAX_FILE_SIZE)}`, value => value && value.size <= MAX_FILE_SIZE)\n});\nexport default function FormValidation() {\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Form Validation\",\n    children: /*#__PURE__*/_jsxDEV(RootStyle, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 6,\n          pb: 1,\n          bgcolor: theme => theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n            heading: \"Form Validation\",\n            links: [{\n              name: 'Components',\n              href: PATH_PAGE.components\n            }, {\n              name: 'Form Validation'\n            }],\n            moreLink: ['https://formik.org/', 'https://react-hook-form.com/', 'https://github.com/jquense/yup']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          mt: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                position: 'static'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"Formik Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(FormikForm, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                position: 'static'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                title: \"React Hook Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(ReactHookForm, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/form/index.js"],"names":["Yup","styled","Box","Card","Grid","Container","CardHeader","CardContent","PATH_PAGE","fData","Page","HeaderBreadcrumbs","FormikForm","ReactHookForm","MAX_FILE_SIZE","FILE_FORMATS","RootStyle","theme","paddingTop","spacing","paddingBottom","defaultValues","fullName","email","age","startDate","endDate","password","confirmPassword","quillEditor","draftEditor","photo","terms","FormSchema","object","shape","string","required","min","max","number","positive","integer","moreThan","lessThan","date","nullable","ref","oneOf","mixed","test","value","getCurrentContent","getPlainText","length","boolean","includes","type","size","FormValidation","pt","pb","bgcolor","palette","mode","name","href","components","mt","position"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Grid, Container, CardHeader, CardContent } from '@mui/material';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport FormikForm from './FormikForm';\nimport ReactHookForm from './ReactHookForm';\n\n// ----------------------------------------------------------------------\n\nconst MAX_FILE_SIZE = 2 * 1000 * 1000; // 2 Mb\nconst FILE_FORMATS = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport const defaultValues = {\n  fullName: '',\n  email: '',\n  age: '',\n  startDate: null,\n  endDate: null,\n  password: '',\n  confirmPassword: '',\n  quillEditor: '',\n  draftEditor: '',\n  photo: null,\n  terms: false,\n};\n\nexport const FormSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .required('Full name is required')\n    .min(6, 'Mininum 6 characters')\n    .max(15, 'Maximum 15 characters'),\n  email: Yup.string().required('Email is required').email('That is not an email'),\n  age: Yup.number()\n    .required('Age is required')\n    .positive('Age must be a positive number')\n    .integer()\n    .moreThan(18, 'Age must be greater than or equal to 18')\n    .lessThan(120, 'Age must be less than or equal to 120'),\n  startDate: Yup.date().nullable().required('Start date is required'),\n  endDate: Yup.date()\n    .required('End date is required')\n    .nullable()\n    .min(Yup.ref('startDate'), 'End date must be later than start date'),\n  password: Yup.string().required('Password is required').min(6, 'Password should be of minimum 6 characters length'),\n  confirmPassword: Yup.string()\n    .required('Confirm password is required')\n    .oneOf([Yup.ref('password')], \"Password's not match\"),\n  quillEditor: Yup.string().required('Quill editor is required').min(200),\n  draftEditor: Yup.mixed().test(\n    'max text',\n    'Draft editor Must Be At Least 200 Characters',\n    (value) => value && value.getCurrentContent().getPlainText('\\u0001').length > 200\n  ),\n  terms: Yup.boolean().oneOf([true], 'Must Accept Terms and Conditions'),\n  photo: Yup.mixed()\n    .required('Photo is is required')\n    .test('fileFormat', 'Unsupported Format', (value) => value && FILE_FORMATS.includes(value.type))\n    .test(\n      'fileSize',\n      `File must be less than or equal to ${fData(MAX_FILE_SIZE)}`,\n      (value) => value && value.size <= MAX_FILE_SIZE\n    ),\n});\n\nexport default function FormValidation() {\n  return (\n    <Page title=\"Form Validation\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container maxWidth=\"lg\">\n            <HeaderBreadcrumbs\n              heading=\"Form Validation\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Form Validation' }]}\n              moreLink={['https://formik.org/', 'https://react-hook-form.com/', 'https://github.com/jquense/yup']}\n            />\n          </Container>\n        </Box>\n\n        <Container sx={{ mt: 10 }}>\n          <Grid container spacing={5}>\n            <Grid item xs={12} sm={6}>\n              <Card sx={{ position: 'static' }}>\n                <CardHeader title=\"Formik Form\" />\n                <CardContent>\n                  <FormikForm />\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <Card sx={{ position: 'static' }}>\n                <CardHeader title=\"React Hook Form\" />\n                <CardContent>\n                  <ReactHookForm />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}