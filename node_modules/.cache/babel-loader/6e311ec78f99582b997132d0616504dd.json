{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{apiUrl}from'../../config';import{objToQueryString}from'../../config';//Fetch all course data using offset and limit!\nfunction getAllEvaluation(){return _getAllEvaluation.apply(this,arguments);}function _getAllEvaluation(){_getAllEvaluation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryString=objToQueryString({// page: page,\n// limit: limit,\n});apiLink=apiUrl+'/evaluation/getevaluationlist';console.log(\"Request from getEvaluation to\",apiLink);_context.next=5;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getAllEvaluation.apply(this,arguments);}function getEvaluationID(_x){return _getEvaluationID.apply(this,arguments);}//api function for update a course \nfunction _getEvaluationID(){_getEvaluationID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var apiLink,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('getEvaluationID');apiLink=apiUrl+'/evaluation/getEvaluationID?id='+id;console.log(id,'getEvaluationID ');_context2.next=5;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 5:data=_context2.sent;console.log('Get getEvaluationID',data);return _context2.abrupt(\"return\",data);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _getEvaluationID.apply(this,arguments);}function editEvaluation(_x2,_x3,_x4,_x5,_x6,_x7,_x8,_x9,_x10){return _editEvaluation.apply(this,arguments);}//api function for adding a course \nfunction _editEvaluation(){_editEvaluation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(course,name,board,subBoard,classes,subject,description,status,courseImage){var formData,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// var details = {\n//     \"name\": name,\n//     \"description\": description,\n//     \"board\": board,\n//     \"classes\": classes,\n//     \"subject\": subject,\n//     \"topic\": topic,\n//     // \"coursePicture\": coursePicture,\n//     'status':status\n// };\n// var formBody = [];\n// for (var property in details) {\n//     var encodedKey = encodeURIComponent(property);\n//     var encodedValue = encodeURIComponent(details[property]);\n//     formBody.push(encodedKey + \"=\" + encodedValue);\n// }\n// formBody = formBody.join(\"&\");\nformData=new FormData();formData.append(\"name\",name);formData.append(\"board\",board);if(subBoardID){formData.append(\"subBoard\",subBoard);}formData.append(\"classes\",classes);formData.append(\"subject\",subject);// formData.append(\"topicIDs\", topicIDs)\nformData.append(\"description\",description);formData.append(\"status\",status);formData.append(\"image\",courseImage);_context3.next=11;return fetch(apiUrl+'/evaluation/editEvaluation/'+e,{method:'PATCH',headers:{Accept:'application/json'// 'Content-Type': 'application/json',\n// 'Content-Type': 'multipart/form-data',\n},// body: JSON.stringify({ name, subBoardID, boardID, classesID, subjectID, description, status }),\nbody:formData}).then(function(res){return res.json();});case 11:data=_context3.sent;return _context3.abrupt(\"return\",data);case 13:case\"end\":return _context3.stop();}}},_callee3);}));return _editEvaluation.apply(this,arguments);}function createEvaluation(_x11,_x12,_x13,_x14,_x15){return _createEvaluation.apply(this,arguments);}//api to delete the course from the database\nfunction _createEvaluation(){_createEvaluation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(board,qualification,subject,description,course){var details,formBody,property,encodedKey,encodedValue,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0://////////////////////////////\ndetails={\"board\":board,\"qualification\":qualification,\"subject\":subject,\"description\":description,\"course\":course};//   console.log(details);\nformBody=[];//   console.log('API url check ',apiUrl)\nfor(property in details){encodedKey=encodeURIComponent(property);encodedValue=encodeURIComponent(details[property]);formBody.push(encodedKey+\"=\"+encodedValue);}formBody=formBody.join(\"&\");_context4.next=6;return fetch(apiUrl+'/evaluation/createEvaluation',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/x-www-form-urlencoded'},body:formBody}).then(function(res){return res.json();});case 6:data=_context4.sent;console.log('client data console',data);return _context4.abrupt(\"return\",data);case 9:case\"end\":return _context4.stop();}}},_callee4);}));return _createEvaluation.apply(this,arguments);}function deleteEvaluation(_x16){return _deleteEvaluation.apply(this,arguments);}//api to get the details of a particular topic by sending the courdseId\nfunction _deleteEvaluation(){_deleteEvaluation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(course){var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(apiUrl+'/evaluation/deleteEvaluationById/'+course,{method:'DELETE',headers:{Accept:'application/json'// 'Content-Type': 'application/json',\n}}).then(function(res){return res.json();});case 2:data=_context5.sent;console.log('courseID server check',deleteEvaluation);return _context5.abrupt(\"return\",data);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return _deleteEvaluation.apply(this,arguments);}function getEvaluationById(_x17){return _getEvaluationById.apply(this,arguments);}function _getEvaluationById(){_getEvaluationById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(evaluation){var data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch(apiUrl+'/evaluation/getEvaluationById/'+evaluation,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context6.sent;return _context6.abrupt(\"return\",data);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return _getEvaluationById.apply(this,arguments);}function getEvaluationByFilter(_x18,_x19,_x20,_x21,_x22,_x23,_x24){return _getEvaluationByFilter.apply(this,arguments);}//api to get all courses of user\nfunction _getEvaluationByFilter(){_getEvaluationByFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(searchString,startDate,endDate,sortByDate,status,board,subject){var obj,queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:obj={board:board,subject:subject,searchString:searchString,startDate:startDate,endDate:endDate,sortByDate:sortByDate,status:status};queryString=objToQueryString(obj);if(queryString==null){apiLink=apiUrl+'/course/filterEvaluation';}else{apiLink=apiUrl+'/course/filterEvaluation?'+queryString;}console.log(\"test call back\",queryString,obj);_context7.next=6;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json'// 'Content-Type': 'application/json',\n}}).then(function(res){return res.json();});case 6:data=_context7.sent;return _context7.abrupt(\"return\",data);case 8:case\"end\":return _context7.stop();}}},_callee7);}));return _getEvaluationByFilter.apply(this,arguments);}function getAllUserEvaluations(_x25){return _getAllUserEvaluations.apply(this,arguments);}function _getAllUserEvaluations(){_getAllUserEvaluations=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(userID){var data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return fetch(apiUrl+'/userEvaluation/getAllUserEvaluations/'+userID,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context8.sent;return _context8.abrupt(\"return\",data);case 4:case\"end\":return _context8.stop();}}},_callee8);}));return _getAllUserEvaluations.apply(this,arguments);}export{getAllEvaluation,getEvaluationID,editEvaluation,deleteEvaluation,getEvaluationByFilter,getEvaluationById,getAllUserEvaluations,createEvaluation};","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Evaluation/Evaluation.js"],"names":["apiUrl","objToQueryString","getAllEvaluation","queryString","apiLink","console","log","fetch","method","headers","Accept","then","res","json","data","getEvaluationID","id","editEvaluation","course","name","board","subBoard","classes","subject","description","status","courseImage","formData","FormData","append","subBoardID","e","body","createEvaluation","qualification","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","deleteEvaluation","getEvaluationById","evaluation","getEvaluationByFilter","searchString","startDate","endDate","sortByDate","obj","getAllUserEvaluations","userID"],"mappings":"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","sourcesContent":["\nimport { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n//Fetch all course data using offset and limit!\nasync function getAllEvaluation() {\n    const queryString = objToQueryString({\n        // page: page,\n        // limit: limit,\n\n    })\n    var apiLink;\n\n    apiLink = apiUrl + '/evaluation/getevaluationlist'\n    console.log(\"Request from getEvaluation to\", apiLink);\n    \n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n\n    return data;\n\n}\n\nasync function getEvaluationID(id) {\n    console.log('getEvaluationID');\n\n    var apiLink;\n    \n        apiLink = apiUrl + '/evaluation/getEvaluationID?id='+ id\n   \n        console.log( id, 'getEvaluationID ' )\n\n    const data = await fetch(apiLink,  {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n\n    }).then((res) => res.json());\n\n    \n\n   console.log('Get getEvaluationID', data)\n    return data;\n}\n\n//api function for update a course \n\nasync function editEvaluation(course, name, board, subBoard, classes, subject, description, status, courseImage) {\n    // var details = {\n    //     \"name\": name,\n    //     \"description\": description,\n    //     \"board\": board,\n    //     \"classes\": classes,\n    //     \"subject\": subject,\n    //     \"topic\": topic,\n    //     // \"coursePicture\": coursePicture,\n    //     'status':status\n    // };\n\n    // var formBody = [];\n    // for (var property in details) {\n    //     var encodedKey = encodeURIComponent(property);\n    //     var encodedValue = encodeURIComponent(details[property]);\n    //     formBody.push(encodedKey + \"=\" + encodedValue);\n    // }\n    // formBody = formBody.join(\"&\");\n    const formData = new FormData();\n    formData.append(\"name\", name)\n    formData.append(\"board\", board)\n    if (subBoardID) {\n        formData.append(\"subBoard\", subBoard)\n    }\n    formData.append(\"classes\", classes)\n    formData.append(\"subject\", subject)\n    // formData.append(\"topicIDs\", topicIDs)\n    formData.append(\"description\", description)\n    formData.append(\"status\", status)\n    formData.append(\"image\", courseImage)\n    const data = await fetch(apiUrl + '/evaluation/editEvaluation/' + e, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/json',\n            // 'Content-Type': 'multipart/form-data',\n        },\n        // body: JSON.stringify({ name, subBoardID, boardID, classesID, subjectID, description, status }),\n        body: formData\n    }).then((res) => res.json());\n    // console.log(\"description\")\n    return data;\n\n}\n\n//api function for adding a course \nasync function createEvaluation( board, qualification, subject, description, course) {\n\n    //////////////////////////////\n    var details = {\n        \"board\": board,\n        \"qualification\": qualification,\n        \"subject\": subject,\n        \"description\": description,\n        \"course\": course,\n       \n    };\n\n\n   \n    //   console.log(details);\n    var formBody = [];\n    //   console.log('API url check ',apiUrl)\n    for (var property in details) {\n        var encodedKey = encodeURIComponent(property);\n        var encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const data = await fetch(apiUrl + '/evaluation/createEvaluation', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n    }).then((res) => res.json());\n    \n   \n  \n    console.log('client data console',data);\n    return data;\n    \n\n\n\n}\n\n//api to delete the course from the database\nasync function deleteEvaluation(course) {\n\n    const data = await fetch(apiUrl + '/evaluation/deleteEvaluationById/' + course, {\n\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    console.log('courseID server check', deleteEvaluation)\n    return data;\n}\n\n//api to get the details of a particular topic by sending the courdseId\nasync function getEvaluationById(evaluation) {\n    const data = await fetch(apiUrl + '/evaluation/getEvaluationById/' + evaluation, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\n\n\n\nasync function getEvaluationByFilter(searchString, startDate, endDate, sortByDate, status, board, subject) {\n    let obj = {\n        board: board,\n        subject: subject,\n        searchString: searchString,\n        startDate: startDate,\n        endDate: endDate,\n        sortByDate: sortByDate,\n        status: status\n    }\n    const queryString = objToQueryString(obj)\n    var apiLink;\n    if (queryString == null) {\n        apiLink = apiUrl + '/course/filterEvaluation'\n    }\n    else {\n        apiLink = apiUrl + '/course/filterEvaluation?' + queryString\n    }\n\n    console.log(\"test call back\", queryString, obj)\n    const data = await fetch(apiLink, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            // 'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n\n}\n\n//api to get all courses of user\nasync function getAllUserEvaluations(userID) {\n    const data = await fetch(apiUrl + '/userEvaluation/getAllUserEvaluations/' + userID, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }).then((res) => res.json());\n    return data;\n}\n\nexport { getAllEvaluation,getEvaluationID, editEvaluation, deleteEvaluation, getEvaluationByFilter, getEvaluationById, getAllUserEvaluations, createEvaluation }"]},"metadata":{},"sourceType":"module"}