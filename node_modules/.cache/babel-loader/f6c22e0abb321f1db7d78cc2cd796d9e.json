{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\evaluation\\\\Addeval.js\",\n    _s = $RefreshSig$();\n\nimport { dynamic, InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap';\nimport { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses';\nimport { createEvaluation } from '../../api/Evaluation/Evaluation';\nimport { createQuestion } from '../../api/Question/Question';\nimport { createAnswer } from '../../api/Answer/Answer';\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic';\nimport { getAllBoard } from '../../api/Boards/Boards';\nimport { getAllSubjects } from '../../api/Subject/Subject';\nimport { getAllCourse } from '../../api/Courses/Courses';\nimport { getAllSubBoard } from 'src/api/SubBoard/SubBoard';\nimport { getAllClasses } from '../../api/Classes/Classes';\nimport test from './image/geogebra-export.png';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport \"./app.css\";\nimport Container from '@material-ui/core/Container';\nimport Addmoreinput from './dynamic';\nimport Dynfield from './dynfield';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Icon from '@material-ui/core/Icon';\nimport { getEvaluationID } from '../../api/Evaluation/Evaluation';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport { v4 as uuidv4 } from 'uuid'; // import App from './test'\n\nimport CardMedia from '@mui/material/CardMedia';\nimport SaveIcon from '@mui/icons-material/Save';\nimport * as serviceWorker from './serviceWorker'; // import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n\nimport { Button, TextField, FormControlLabel } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal'; // import Box from '@mui/material/Box';\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal,  InputGroup, FormControl, Nav, Row, Col, Sonnet } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport { getUserById, changeStatus, deleteUser } from \"../../api/Users/Users\";\nimport { imageBaseUrl } from '../../config'; // import Tabs from 'react-bootstrap/Tabs'\n\nimport { materialTableIcons } from '../../config';\nimport MaterialTable from 'material-table';\nimport { getAllUserCourses } from '../../api/Courses/Courses'; // import { CategoryScale, PointElement, LinearScale, BarElement, Title, Tooltip, Legend, Chart } from 'chart.js';\n// import { Bar } from 'react-chartjs-2';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent'; // import Table from '@mui/material/Table';\n\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead'; // import { Button } from '@mui/material';\n// import Grid from '@mui/material/Grid';\n// import CircularProgress from '@mui/material/CircularProgress';\n// import Modal from '@mui/material/Modal';\n// import UserCoursesRow  from './UserCoursesRow'\n\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n})); // import UserSubscriptionRow from './UserSubscriptionRow'\n// import { getEarningsByUserId } from 'src/api/Earnings/Earnings'\n// import UserPaymentRow from './UserPaymentRow'\n\nvar className = '';\nvar boardName = '';\nvar subBoardName = '';\nvar subjectName = '';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport default function User(props) {\n  _s();\n\n  // const courseID = props.match.params.courseId;\n  // const courseStatus = props.match.params.courseStatus;\n  const {\n    courseID,\n    courseStatus\n  } = useParams(); // console.log(props)\n  // const subjectStatus = props.match.params.subjectStatus;\n\n  const [mode, setMode] = useState(courseID ? \"edit\" : \"add\"); //setting subjects data into a variable\n\n  const [courses, setCourses] = useState({}); //setting course data into a variable\n\n  const [boardData, setBoardData] = useState([]); //setting course data into a variable\n\n  const [classesData, setClassesData] = useState([]);\n  const [coursesData, setCoursesData] = useState([]); //setting course data into a variable\n\n  const [subjectData, setSubjectData] = useState([]); //setting course data into a variable\n\n  const topicData = useRef([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success mo\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add course button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the course name user want to add\n\n  const [name, setName] = useState(); //sets topic description user want to add\n\n  const [description1, setDescription1] = useState(); //sets board user want to add\n\n  const [board, setBoard] = useState();\n  const [board2, setBoard2] = useState(); //sets classes user want to add\n  // const [classes, setClasses] = useState()\n\n  const [classes1, setClasses1] = useState(); //sets subject user want to add\n\n  const [subject, setSubject] = useState();\n  const [subject2, setSubject2] = useState();\n  const [text, setText] = useState(\"\");\n\n  const addToText = val => {\n    setText(text => [...text, val + \" \"]);\n  }; //sets topic  user want to add\n\n\n  const [topic, setTopic] = useState([]);\n  const [chooseTopic, setChooseTopic] = useState([]);\n  const [newTopic, setNewTopic] = useState(1); // console.log(chooseTopic)\n\n  const [subBoardsData, setSubBoardsData] = useState([]);\n  console.log(subBoardsData);\n  const [selectedSubBoard, setSelectedSubBoard] = useState(); //sets course picture user want to add\n\n  const [coursePicture, setCoursePicture] = useState();\n  const [course, setCourse] = useState([]); //sets course picture preview user want to add\n\n  const [picturePreview, setPicturePreview] = useState(null); //referance variable for video file choose\n\n  let chooseCoursePictureRef = useRef();\n  let chooseTopicRef = useRef(); // sets varialbe for video status\n\n  const [videoStatus, setVideoStatus] = useState(false); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(100);\n  const [classState, setClassState] = useState('');\n  const [boardState, setBoardState] = useState('');\n  const [subBoardState, setSubBoardState] = useState('');\n  const [subjectState, setSubjectState] = useState('');\n  const [courseState, setCourseState] = useState('');\n  const [foodState, setFoodState] = useState();\n  const [formula, setFormula] = useState('');\n  const [question, setQuestion] = useState();\n  const [typestate, setTypeState] = useState();\n  const [type, setType] = useState();\n  const [boardIcon, setBoardIcon] = useState(\"\");\n  const [media, setMedia] = useState(\"\"); // const courseID ='';\n  // const [editFormLoader, setEditFormLoader] = useState(false)\n  // const [mode, setMode] = useState(courseID ? \"edit\" : \"add\");\n\n  const [evalid, setEvalid] = useState();\n  const [hint, setHint] = useState(); // const [createevaluation, setCreateevaluation] = useState()\n\n  const [id, setID] = useState();\n  const [marks, setMarks] = useState();\n  const [answer, setAnswer] = useState();\n  const [showhide, setShowhide] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl); // free memory when ever this component is unmounted\n\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n\n  const onSelectFile = e => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined); // setMedia(e.target.files[0])\n\n      return;\n    } // I've kept this example simple by using the first image instead of multiple\n\n\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleshowhide = event => {\n    const getuser = event.target.value;\n    setType(event.target.value);\n    setShowhide(getuser);\n  };\n\n  const [courseImage, setCourseImage] = useState(null);\n  useEffect(async () => {\n    if (board) {\n      const response = await getAllSubBoard(board, 1, 1000);\n\n      if (response.status) {\n        setSubBoardsData(response.results.data);\n      }\n    }\n  }, [board]);\n  useEffect(() => {\n    setMode(courseID ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getCourseById(courseID).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        var _res$course, _res$course$subBoardI;\n\n        //setting the fetched Course by id into state variable\n        setCourse(res.course);\n        setName(res.course.name); // setDescription(res.course.description)\n        //setBoard(res?.course?.board?._id)\n\n        setSelectedSubBoard(res === null || res === void 0 ? void 0 : (_res$course = res.course) === null || _res$course === void 0 ? void 0 : (_res$course$subBoardI = _res$course.subBoardID) === null || _res$course$subBoardI === void 0 ? void 0 : _res$course$subBoardI._id); // setClasses(res.course.classesID._id)\n        // setSubject(res.course.subjectID._id)\n\n        setTopic(res.course.topicIDs);\n        setCoursePicture(res.course.coursePicture);\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [courseID]);\n  useEffect(() => {\n    // fetching all boards\n    getAllBoard(page, limit).then(res => {\n      console.log('Boards', res);\n\n      if (res.status) {\n        //setting the fetched board into state variable\n        setBoardData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all topics\n\n    getAllTopics(page, limit).then(res => {\n      console.log('Topics', res);\n\n      if (res.status) {\n        //setting the fetched topic into state variable\n        topicData.current = res.results.data;\n        chooseTopicHandler();\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all classes\n\n    getAllClasses(page, limit).then(res => {\n      console.log('Classes', res);\n\n      if (res.status) {\n        //setting the fetched classes into state variable\n        setClassesData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all courses \n\n    getAllCourse(page, limit).then(res => {\n      console.log('course', res);\n\n      if (res.status) {\n        //setting the fetched classes into state variable\n        setCoursesData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all subjects\n\n    getAllSubjects(page, limit).then(res => {\n      console.log('Subjects', res);\n\n      if (res.status) {\n        //setting the fetched Subject into state variable\n        setSubjectData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  const mctypes = useStyles();\n  const classes = useStyles();\n  const mcqs = useStyles();\n  const [inputFields, setInputFields] = useState([{\n    id: uuidv4(),\n    type: '',\n    hint: '',\n    answer: '',\n    marks: ''\n  }]); // const [mcqFields, setMcqFields] = useState([\n  //     { id: uuidv4(), optiona: '', optionb: '', optionc: '', optiond: '' },\n  // ]);\n\n  const [mcqFields, setMcqFields] = useState([{\n    id: uuidv4(),\n    optiona: ''\n  }]);\n  const [mcqtypeFields, setMcqTypeFields] = useState([{\n    id: uuidv4(),\n    hint: '',\n    type: '',\n    marks: ''\n  }]);\n\n  const handlemctypesSubmit = e => {\n    e.preventDefault();\n    console.log(\"mctypesfiled\", mctypes);\n  }; // setInputFields= useState(0);\n\n\n  const handleMctypesChangeInput = (id, event) => {\n    const newmctypesFields = mcqtypeFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setMcqTypeFields(newmctypesFields);\n  }; //edit the details  of the existing Course\n\n\n  function editCourseDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (courseID != '') {\n      editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus, courseImage).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Subject details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill all the Course details');\n    }\n  } ////////\n\n\n  const addevaluation = async () => {\n    var createevaluation = await createEvaluation(boardName, className, subjectName, description1, name);\n    setTab(1);\n    setID(createevaluation);\n    console.log(\"This is from create evaluation\", createevaluation);\n  }; //adds new Course \n\n\n  const addNewEvaluation = async () => {\n    setQuestion(' ');\n    setHint(' ');\n    setMarks(' ');\n    setAnswer(' '); // setMedia(' ');\n\n    alert(\"Question and answer submitted\");\n\n    const handleNext = () => {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }; // className = '';\n    // boardName = '';\n    // subBoardName = '';\n    // subjectName = '';\n    // setModalVisible(false);\n    // setAddLoader(true);\n    // showError(false);\n    // console.log(boardName);\n    //  console.log( boardData);\n\n\n    var boardName = board2;\n    className = classes1;\n    subjectName = subject2; // if (name && board && classes && subject && description && courseImage != '') {\n\n    var Questiontableid = await createQuestion(id, question, media);\n    console.log('This is question table id', Questiontableid);\n    var ABC = createAnswer(id, Questiontableid, inputFields, mcqFields, mcqtypeFields);\n    console.log('CA Check', ABC); //             .then((res) => {\n    //                 console.log(res);\n    //                 if (res.status) {\n    //                     setAddLoader(false);\n    //                     setModalLine1('New Course Added');\n    //                     setModalLine2('Successfully')\n    //                     setModalVisible(true)\n    //                 }\n    //                 else {\n    //                     setAddLoader(false);\n    //                     showError(true);\n    //                     setErrorMessage('Error occured');\n    //                 }\n    //             })\n    //             .catch((err) => {\n    //                 console.log(err);\n    //                 setAddLoader(false)\n    //                 showError(true);\n    //                 setErrorMessage('Error occured');\n    //             })\n    //     }\n    //     else {\n    //         setAddLoader(false)\n    //         showError(true);\n    //         setErrorMessage('Please fill the Course details');\n    //     }\n    // }\n    // // on change Picture handler\n    // const onChangePictureHandler = (e) => {\n    //     var url = URL.createObjectURL(e.target.files[0]);\n    //     console.log(e.target.files[0])\n    //     setPicturePreview(url)\n    //     setCoursePicture(e.target.files[0])\n    // }\n  }; // function to reset \n\n\n  const reSetForm = () => {\n    setName(null);\n    setDescription1(null);\n    setBoard(null);\n    setClasses(null);\n    setSubject(null);\n    setTopic(null);\n    setSelectedSubBoard(null);\n    setCoursePicture(null);\n  }; // function for choose topic\n\n\n  const actionForChooseTopic = (e, index) => {\n    // setTopic(e.target.value)\n    let newDAta = e.target.value;\n    let all = [...topic];\n    all[index] = newDAta;\n    setTopic(all); // console.log(all)\n  }; // function to add new topic\n\n\n  const chooseTopicHandler = () => {\n    let all = [...topic];\n    all.push(\"-1\");\n    setTopic(all);\n  }; //function to delete the selected topic from state array\n\n\n  function deleteTopic(index) {\n    //removing selected topic from state array \n    const updatedTopic = [...topic];\n    updatedTopic.splice(index, 1);\n    setTopic(updatedTopic); // console.log(\"working\")\n  } //setting the user id of the user coming from the url into a local variable\n  // const [userId, setUserId] = useState(props.match.params.id);\n\n\n  const {\n    userId\n  } = useParams();\n  const tableIcons = materialTableIcons;\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //constant for storing the details of the particular user\n\n  const [userDetailsById, setUserDetailsById] = useState([]);\n  const [userProfileImg, setUserProfileImg] = useState(''); //sets the all courses of user\n\n  const [userCourses, setUserCourses] = useState([]); // console.log('userCourses', userCourses)\n  //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false);\n  const [filterModal, setFilterModal] = useState(false); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const [completedCouresNum, setCompletedCouresNum] = useState(0); //variable to configure whether the user of that particular id is available or not\n\n  const [noUserFound, setNoUserFound] = useState(false); // example\n  //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(false);\n  const [tab, setTab] = React.useState(0);\n  const [userPayments, setUserPayments] = useState([]);\n  const [totalPaymentAmount, setTotalPaymentAmount] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n    console.log(\"SetTab\", newValue);\n  }; //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } //useEffect will assign the data of user according to the userId from the state on every change into the userId\n\n\n  useEffect(() => {\n    getUserById(userId).then(res => {\n      // console.log('user Details', res);\n      // if (res.status) {\n      setNoUserFound(false);\n      setUserDetailsById(res.user);\n      const profilePic = res.user.profileImage ? imageBaseUrl + res.user.profileImage : '';\n      setUserProfileImg(profilePic); // }\n      // else {\n      //     setNoUserFound(true);\n      // }\n    }).catch(err => {// console.log(err);\n    });\n  }, [userId]);\n  useEffect(async () => {\n    if (userId) {\n      const response = await getEarningsByUserId(userId);\n\n      if (response.status) {\n        setUserPayments(response.course); // console.log(response, \" payment\")\n\n        let sum = 0;\n        response.course.map(item => {\n          sum = sum + parseInt(item.amount);\n        });\n        setTotalPaymentAmount(sum);\n      }\n    }\n  }, [userId]); //function to change the status of the user to blocked!\n\n  function changeUserStatus(status) {\n    changeStatus(userDetailsById._id, status).then(res => {\n      // console.log('res', res);\n      if (res.status) {\n        getUserById(userId).then(res => {\n          // console.log(res);\n          if (res.status) {\n            setNoUserFound(false);\n            setUserDetailsById(res.user);\n            const profilePic = res.user.profileImage ? imageBaseUrl + res.user.profileImage : '';\n            setUserProfileImg(profilePic);\n          } else {\n            setNoUserFound(true);\n          }\n        }).catch(err => {// console.log(err);\n        });\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {// console.log('err', err);\n    });\n  }\n\n  function changeCourseStatus(rowData, index, status) {\n    var _rowData$boardID, _rowData$subBoardID, _rowData$classesID, _rowData$subjectID;\n\n    editCourse(rowData._id, rowData.name, rowData === null || rowData === void 0 ? void 0 : (_rowData$boardID = rowData.boardID) === null || _rowData$boardID === void 0 ? void 0 : _rowData$boardID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subBoardID = rowData.subBoardID) === null || _rowData$subBoardID === void 0 ? void 0 : _rowData$subBoardID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$classesID = rowData.classesID) === null || _rowData$classesID === void 0 ? void 0 : _rowData$classesID._id, rowData === null || rowData === void 0 ? void 0 : (_rowData$subjectID = rowData.subjectID) === null || _rowData$subjectID === void 0 ? void 0 : _rowData$subjectID._id, rowData === null || rowData === void 0 ? void 0 : rowData.description, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        // const index = rowData.tableData.id;\n        //updating Course status in state array\n        const updatedRows = [...course];\n        updatedRows[index].status = status;\n        setCourse(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }\n\n  function deleteUserProfile() {\n    deleteUser(userDetailsById._id).then(res => {\n      // console.log(res)\n      if (res.status) {}\n    }).catch(err => {// console.error(err)\n    });\n  } // function addnewqtn() {\n  //     console.log('jacky')\n  //     $(\"#dynamic\").append(\"<input type='text' value={'jacky'}/>\");\n  // }\n\n\n  useEffect(() => {\n    // fetching all user courses\n    setTableDataLoading(true);\n    getAllUserCourses(userId).then(res => {\n      // console.log('getAllUserCourses', res);\n      if (res.status) {\n        //setting the fetched getAllUserCourses into state variable\n        setUserCourses(res.courses);\n        setCompletedCouresNum(res.courses.filter(item => item.progress == 100).length);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {// console.error(err);\n    });\n  }, [userId]); // console.log(className)\n\n  const classSeparator = e => {\n    setClassState(e.target.value); // const className = e.target.value.split('*')[0]\n\n    className = e.target.value.split('*')[1];\n    console.log('value', className);\n    setClasses1(className); // setName(className + ' ' + boardName + ' ' + subjectName)\n  };\n\n  const courseSeparator = e => {\n    setCourseState(e.target.value); // const qualification = e.target.value.split('*')[0]\n    // setCourses(courseName)\n\n    courseName = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subjectName + ' ' + courseName);\n  };\n\n  const boardSeparator = e => {\n    setBoardState(e.target.value); // const board2 = e.target.value.split('*')[0]\n\n    boardName = e.target.value.split('*')[1];\n    console.log('value', boardName);\n    setBoard2(boardName);\n    console.log('board value', board2); // setName(className + ' ' + boardName + ' ' + subjectName)\n  };\n\n  const typeseperator = e => {\n    typestate(e.target.value);\n    typename = e.target.value.split('*')[1];\n    console.log('value', typename);\n    setType(typename);\n    console.log('Type value', board);\n  };\n\n  const subBoardSeparator = e => {\n    setSubBoardState(e.target.value);\n    const subBoardId = e.target.value.split('*')[0];\n    setSelectedSubBoard(subBoardId);\n    subBoardName = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subBoardName);\n  };\n\n  const subjectSeparator = e => {\n    setSubjectState(e.target.value); // const subjectId = e.target.value.split('*')[0]\n\n    subjectName = e.target.value.split('*')[1];\n    console.log('value', subjectName);\n    setSubject2(subjectName);\n    console.log('subject value', subject2);\n    setName(className + ' ' + boardName + ' ' + subBoardName + ' ' + subjectName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const mcqSubmit = e => {\n    e.preventDefault();\n    console.log(\"mcqsfield\", mcqFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setInputFields(newInputFields);\n  };\n\n  const handleMCQChangeInput = (id, event) => {\n    const newMcqInputFields = mcqFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setMcqFields(newMcqInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      id: uuidv4(),\n      type: '',\n      hint: '',\n      answer: '',\n      marks: ''\n    }]);\n  };\n\n  const handlemcqAddFields = () => {\n    setMcqFields([...mcqFields, {\n      id: uuidv4(),\n      optiona: ''\n    }]);\n  };\n\n  const handlemcqRemoveFields = id => {\n    const values = [...mcqFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setMcqFields(values);\n  };\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mt-3 txt-5282F0 fw-bold\",\n        children: \"Evaluation Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container pageHeaderCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8 col-12\",\n              children: [/*#__PURE__*/_jsxDEV(Tabs, {\n                value: tab,\n                onChange: handleChange,\n                \"aria-label\": \"basic tabs example\",\n                variant: \"scrollable\",\n                scrollButtons: \"on\",\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Evaluation details\",\n                  ...a11yProps(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Create\",\n                  ...a11yProps(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  label: \"Review\",\n                  ...a11yProps(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TabPanel, {\n                  value: tab,\n                  index: 0,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"evaluationone\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"one\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-lg-6 col-sm-12 col-16\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"mb-3\",\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \" Board\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 924,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            onChange: boardSeparator,\n                            value: boardState,\n                            \"aria-label\": \"Default select example\",\n                            children: [\" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                              children: \"Select \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 926,\n                              columnNumber: 61\n                            }, this), boardData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: `${item._id}*${item.name}`,\n                              children: item.name\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 928,\n                              columnNumber: 65\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 925,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 923,\n                          columnNumber: 53\n                        }, this), subBoardsData.length ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"mb-3 col-4\",\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \" Sub Board\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 936,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            value: subBoardState,\n                            onChange: subBoardSeparator,\n                            \"aria-label\": \"Default select example\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              children: \" Select \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 938,\n                              columnNumber: 65\n                            }, this), subBoardsData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: `${item._id}*${item.name}`,\n                              children: item.name\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 940,\n                              columnNumber: 69\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 937,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 935,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 922,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"qualification col-lg-6\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"mb-3 \",\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \" Qualification\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 948,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            value: classState,\n                            onChange: classSeparator,\n                            \"aria-label\": \"Default select example\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              children: \"Select \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 950,\n                              columnNumber: 61\n                            }, this), classesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: `${item._id}*${item.name}`,\n                              children: item.name\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 952,\n                              columnNumber: 65\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 949,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 947,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 946,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 921,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"two\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"selectsub col-lg-6\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \"Subject\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 962,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            value: subjectState,\n                            onChange: subjectSeparator,\n                            \"aria-label\": \"Default select example\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              children: \"Select  \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 964,\n                              columnNumber: 61\n                            }, this), subjectData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: `${item._id}*${item.name}`,\n                              children: item.name\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 966,\n                              columnNumber: 65\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 963,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 961,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 959,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"coursename col-6\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \"Course Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 973,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            value: name,\n                            type: \"text\",\n                            onChange: e => setName(e.target.value),\n                            \"aria-label\": \"Default select example\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              children: \"Select  \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 975,\n                              columnNumber: 61\n                            }, this), coursesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: `${item.name}`,\n                              children: item.name\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 977,\n                              columnNumber: 65\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 974,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 972,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 971,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 958,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc col-lg-8\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mb-8 \",\n                        controlId: \"exampleForm.ControlTextarea1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Description\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 985,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          value: description1,\n                          placeholder: \"Total word count 400 only\",\n                          type: \"text\",\n                          onChange: e => setDescription1(e.target.value),\n                          as: \"textarea\",\n                          rows: 3\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 986,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 984,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 983,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"addevalnxtbtn\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => addevaluation(),\n                      className: \"btn btn-warning\",\n                      size: \"small\",\n                      variant: \"contained\",\n                      children: \"Next\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 991,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 990,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tab,\n          index: 1,\n          id: \"create\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createques\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-6 \",\n                controlId: \"exampleForm.ControlTextarea1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                style: {\n                  width: \"320%\",\n                  height: \"85%\"\n                },\n                value: question,\n                onChange: e => setQuestion(e.target.value),\n                as: \"textarea\",\n                rows: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"hidden\",\n                value: id,\n                onChange: e => setID(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"vl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"IV\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                class: \"ig\",\n                children: \"Media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  backgroundColor: \"gray\",\n                  marginLeft: \"-23%\"\n                },\n                sx: {\n                  border: '1px solid yellow'\n                },\n                className: \"addevalimght\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  onChange: e => setMedia(e.target.files[0])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 37\n                }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" col-lg-12 col-sm-6 col-12 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.root,\n                onSubmit: handleSubmit,\n                children: inputFields.map(inputField => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"anspt\",\n                    onChange: event => handleChangeInput(inputField.id, event),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"ques\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Answer in Part\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1041,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"crthint\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-lg-3 col-sm-6 col-12 mt-3 \",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Hint\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1045,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          value: inputFields.hint,\n                          name: \"hint\",\n                          type: \"text\",\n                          onChange: event => handleChangeInput(inputField.id, event)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1046,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \" type  col-lg-3 col-sm-6 col-12  \",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1051,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                            className: \"custom-select\",\n                            value: inputFields.type,\n                            name: \"type\",\n                            type: \"text\",\n                            onChange: e => handleshowhide(e),\n                            \"aria-label\": \"Default select example\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"select\",\n                              children: \"Select\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1057,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"text\",\n                              children: \" Text\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1058,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"media\",\n                              children: \"G-Panel\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1059,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"formula\",\n                              children: \"Formula\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1060,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"mcq\",\n                              children: \"MCQ\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1061,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1055,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1052,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1050,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"marks  col-lg-3 col-sm-6 col-12\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"exampleForm.ControlInput1\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            children: \"Marks\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1075,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            value: inputFields.marks,\n                            type: \"number\",\n                            name: \"marks\",\n                            placeholder: \"Marks\",\n                            onChange: event => handleChangeInput(inputField.id, event)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1077,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1074,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1073,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 49\n                    }, this), showhide === 'media' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"G-Panel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1090,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1091,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                          class: \"responsive-iframe\",\n                          img: true,\n                          src: test,\n                          width: \"100%\",\n                          height: \"200\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1092,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1089,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1088,\n                      columnNumber: 57\n                    }, this), showhide === 'mcq' && /*#__PURE__*/_jsxDEV(\"form\", {\n                      className: mcqs.root,\n                      onSubmit: handlemctypesSubmit,\n                      children: mcqtypeFields.map(mcqtypeField => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"crthint\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-lg-2 col-sm-6 col-12 mt-3 \",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Hint\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1105,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              value: mcqtypeFields.hint,\n                              name: \"hint\",\n                              type: \"text\",\n                              onChange: event => handleMctypesChangeInput(mcqtypeField.id, event)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1106,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1104,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \" type  col-lg-2 col-sm-6 col-12  \",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Type\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1111,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\",\n                              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"text\",\n                                name: \"type\",\n                                onChange: event => handleMCQChangeInput(mcqField.id, event)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1117,\n                                columnNumber: 78\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1112,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1110,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"marks  col-lg-2 col-sm-6 col-12\",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Marks\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1129,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                value: mcqtypeFields.marks,\n                                type: \"number\",\n                                name: \"marks\",\n                                placeholder: \"Marks\",\n                                onChange: event => handleMctypesChangeInput(mcqtypeField.id, event)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1131,\n                                columnNumber: 77\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1128,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1127,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1103,\n                          columnNumber: 68\n                        }, this)\n                      }, mcqtypeField.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1102,\n                        columnNumber: 68\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1100,\n                      columnNumber: 57\n                    }, this), showhide === 'mcq' && /*#__PURE__*/_jsxDEV(\"form\", {\n                      className: mcqs.root,\n                      onSubmit: mcqSubmit,\n                      children: [mcqFields.map(mcqField => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mcqbox\",\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3 \",\n                            controlId: \"exampleForm.ControlInput1\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Option\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1158,\n                              columnNumber: 77\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"text\",\n                              name: \"optiona\",\n                              value: mcqField.optiona,\n                              onChange: event => handleMCQChangeInput(mcqField.id, event),\n                              placeholder: \"Answer\",\n                              as: \"textarea\",\n                              rows: 5\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1159,\n                              columnNumber: 77\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1157,\n                            columnNumber: 73\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1154,\n                          columnNumber: 69\n                        }, this)\n                      }, mcqField.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1152,\n                        columnNumber: 65\n                      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mcqbtnsas\",\n                        style: {\n                          width: '80%',\n                          marginTop: '-4.9%',\n                          marginLeft: '3.7%'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"btnadd\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btnai\",\n                            size: \"small\",\n                            onClick: handlemcqAddFields,\n                            color: \"success\",\n                            variant: \"contained\",\n                            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1198,\n                              columnNumber: 174\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1198,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1197,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"btnsub\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btnsi\",\n                            variant: \"contained\",\n                            onClick: handlemcqRemoveFields,\n                            color: \"error\",\n                            size: \"small\",\n                            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1201,\n                              columnNumber: 175\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1201,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1200,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1196,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1149,\n                      columnNumber: 57\n                    }, this), showhide === 'formula' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-lg-5 col-sm-6 col-12 \",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mb-3 \",\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Formula\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1211,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form, {\n                          className: \"custom-select\",\n                          value: inputFields.formula,\n                          onChange: e => {\n                            const selectedFood = e.target.value;\n                            setFoodState(selectedFood);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1212,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"text\",\n                          text: text,\n                          name: \"Answer\",\n                          value: formula,\n                          onChange: e => setFormula(e.target.value),\n                          placeholder: \"Formula\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1221,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"buttons-flex\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"+\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1225,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\u2212\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1226,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xD7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1227,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xF7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1228,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"=\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1229,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\u2260\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1230,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xB1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1231,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"%\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1232,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"<\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1233,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \">\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1234,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1223,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1210,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1209,\n                      columnNumber: 57\n                    }, this), showhide != 'media' && showhide != 'formula' && showhide != 'mcq' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ans col-lg-6 col-sm-6 col-12\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mb-3 \",\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Answer\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1261,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form, {\n                          className: \"custom-select\",\n                          value: foodState,\n                          onChange: e => {\n                            const selectedFood = e.target.value;\n                            setFoodState(selectedFood);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1262,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"text\",\n                          name: \"answer\",\n                          value: inputFields.answer,\n                          onChange: event => handleChangeInput(inputField.id, event),\n                          placeholder: \"Answer\",\n                          as: \"textarea\",\n                          rows: 5\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1270,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1260,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"createplus\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"btnadd\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btnai\",\n                            size: \"small\",\n                            onClick: handleAddFields,\n                            color: \"success\",\n                            variant: \"contained\",\n                            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1274,\n                              columnNumber: 171\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1274,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1273,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"btnsub\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btnsi\",\n                            variant: \"contained\",\n                            onClick: handleRemoveFields,\n                            color: \"error\",\n                            size: \"small\",\n                            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1277,\n                              columnNumber: 172\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1277,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1276,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1272,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1259,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 45\n                  }, this)\n                }, inputField.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btnnxtcreate \",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-warning\",\n                  size: \"small\",\n                  onClick: () => setTab(2),\n                  variant: \"contained\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1293,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1291,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tab,\n          index: 2,\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Course\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"board Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1315,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Qualification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1316,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Subject Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1317,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1318,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1312,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1323,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: board2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1324,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: classes1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: subject2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: description1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1327,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1330,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1311,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastrev\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-6 \",\n                controlId: \"exampleForm.ControlTextarea1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                style: {\n                  width: \"570%\"\n                },\n                readOnly: true,\n                value: question,\n                onChange: e => setQuestion(e.target.value),\n                as: \"textarea\",\n                rows: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1344,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"vl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lastwmedia\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"medialabel\",\n                children: \"Media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  backgroundColor: \"gray\",\n                  marginLeft: \"-1350%\"\n                },\n                sx: {\n                  border: '1px solid yellow'\n                },\n                className: \"lastimg\",\n                children: selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1352,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1350,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6 col-sm-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.root,\n              onSubmit: handleSubmit,\n              children: [inputFields.map(inputField => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lastbdr\",\n                  onChange: event => handleChangeInput(inputField.id, event),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"ques\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-6 mt-3 \",\n                      controlId: \"exampleForm.ControlInput1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1364,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Answer in Part\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1365,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1363,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"lastrevhint\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Hint\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1369,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        readOnly: true,\n                        value: inputField.hint,\n                        name: \"hint\",\n                        type: \"text\",\n                        placeholder: \"Hint\",\n                        onChange: event => handleChangeInput(inputField.id, event)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1370,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1368,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ltmk\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Marks\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1374,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          readOnly: true,\n                          value: inputField.marks,\n                          type: \"text\",\n                          name: \"marks\",\n                          placeholder: \"Marks\",\n                          onChange: event => handleChangeInput(inputField.id, event)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1375,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1373,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1372,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ltty\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1379,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                          readOnly: true,\n                          type: \"text\",\n                          name: \"type\",\n                          value: inputField.type,\n                          onChange: event => handleChangeInput(inputField.id, event)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1389,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1380,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1378,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1367,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [showhide === 'media' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"G-Panel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1428,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1429,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                          class: \"responsive-iframe\",\n                          img: true,\n                          src: test,\n                          width: \"100%\",\n                          height: \"200\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1430,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1427,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1426,\n                      columnNumber: 57\n                    }, this), showhide === 'mcq' && /*#__PURE__*/_jsxDEV(\"form\", {\n                      className: mcqs.root,\n                      onSubmit: handlemctypesSubmit,\n                      children: mcqtypeFields.map(mcqtypeField => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"crthint\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-lg-2 col-sm-6 col-12 mt-3 \",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Hint\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1442,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              value: mcqtypeField.hint,\n                              name: \"hint\",\n                              type: \"text\",\n                              onChange: event => handleMctypesChangeInput(mcqtypeField.id, event)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1443,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1441,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \" type  col-lg-2 col-sm-6 col-12  \",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Type\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1448,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\",\n                              children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                                className: \"custom-select\",\n                                readOnly: \"true\",\n                                value: mcqtypeField.type,\n                                name: \"type\",\n                                type: \"text\",\n                                onChange: event => handleMctypesChangeInput(mcqtypeField.id, event),\n                                \"aria-label\": \"Default select example\",\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"select\",\n                                  children: \"Select\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1457,\n                                  columnNumber: 81\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"mcq\",\n                                  children: \"MCQ\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1459,\n                                  columnNumber: 81\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1452,\n                                columnNumber: 77\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1449,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1447,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"marks  col-lg-2 col-sm-6 col-12\",\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              controlId: \"exampleForm.ControlInput1\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Marks\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1473,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                value: mcqtypeField.marks,\n                                type: \"number\",\n                                name: \"marks\",\n                                placeholder: \"Marks\",\n                                onChange: event => handleMctypesChangeInput(mcqtypeField.id, event)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1475,\n                                columnNumber: 77\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1472,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1471,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1440,\n                          columnNumber: 68\n                        }, this)\n                      }, mcqtypeField.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1439,\n                        columnNumber: 68\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1437,\n                      columnNumber: 57\n                    }, this), showhide === 'mcq' && /*#__PURE__*/_jsxDEV(\"form\", {\n                      className: mcqs.root,\n                      onSubmit: mcqSubmit,\n                      children: mcqFields.map(mcqField => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mcqbox\",\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3 \",\n                            controlId: \"exampleForm.ControlInput1\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Option\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1502,\n                              columnNumber: 25\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"text\",\n                              name: \"optiona\",\n                              value: mcqField.optiona,\n                              onChange: event => handleMCQChangeInput(mcqField.id, event),\n                              placeholder: \"Answer\",\n                              as: \"textarea\",\n                              rows: 5\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1503,\n                              columnNumber: 25\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1501,\n                            columnNumber: 21\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1498,\n                          columnNumber: 17\n                        }, this)\n                      }, mcqField.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1496,\n                        columnNumber: 13\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1493,\n                      columnNumber: 5\n                    }, this), showhide === 'formula' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-lg-5 col-sm-6 col-12 \",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mb-3 \",\n                        controlId: \"exampleForm.ControlInput1\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Formula\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1551,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form, {\n                          className: \"custom-select\",\n                          value: inputFields.formula,\n                          onChange: e => {\n                            const selectedFood = e.target.value;\n                            setFoodState(selectedFood);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1552,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"text\",\n                          text: text,\n                          name: \"Answer\",\n                          value: formula,\n                          onChange: e => setFormula(e.target.value),\n                          placeholder: \"Formula\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1560,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1561,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"buttons-flex\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"+\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1565,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\u2212\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1566,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xD7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1567,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xF7\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1568,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"=\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1569,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\u2260\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1570,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"\\xB1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1571,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"%\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1572,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \"<\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1573,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            class: \"btn btn-light\",\n                            size: \"small\",\n                            children: \">\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1574,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1563,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1550,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1549,\n                      columnNumber: 57\n                    }, this), showhide != 'media' && showhide != 'formula' && showhide != 'mcq' && /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-3 \",\n                      controlId: \"exampleForm.ControlInput1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Answer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1588,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(Form, {\n                        className: \"custom-select\",\n                        value: foodState,\n                        onChange: e => {\n                          const selectedFood = e.target.value;\n                          setFoodState(selectedFood);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1589,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        name: \"answer\",\n                        value: inputField.answer,\n                        onChange: event => handleChangeInput(inputField.id, event),\n                        placeholder: \"Answer\",\n                        as: \"textarea\",\n                        rows: 5\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1597,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1587,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1398,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1362,\n                  columnNumber: 41\n                }, this)\n              }, inputField.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1360,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"containedbtn\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btnnxtsave\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    class: \"btn btn-info\",\n                    onClick: () => addNewEvaluation(),\n                    variant: \"contained\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1623,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1622,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plus\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    class: \"btn btn-secondary\",\n                    onClick: () => setTab(1),\n                    variant: \"contained\",\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1626,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1625,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Finish\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    class: \"btn btn-success\",\n                    onClick: () => navigate(\"/dashboard/evaluation\"),\n                    variant: \"contained\",\n                    children: \"Finish\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1629,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1628,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1621,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1358,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1357,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1308,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"Kf63Y63IS9GB/3yVZrwNkrfOPlc=\", false, function () {\n  return [useParams, useNavigate, useStyles, useStyles, useStyles, useParams];\n});\n\n_c2 = User;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"User\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/Addeval.js"],"names":["dynamic","InputGroup","FormControl","Table","Form","Row","Col","createCourse","editCourse","getCourseById","createEvaluation","createQuestion","createAnswer","getAllTopics","getTopicByFilter","getAllBoard","getAllSubjects","getAllCourse","getAllSubBoard","getAllClasses","test","CircularProgress","Container","Addmoreinput","Dynfield","RemoveIcon","AddIcon","Icon","getEvaluationID","Radio","RadioGroup","FormLabel","v4","uuidv4","CardMedia","SaveIcon","serviceWorker","Button","TextField","FormControlLabel","Modal","BootstrapModal","Grid","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","getUserById","changeStatus","deleteUser","imageBaseUrl","materialTableIcons","MaterialTable","getAllUserCourses","Tabs","Tab","Typography","Box","Card","CardContent","TableBody","TableCell","TableContainer","TableHead","useParams","makeStyles","useStyles","theme","root","margin","spacing","button","className","boardName","subBoardName","subjectName","TabPanel","props","children","value","index","other","p","a11yProps","id","User","courseID","courseStatus","mode","setMode","courses","setCourses","boardData","setBoardData","classesData","setClassesData","coursesData","setCoursesData","subjectData","setSubjectData","topicData","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","name","setName","description1","setDescription1","board","setBoard","board2","setBoard2","classes1","setClasses1","subject","setSubject","subject2","setSubject2","text","setText","addToText","val","topic","setTopic","chooseTopic","setChooseTopic","newTopic","setNewTopic","subBoardsData","setSubBoardsData","console","log","selectedSubBoard","setSelectedSubBoard","coursePicture","setCoursePicture","course","setCourse","picturePreview","setPicturePreview","chooseCoursePictureRef","chooseTopicRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","page","setPage","limit","setLimit","classState","setClassState","boardState","setBoardState","subBoardState","setSubBoardState","subjectState","setSubjectState","courseState","setCourseState","foodState","setFoodState","formula","setFormula","question","setQuestion","typestate","setTypeState","type","setType","boardIcon","setBoardIcon","media","setMedia","evalid","setEvalid","hint","setHint","setID","marks","setMarks","answer","setAnswer","showhide","setShowhide","selectedFile","setSelectedFile","preview","setPreview","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","e","target","files","length","handleshowhide","event","getuser","courseImage","setCourseImage","response","status","results","data","then","res","subBoardID","_id","topicIDs","catch","err","current","chooseTopicHandler","mctypes","classes","mcqs","inputFields","setInputFields","mcqFields","setMcqFields","optiona","mcqtypeFields","setMcqTypeFields","handlemctypesSubmit","preventDefault","handleMctypesChangeInput","newmctypesFields","map","i","editCourseDetails","description","addevaluation","createevaluation","setTab","addNewEvaluation","alert","handleNext","setActiveStep","prevActiveStep","Questiontableid","ABC","reSetForm","setClasses","actionForChooseTopic","newDAta","all","push","deleteTopic","updatedTopic","splice","userId","tableIcons","months","userDetailsById","setUserDetailsById","userProfileImg","setUserProfileImg","userCourses","setUserCourses","actionLodaer","setActionLoader","filterModal","setFilterModal","filterLoader","setFilterLoader","completedCouresNum","setCompletedCouresNum","noUserFound","setNoUserFound","tableDataLoading","setTableDataLoading","tab","userPayments","setUserPayments","totalPaymentAmount","setTotalPaymentAmount","handleChange","newValue","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","user","profilePic","profileImage","getEarningsByUserId","sum","item","parseInt","amount","changeUserStatus","changeCourseStatus","rowData","boardID","classesID","subjectID","updatedRows","deleteUserProfile","filter","progress","classSeparator","split","courseSeparator","courseName","boardSeparator","typeseperator","typename","subBoardSeparator","subBoardId","subjectSeparator","handleSubmit","mcqSubmit","handleChangeInput","newInputFields","handleMCQChangeInput","newMcqInputFields","handleAddFields","handlemcqAddFields","handlemcqRemoveFields","values","findIndex","handleRemoveFields","width","height","backgroundColor","marginLeft","border","inputField","mcqtypeField","mcqField","marginTop","selectedFood"],"mappings":"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","sourcesContent":["import { dynamic, InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap'\r\nimport { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses'\r\nimport { createEvaluation } from '../../api/Evaluation/Evaluation'\r\nimport { createQuestion } from '../../api/Question/Question'\r\n\r\nimport { createAnswer } from '../../api/Answer/Answer'\r\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\r\nimport { getAllBoard } from '../../api/Boards/Boards'\r\nimport { getAllSubjects } from '../../api/Subject/Subject'\r\nimport { getAllCourse } from '../../api/Courses/Courses'\r\nimport { getAllSubBoard } from 'src/api/SubBoard/SubBoard'\r\nimport { getAllClasses } from '../../api/Classes/Classes'\r\nimport test from './image/geogebra-export.png';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport \"./app.css\"\r\nimport Container from '@material-ui/core/Container';\r\nimport Addmoreinput from './dynamic';\r\nimport Dynfield from './dynfield';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { getEvaluationID } from '../../api/Evaluation/Evaluation';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n// import App from './test'\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\nimport { Button, TextField, FormControlLabel, } from '@mui/material'\r\n\r\nimport { Modal as BootstrapModal } from 'react-bootstrap'\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from '@mui/material/Modal';\r\n// import Box from '@mui/material/Box';\r\n\r\n\r\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\r\n// import { Modal,  InputGroup, FormControl, Nav, Row, Col, Sonnet } from 'react-bootstrap'\r\nimport ModalHeader from 'react-bootstrap/ModalHeader'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\r\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\n\r\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\r\nimport { getUserById, changeStatus, deleteUser } from \"../../api/Users/Users\"\r\nimport { imageBaseUrl } from '../../config';\r\n// import Tabs from 'react-bootstrap/Tabs'\r\nimport { materialTableIcons } from '../../config';\r\nimport MaterialTable from 'material-table'\r\nimport { getAllUserCourses } from '../../api/Courses/Courses'\r\n// import { CategoryScale, PointElement, LinearScale, BarElement, Title, Tooltip, Legend, Chart } from 'chart.js';\r\n// import { Bar } from 'react-chartjs-2';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n// import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\n// import { Button } from '@mui/material';\r\n\r\n// import Grid from '@mui/material/Grid';\r\n// import CircularProgress from '@mui/material/CircularProgress';\r\n// import Modal from '@mui/material/Modal';\r\n// import UserCoursesRow  from './UserCoursesRow'\r\nimport { useParams } from 'react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\n// import UserSubscriptionRow from './UserSubscriptionRow'\r\n// import { getEarningsByUserId } from 'src/api/Earnings/Earnings'\r\n// import UserPaymentRow from './UserPaymentRow'\r\n\r\nvar className = '';\r\nvar boardName = '';\r\nvar subBoardName = '';\r\nvar subjectName = '';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nexport default function User(props) {\r\n    // const courseID = props.match.params.courseId;\r\n    // const courseStatus = props.match.params.courseStatus;\r\n    const { courseID, courseStatus } = useParams()\r\n    // console.log(props)\r\n    // const subjectStatus = props.match.params.subjectStatus;\r\n    const [mode, setMode] = useState(courseID ? \"edit\" : \"add\")\r\n\r\n    //setting subjects data into a variable\r\n    const [courses, setCourses] = useState({});\r\n\r\n    //setting course data into a variable\r\n    const [boardData, setBoardData] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const [classesData, setClassesData] = useState([]);\r\n    const [coursesData, setCoursesData] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const [subjectData, setSubjectData] = useState([]);\r\n\r\n    //setting course data into a variable\r\n    const topicData = useRef([]);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    //sets and display the line in the success mo\r\n    const [modalLine1, setModalLine1] = useState('');\r\n    const [modalLine2, setModalLine2] = useState('')\r\n\r\n\r\n    //sets the loader for add course button\r\n    const [addLoader, setAddLoader] = useState(false)\r\n\r\n    //sets the loader for edit subject button\r\n    const [editLoader, setEditLoader] = useState(false)\r\n\r\n    //sets the loader for edit subject button\r\n    const [editFormLoader, setEditFormLoader] = useState(false)\r\n\r\n    //sets the name of the course name user want to add\r\n    const [name, setName] = useState();\r\n\r\n    //sets topic description user want to add\r\n    const [description1, setDescription1] = useState()\r\n\r\n    //sets board user want to add\r\n    const [board, setBoard] = useState();\r\n\r\n    const [board2, setBoard2] = useState();\r\n\r\n\r\n\r\n    //sets classes user want to add\r\n    // const [classes, setClasses] = useState()\r\n    const [classes1, setClasses1] = useState()\r\n\r\n    //sets subject user want to add\r\n    const [subject, setSubject] = useState()\r\n    const [subject2, setSubject2] = useState()\r\n    const [text, setText] = useState(\"\");\r\n    const addToText = (val) => {\r\n        setText((text) => [...text, val + \" \"]);\r\n    };\r\n\r\n    //sets topic  user want to add\r\n    const [topic, setTopic] = useState([])\r\n    const [chooseTopic, setChooseTopic] = useState([])\r\n    const [newTopic, setNewTopic] = useState(1)\r\n    // console.log(chooseTopic)\r\n    const [subBoardsData, setSubBoardsData] = useState([])\r\n    console.log(subBoardsData)\r\n    const [selectedSubBoard, setSelectedSubBoard] = useState()\r\n    //sets course picture user want to add\r\n\r\n    const [coursePicture, setCoursePicture] = useState()\r\n    const [course, setCourse] = useState([]);\r\n    //sets course picture preview user want to add\r\n    const [picturePreview, setPicturePreview] = useState(null);\r\n\r\n    //referance variable for video file choose\r\n    let chooseCoursePictureRef = useRef()\r\n    let chooseTopicRef = useRef()\r\n\r\n    // sets varialbe for video status\r\n    const [videoStatus, setVideoStatus] = useState(false)\r\n\r\n    //shows the error when users try to add subject without name\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n    const [error, showError] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [limit, setLimit] = useState(100);\r\n    const [classState, setClassState] = useState('')\r\n    const [boardState, setBoardState] = useState('')\r\n    const [subBoardState, setSubBoardState] = useState('')\r\n    const [subjectState, setSubjectState] = useState('')\r\n    const [courseState, setCourseState] = useState('')\r\n    const [foodState, setFoodState] = useState();\r\n    const [formula, setFormula] = useState('');\r\n    const [question, setQuestion] = useState()\r\n    const [typestate, setTypeState] = useState();\r\n    const [type, setType] = useState();\r\n    const [boardIcon, setBoardIcon] = useState(\"\");\r\n\r\n    const [media, setMedia] = useState(\"\");\r\n    // const courseID ='';\r\n    // const [editFormLoader, setEditFormLoader] = useState(false)\r\n    // const [mode, setMode] = useState(courseID ? \"edit\" : \"add\");\r\n    const [evalid, setEvalid] = useState();\r\n    const [hint, setHint] = useState();\r\n    // const [createevaluation, setCreateevaluation] = useState()\r\n\r\n    const [id, setID] = useState();\r\n\r\n    const [marks, setMarks] = useState()\r\n    const [answer, setAnswer] = useState()\r\n    const [showhide, setShowhide] = useState('');\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n\r\n        // free memory when ever this component is unmounted\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n\r\n    const onSelectFile = e => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            // setMedia(e.target.files[0])\r\n            return\r\n        }\r\n\r\n        // I've kept this example simple by using the first image instead of multiple\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const handleshowhide = (event) => {\r\n\r\n        const getuser = event.target.value;\r\n\r\n        setType(event.target.value)\r\n        setShowhide(getuser);\r\n\r\n    }\r\n\r\n    const [courseImage, setCourseImage] = useState(null);\r\n    useEffect(async () => {\r\n        if (board) {\r\n            const response = await getAllSubBoard(board, 1, 1000)\r\n            if (response.status) {\r\n                setSubBoardsData(response.results.data);\r\n            }\r\n        }\r\n    }, [board])\r\n\r\n    useEffect(() => {\r\n        setMode(courseID ? \"edit\" : \"add\")\r\n        setEditFormLoader(true)\r\n        getCourseById(courseID).then((res) => {\r\n            console.log('res', res);\r\n            if (res.status) {\r\n                //setting the fetched Course by id into state variable\r\n                setCourse(res.course);\r\n                setName(res.course.name)\r\n                // setDescription(res.course.description)\r\n                //setBoard(res?.course?.board?._id)\r\n                setSelectedSubBoard(res?.course?.subBoardID?._id)\r\n                // setClasses(res.course.classesID._id)\r\n                // setSubject(res.course.subjectID._id)\r\n                setTopic(res.course.topicIDs)\r\n                setCoursePicture(res.course.coursePicture)\r\n            }\r\n            setEditFormLoader(false)\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n    }, [courseID])\r\n\r\n\r\n    useEffect(() => {\r\n        // fetching all boards\r\n        getAllBoard(page, limit).then((res) => {\r\n            console.log('Boards', res);\r\n            if (res.status) {\r\n                //setting the fetched board into state variable\r\n                setBoardData(res.results.data);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n        // fetching all topics\r\n        getAllTopics(page, limit).then((res) => {\r\n            console.log('Topics', res);\r\n            if (res.status) {\r\n                //setting the fetched topic into state variable\r\n                topicData.current = res.results.data;\r\n\r\n                chooseTopicHandler()\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n\r\n        // fetching all classes\r\n        getAllClasses(page, limit).then((res) => {\r\n            console.log('Classes', res);\r\n            if (res.status) {\r\n                //setting the fetched classes into state variable\r\n                setClassesData(res.results.data);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n        // fetching all courses \r\n        getAllCourse(page, limit).then((res) => {\r\n            console.log('course', res);\r\n            if (res.status) {\r\n                //setting the fetched classes into state variable\r\n                setCoursesData(res.results.data);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n\r\n\r\n        // fetching all subjects\r\n        getAllSubjects(page, limit).then((res) => {\r\n            console.log('Subjects', res);\r\n            if (res.status) {\r\n                //setting the fetched Subject into state variable\r\n                setSubjectData(res.results.data);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const mctypes = useStyles()\r\n    const classes = useStyles()\r\n    const mcqs = useStyles()\r\n    const [inputFields, setInputFields] = useState([\r\n        { id: uuidv4(), type: '', hint: '', answer: '', marks: '' },\r\n    ]);\r\n\r\n    // const [mcqFields, setMcqFields] = useState([\r\n    //     { id: uuidv4(), optiona: '', optionb: '', optionc: '', optiond: '' },\r\n    // ]);\r\n    const [mcqFields, setMcqFields] = useState([\r\n        { id: uuidv4(), optiona: '' },\r\n    ]);\r\n    const [mcqtypeFields, setMcqTypeFields] = useState([\r\n        { id: uuidv4(), hint: '', type: '', marks: '' },\r\n    ]);\r\n    const handlemctypesSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"mctypesfiled\", mctypes);\r\n    };\r\n    // setInputFields= useState(0);\r\n\r\n    const handleMctypesChangeInput = (id, event) => {\r\n        const newmctypesFields = mcqtypeFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setMcqTypeFields(newmctypesFields);\r\n    }\r\n\r\n    //edit the details  of the existing Course\r\n    function editCourseDetails() {\r\n        setModalVisible(false);\r\n        setEditLoader(true);\r\n        showError(false);\r\n        if (courseID != '') {\r\n\r\n            editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus, courseImage)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.status) {\r\n                        setEditLoader(false);\r\n                        setModalLine1('Subject details has been');\r\n                        setModalLine2('updated successfully')\r\n                        setModalVisible(true)\r\n                    }\r\n                    else {\r\n                        setEditLoader(false);\r\n                        showError(true);\r\n                        setErrorMessage('Error occured');\r\n                    }\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                    setEditLoader(false)\r\n                    showError(true);\r\n                    setErrorMessage('Error occured');\r\n                })\r\n        }\r\n        else {\r\n            setAddLoader(false)\r\n            showError(true);\r\n            setErrorMessage('Please fill all the Course details');\r\n        }\r\n\r\n    }\r\n\r\n    ////////\r\n    const addevaluation = async () => {\r\n        var createevaluation = await createEvaluation(boardName, className, subjectName, description1, name);\r\n        setTab(1)\r\n        setID(createevaluation);\r\n        console.log(\"This is from create evaluation\", createevaluation)\r\n    }\r\n\r\n\r\n    //adds new Course \r\n    const addNewEvaluation = async () => {\r\n\r\n\r\n\r\n        setQuestion(' ');\r\n        setHint(' ');\r\n        setMarks(' ');\r\n        setAnswer(' ');\r\n        // setMedia(' ');\r\n\r\n\r\n\r\n\r\n\r\n\r\n        alert(\"Question and answer submitted\")\r\n\r\n        const handleNext = () => {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        };\r\n\r\n\r\n\r\n\r\n        // className = '';\r\n        // boardName = '';\r\n        // subBoardName = '';\r\n        // subjectName = '';\r\n        // setModalVisible(false);\r\n        // setAddLoader(true);\r\n        // showError(false);\r\n        // console.log(boardName);\r\n        //  console.log( boardData);\r\n        var boardName = board2;\r\n        className = classes1;\r\n        subjectName = subject2;\r\n\r\n        // if (name && board && classes && subject && description && courseImage != '') {\r\n\r\n\r\n\r\n        var Questiontableid = await createQuestion(id, question, media);\r\n        console.log('This is question table id', Questiontableid)\r\n\r\n        var ABC = createAnswer(id, Questiontableid, inputFields, mcqFields, mcqtypeFields);\r\n\r\n        console.log('CA Check', ABC);\r\n\r\n\r\n\r\n\r\n\r\n        //             .then((res) => {\r\n        //                 console.log(res);\r\n        //                 if (res.status) {\r\n        //                     setAddLoader(false);\r\n        //                     setModalLine1('New Course Added');\r\n        //                     setModalLine2('Successfully')\r\n        //                     setModalVisible(true)\r\n        //                 }\r\n        //                 else {\r\n        //                     setAddLoader(false);\r\n        //                     showError(true);\r\n        //                     setErrorMessage('Error occured');\r\n        //                 }\r\n        //             })\r\n        //             .catch((err) => {\r\n        //                 console.log(err);\r\n        //                 setAddLoader(false)\r\n        //                 showError(true);\r\n        //                 setErrorMessage('Error occured');\r\n        //             })\r\n        //     }\r\n        //     else {\r\n        //         setAddLoader(false)\r\n        //         showError(true);\r\n        //         setErrorMessage('Please fill the Course details');\r\n        //     }\r\n        // }\r\n\r\n        // // on change Picture handler\r\n        // const onChangePictureHandler = (e) => {\r\n        //     var url = URL.createObjectURL(e.target.files[0]);\r\n        //     console.log(e.target.files[0])\r\n        //     setPicturePreview(url)\r\n        //     setCoursePicture(e.target.files[0])\r\n        // }\r\n    }\r\n\r\n\r\n    // function to reset \r\n    const reSetForm = () => {\r\n        setName(null)\r\n        setDescription1(null)\r\n        setBoard(null)\r\n        setClasses(null)\r\n        setSubject(null)\r\n        setTopic(null)\r\n        setSelectedSubBoard(null)\r\n        setCoursePicture(null)\r\n    }\r\n\r\n    // function for choose topic\r\n    const actionForChooseTopic = (e, index) => {\r\n        // setTopic(e.target.value)\r\n        let newDAta = e.target.value\r\n        let all = [...topic];\r\n        all[index] = newDAta\r\n        setTopic(all)\r\n        // console.log(all)\r\n    }\r\n\r\n    // function to add new topic\r\n    const chooseTopicHandler = () => {\r\n\r\n        let all = [...topic];\r\n        all.push(\"-1\")\r\n        setTopic(all)\r\n    }\r\n\r\n\r\n    //function to delete the selected topic from state array\r\n    function deleteTopic(index) {\r\n        //removing selected topic from state array \r\n        const updatedTopic = [...topic]\r\n        updatedTopic.splice(index, 1)\r\n        setTopic(updatedTopic);\r\n        // console.log(\"working\")\r\n\r\n    }\r\n    //setting the user id of the user coming from the url into a local variable\r\n    // const [userId, setUserId] = useState(props.match.params.id);\r\n    const { userId } = useParams()\r\n    const tableIcons = materialTableIcons\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    //constant for storing the details of the particular user\r\n    const [userDetailsById, setUserDetailsById] = useState([]);\r\n    const [userProfileImg, setUserProfileImg] = useState('')\r\n\r\n    //sets the all courses of user\r\n    const [userCourses, setUserCourses] = useState([])\r\n    // console.log('userCourses', userCourses)\r\n\r\n    //loader in the alert table on confirm button\r\n    const [actionLodaer, setActionLoader] = useState(false);\r\n\r\n    const [filterModal, setFilterModal] = useState(false);\r\n\r\n\r\n\r\n    //sets the loader of apply changes in filter modal\r\n    const [filterLoader, setFilterLoader] = useState(false);\r\n    const [completedCouresNum, setCompletedCouresNum] = useState(0);\r\n\r\n    //variable to configure whether the user of that particular id is available or not\r\n    const [noUserFound, setNoUserFound] = useState(false)\r\n    // example\r\n\r\n\r\n    //table data loading indicator\r\n    const [tableDataLoading, setTableDataLoading] = useState(false)\r\n    const [tab, setTab] = React.useState(0);\r\n    const [userPayments, setUserPayments] = useState([])\r\n    const [totalPaymentAmount, setTotalPaymentAmount] = useState(0)\r\n    const handleChange = (event, newValue) => {\r\n        setTab(newValue);\r\n        console.log(\"SetTab\", newValue)\r\n    };\r\n    //returns the created date of the record of the table\r\n    function renderDate(date) {\r\n        const newDate = new Date(date);\r\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\r\n        return returnDate;\r\n    }\r\n\r\n\r\n    //useEffect will assign the data of user according to the userId from the state on every change into the userId\r\n    useEffect(() => {\r\n\r\n        getUserById(userId)\r\n            .then((res) => {\r\n                // console.log('user Details', res);\r\n                // if (res.status) {\r\n                setNoUserFound(false);\r\n                setUserDetailsById(res.user);\r\n                const profilePic = res.user.profileImage ? (imageBaseUrl + res.user.profileImage) : ('');\r\n                setUserProfileImg(profilePic)\r\n                // }\r\n                // else {\r\n                //     setNoUserFound(true);\r\n                // }\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err);\r\n            })\r\n\r\n\r\n    }, [userId])\r\n\r\n    useEffect(async () => {\r\n\r\n        if (userId) {\r\n            const response = await getEarningsByUserId(userId)\r\n            if (response.status) {\r\n                setUserPayments(response.course)\r\n                // console.log(response, \" payment\")\r\n                let sum = 0;\r\n                response.course.map(item => {\r\n                    sum = sum + parseInt(item.amount)\r\n                })\r\n                setTotalPaymentAmount(sum)\r\n            }\r\n        }\r\n\r\n    }, [userId])\r\n\r\n    //function to change the status of the user to blocked!\r\n    function changeUserStatus(status) {\r\n        changeStatus(userDetailsById._id, status)\r\n            .then((res => {\r\n                // console.log('res', res);\r\n                if (res.status) {\r\n                    getUserById(userId)\r\n                        .then((res) => {\r\n                            // console.log(res);\r\n                            if (res.status) {\r\n                                setNoUserFound(false);\r\n                                setUserDetailsById(res.user);\r\n                                const profilePic = res.user.profileImage ? (imageBaseUrl + res.user.profileImage) : ('');\r\n                                setUserProfileImg(profilePic)\r\n                            }\r\n                            else {\r\n                                setNoUserFound(true);\r\n                            }\r\n                        })\r\n                        .catch((err) => {\r\n                            // console.log(err);\r\n                        })\r\n                }\r\n                else {\r\n                    alert(\"error occured\")\r\n                }\r\n            }))\r\n            .catch((err => {\r\n                // console.log('err', err);\r\n            }))\r\n    }\r\n\r\n    function changeCourseStatus(rowData, index, status) {\r\n        editCourse(rowData._id, rowData.name, rowData?.boardID?._id, rowData?.subBoardID?._id, rowData?.classesID?._id, rowData?.subjectID?._id, rowData?.description, status)\r\n            .then((res => {\r\n                // console.log('res',res);\r\n                if (res.status) {\r\n                    // const index = rowData.tableData.id;\r\n                    //updating Course status in state array\r\n                    const updatedRows = [...course];\r\n                    updatedRows[index].status = status;\r\n                    setCourse(updatedRows);\r\n\r\n                }\r\n                else {\r\n                    alert(\"error occured\")\r\n                }\r\n            }))\r\n            .catch((err => {\r\n                console.log('err', err);\r\n            }))\r\n    }\r\n    function deleteUserProfile() {\r\n        deleteUser(userDetailsById._id)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                if (res.status) {\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                // console.error(err)\r\n            })\r\n    }\r\n    // function addnewqtn() {\r\n    //     console.log('jacky')\r\n    //     $(\"#dynamic\").append(\"<input type='text' value={'jacky'}/>\");\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        // fetching all user courses\r\n        setTableDataLoading(true)\r\n        getAllUserCourses(userId).then((res) => {\r\n            // console.log('getAllUserCourses', res);\r\n            if (res.status) {\r\n                //setting the fetched getAllUserCourses into state variable\r\n                setUserCourses(res.courses);\r\n                setCompletedCouresNum(res.courses.filter(item => item.progress == 100).length)\r\n            }\r\n            setTableDataLoading(false)\r\n        })\r\n            .catch((err) => {\r\n                // console.error(err);\r\n            });\r\n    }, [userId])\r\n\r\n    // console.log(className)\r\n    const classSeparator = (e) => {\r\n        setClassState(e.target.value)\r\n        // const className = e.target.value.split('*')[0]\r\n        className = e.target.value.split('*')[1];\r\n        console.log('value', className);\r\n        setClasses1(className);\r\n        // setName(className + ' ' + boardName + ' ' + subjectName)\r\n    }\r\n    const courseSeparator = (e) => {\r\n        setCourseState(e.target.value)\r\n        // const qualification = e.target.value.split('*')[0]\r\n        // setCourses(courseName)\r\n        courseName = e.target.value.split('*')[1];\r\n        setName(className + ' ' + boardName + ' ' + subjectName + ' ' + courseName)\r\n    }\r\n    const boardSeparator = (e) => {\r\n        setBoardState(e.target.value)\r\n        // const board2 = e.target.value.split('*')[0]\r\n        boardName = e.target.value.split('*')[1];\r\n        console.log('value', boardName);\r\n        setBoard2(boardName);\r\n\r\n        console.log('board value', board2);\r\n\r\n\r\n        // setName(className + ' ' + boardName + ' ' + subjectName)\r\n    }\r\n\r\n    const typeseperator = (e) => {\r\n        typestate(e.target.value)\r\n        typename = e.target.value.split('*')[1];\r\n        console.log('value', typename);\r\n        setType(typename);\r\n        console.log('Type value', board);\r\n    }\r\n\r\n    const subBoardSeparator = (e) => {\r\n        setSubBoardState(e.target.value)\r\n        const subBoardId = e.target.value.split('*')[0]\r\n        setSelectedSubBoard(subBoardId);\r\n        subBoardName = e.target.value.split('*')[1];\r\n        setName(className + ' ' + boardName + ' ' + subBoardName)\r\n    }\r\n    const subjectSeparator = (e) => {\r\n        setSubjectState(e.target.value)\r\n        // const subjectId = e.target.value.split('*')[0]\r\n        subjectName = e.target.value.split('*')[1];\r\n        console.log('value', subjectName);\r\n        setSubject2(subjectName);\r\n\r\n        console.log('subject value', subject2);\r\n        setName(className + ' ' + boardName + ' ' + subBoardName + ' ' + subjectName)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n    };\r\n\r\n    const mcqSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"mcqsfield\", mcqFields);\r\n    };\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setInputFields(newInputFields);\r\n    }\r\n    const handleMCQChangeInput = (id, event) => {\r\n        const newMcqInputFields = mcqFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setMcqFields(newMcqInputFields);\r\n    }\r\n\r\n    const handleAddFields = () => {\r\n        setInputFields([...inputFields, { id: uuidv4(), type: '', hint: '', answer: '', marks: '' }])\r\n    }\r\n    const handlemcqAddFields = () => {\r\n        setMcqFields([...mcqFields, { id: uuidv4(), optiona: '' }])\r\n    }\r\n\r\n    const handlemcqRemoveFields = id => {\r\n        const values = [...mcqFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setMcqFields(values);\r\n    }\r\n    const handleRemoveFields = id => {\r\n        const values = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <TopNavbar /> */}\r\n            {/* <LeftNavbar > */}\r\n\r\n            <div className=\"container\" >\r\n                {/* <p className=\"mt-3 txt-5282F0\">Users {'>'} Details</p> */}\r\n                <h5 className=\"mt-3 txt-5282F0 fw-bold\">Evaluation Management</h5>\r\n\r\n\r\n                <hr className=\"mt-4\" />\r\n                <div className=\"d-flex align-items-center\">\r\n                    <div className=\"container pageHeaderCard\">\r\n                        <div className=\"row\">\r\n                            {/* {console.log(userDetailsById)} */}\r\n\r\n                            <div className=\"col-lg-8 col-12\">\r\n                                {/* <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"courses\" style={{ backgroundColor: 'yellow' }}> */}\r\n                                <Tabs value={tab} onChange={handleChange} aria-label=\"basic tabs example\" variant={\"scrollable\"}\r\n                                    scrollButtons={\"on\"}>\r\n                                    <Tab label=\"Evaluation details\" {...a11yProps(0)} />\r\n                                    <Tab label=\"Create\" {...a11yProps(1)} />\r\n                                    <Tab label=\"Review\" {...a11yProps(2)} />\r\n                                    {/* <Tab label=\"Publish\" {...a11yProps(3)} /> */}\r\n                                    {/* <div className='si'><Button>Save </Button></div> */}\r\n                                    {/* <Tab label=\"Payment\" {...a11yProps(2)} />\r\n                                        <Tab label=\"Subscription\" {...a11yProps(3)} /> */}\r\n                                    {/* <Tab label=\"Progress\" {...a11yProps(4)} /> */}\r\n                                </Tabs>\r\n\r\n                                <div >\r\n\r\n                                    <TabPanel value={tab} index={0}>\r\n                                        <div className='evaluationone'>\r\n                                            <div className='one'>\r\n                                                <div className=\"col-lg-6 col-sm-12 col-16\">\r\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                                        <Form.Label> Board</Form.Label>\r\n                                                        <Form.Select onChange={boardSeparator} value={boardState} aria-label=\"Default select example\"> {/*onChange={boardSeparator} value={boardState}*/}\r\n                                                            <option>Select </option>\r\n                                                            {boardData.map((item, index) => (\r\n                                                                <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\r\n                                                            ))}\r\n\r\n\r\n                                                        </Form.Select>\r\n                                                    </Form.Group>\r\n                                                    {subBoardsData.length ? (\r\n                                                        <Form.Group className=\"mb-3 col-4\" controlId=\"exampleForm.ControlInput1\">\r\n                                                            <Form.Label> Sub Board</Form.Label>\r\n                                                            <Form.Select value={subBoardState} onChange={subBoardSeparator} aria-label=\"Default select example\">\r\n                                                                <option> Select </option>\r\n                                                                {subBoardsData.map((item, index) => (\r\n                                                                    <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\r\n                                                                ))}\r\n                                                            </Form.Select>\r\n                                                        </Form.Group>\r\n                                                    ) : (null)}\r\n                                                </div>\r\n                                                <div className='qualification col-lg-6' >\r\n                                                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                        <Form.Label> Qualification</Form.Label>\r\n                                                        <Form.Select value={classState} onChange={classSeparator} aria-label=\"Default select example\">\r\n                                                            <option>Select </option>\r\n                                                            {classesData.map((item, index) => (\r\n                                                                <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\r\n                                                            ))}\r\n                                                        </Form.Select>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='two'>\r\n                                                <div className='selectsub col-lg-6'>\r\n\r\n                                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                        <Form.Label>Subject</Form.Label>\r\n                                                        <Form.Select value={subjectState} onChange={subjectSeparator} aria-label=\"Default select example\">\r\n                                                            <option>Select  </option>\r\n                                                            {subjectData.map((item, index) => (\r\n                                                                <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\r\n                                                            ))}\r\n                                                        </Form.Select>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                                <div className='coursename col-6'>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                        <Form.Label>Course Name</Form.Label>\r\n                                                        <Form.Select value={name} type=\"text\" onChange={(e) => setName(e.target.value)} aria-label=\"Default select example\">\r\n                                                            <option>Select  </option>\r\n                                                            {coursesData.map((item, index) => (\r\n                                                                <option key={index} value={`${item.name}`}>{item.name}</option>\r\n                                                            ))}\r\n                                                        </Form.Select>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='desc col-lg-8'>\r\n                                                <Form.Group className=\"mb-8 \" controlId=\"exampleForm.ControlTextarea1\">\r\n                                                    <Form.Label>Description</Form.Label>\r\n                                                    <Form.Control value={description1} placeholder=\"Total word count 400 only\" type=\"text\" onChange={(e) => setDescription1(e.target.value)} as=\"textarea\" rows={3} />\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"addevalnxtbtn\" >\r\n                                            <Button onClick={() => addevaluation()} className=\"btn btn-warning\" size='small' variant=\"contained\"   >Next</Button>\r\n                                        </div>\r\n\r\n                                    </TabPanel>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div>\r\n\r\n\r\n\r\n                <Col sm={12}>\r\n                    <TabPanel value={tab} index={1} id=\"create\">\r\n                        <div className=\"createques\">\r\n\r\n                            <div>\r\n                                <Form.Group className=\"mb-6 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                <Form.Label>Question</Form.Label>\r\n\r\n                                <Form.Control type=\"text\" style={{ width: \"320%\", height: \"85%\" }} value={question} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control>\r\n                                <Form.Control type=\"hidden\" value={id} onChange={(e) => setID(e.target.value)}   ></Form.Control>\r\n                            </div>\r\n                            <div class=\"vl\"></div>\r\n                            <div className='IV' >\r\n                                <h1 class=\"ig\">Media</h1>\r\n                                <Card style={{ backgroundColor: \"gray\", marginLeft: \"-23%\" }} sx={{ border: '1px solid yellow' }} className='addevalimght'>\r\n                                    <Form.Control type=\"file\" onChange={(e) => setMedia(e.target.files[0])} />\r\n                                    {selectedFile && <img src={preview} />}</Card>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\" col-lg-12 col-sm-6 col-12 mt-3\"   >\r\n                            <Container >\r\n\r\n                                <form className={classes.root} onSubmit={handleSubmit}>\r\n                                    {inputFields.map(inputField => (\r\n                                        <div key={inputField.id}>\r\n                                            <div className='anspt' onChange={event => handleChangeInput(inputField.id, event)} >\r\n                                                <div class=\"ques\">\r\n                                                    <Form.Label>Answer in Part</Form.Label>\r\n                                                </div>\r\n                                                <div className='crthint'>\r\n                                                    <div className=\"col-lg-3 col-sm-6 col-12 mt-3 \">\r\n                                                        <Form.Label>Hint</Form.Label>\r\n                                                        <Form.Control value={inputFields.hint} name=\"hint\" type=\"text\" onChange={event => handleChangeInput(inputField.id, event)}  ></Form.Control>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\" type  col-lg-3 col-sm-6 col-12  \">\r\n                                                        <Form.Label>Type</Form.Label>\r\n                                                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n\r\n\r\n                                                            <Form.Select className=\"custom-select\" value={inputFields.type} name='type' type='text' onChange={(e) => (handleshowhide(e))}\r\n                                                                aria-label=\"Default select example\">\r\n                                                                <option value=\"select\">Select</option>\r\n                                                                <option value=\"text\"> Text</option>\r\n                                                                <option value=\"media\">G-Panel</option>\r\n                                                                <option value=\"formula\">Formula</option>\r\n                                                                <option value=\"mcq\">MCQ</option>\r\n\r\n                                                                {/* <Form.Control type='text' name='type' value={inputFields.type} onChange={event => handleChangeInput(inputField.id, event)}   ></Form.Control> */}\r\n\r\n                                                            </Form.Select >\r\n                                                            {/* <Form.Control value={inputFields.type} name='type' type='text' onChange={event => handleChangeInput(inputField.id, event)}></Form.Control> */}\r\n\r\n                                                            {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\n                                             onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"marks  col-lg-3 col-sm-6 col-12\">\r\n                                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                            <Form.Label>Marks</Form.Label>\r\n\r\n                                                            <Form.Control value={inputFields.marks} type=\"number\" name='marks' placeholder='Marks' onChange={event => handleChangeInput(inputField.id, event)}></Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {\r\n                                                    showhide === 'media' && (\r\n                                                        <div >\r\n                                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>G-Panel</Form.Label>\r\n                                                                <br />\r\n                                                                <iframe class=\"responsive-iframe\" img src={test} width='100%' height=\"200\" > </iframe>\r\n                                                            </Form.Group>\r\n\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                                {\r\n                                                    showhide === 'mcq' && (\r\n                                                        <form className={mcqs.root} onSubmit={handlemctypesSubmit}>\r\n                                                            {mcqtypeFields.map(mcqtypeField => (\r\n                                                                   <div key={mcqtypeField.id}>\r\n                                                                   <div className='crthint'>\r\n                                                                    <div className=\"col-lg-2 col-sm-6 col-12 mt-3 \">\r\n                                                                        <Form.Label>Hint</Form.Label>\r\n                                                                        <Form.Control value={mcqtypeFields.hint} name=\"hint\" type=\"text\"  onChange={event => handleMctypesChangeInput(mcqtypeField.id, event)} ></Form.Control>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    \r\n                                                                    <div className=\" type  col-lg-2 col-sm-6 col-12  \">\r\n                                                                        <Form.Label>Type</Form.Label>\r\n                                                                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                                                                    \r\n                                                                    \r\n                                                                            \r\n                                                                    \r\n                                                                             <Form.Control type='text' name='type'     onChange={event => handleMCQChangeInput(mcqField.id, event)}   ></Form.Control> \r\n                                                                    \r\n                                                                          \r\n                                                                            {/* <Form.Control value={inputFields.type} name='type' type='text' onChange={event => handleChangeInput(inputField.id, event)}></Form.Control>  */}\r\n                                                                    \r\n                                                                             {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\n                                                                    onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>  */}\r\n                                                                        </Form.Group>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    <div className=\"marks  col-lg-2 col-sm-6 col-12\">\r\n                                                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Marks</Form.Label>\r\n                                                                    \r\n                                                                            <Form.Control value={mcqtypeFields.marks} type=\"number\" name='marks' placeholder='Marks'  onChange={event => handleMctypesChangeInput(mcqtypeField.id, event)} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    \r\n                                                                    </div>\r\n                                                                    </div>\r\n\r\n\r\n                                                                      ))}\r\n\r\n                                                        </form>\r\n                                                    )\r\n                                                }\r\n\r\n                                                {\r\n\r\n                                                    showhide === 'mcq' && (\r\n                                                        <form className={mcqs.root} onSubmit={mcqSubmit}>\r\n\r\n                                                            {mcqFields.map(mcqField => (\r\n                                                                <div key={mcqField.id}>\r\n\r\n                                                                    <div className='mcqbox' >\r\n\r\n\r\n                                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Option</Form.Label>\r\n                                                                            <Form.Control type=\"text\" name='optiona' value={mcqField.optiona}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                        </Form.Group>\r\n\r\n                                                                        {/* <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Answer B</Form.Label>\r\n                                                                            <Form.Control type=\"radio\" name='optionb' value={mcqField.optionb}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Answer C</Form.Label>\r\n                                                                            <Form.Control type=\"radio\" name='optionc' value={mcqField.optionc}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Answer D</Form.Label>\r\n                                                                            <Form.Control type=\"radio\" name='optiond' value={mcqField.optiond}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Answer E</Form.Label>\r\n                                                                            <Form.Control type=\"radio\" name='optione' value={mcqField.optiond}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Answer F</Form.Label>\r\n                                                                            <Form.Control type=\"radio\" name='optionf' value={mcqField.optiond}\r\n                                                                                onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                                         </Form.Group> */}\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            ))\r\n\r\n                                                            }\r\n                                                            <div className='mcqbtnsas' style={{ width: '80%', marginTop: '-4.9%', marginLeft: '3.7%' }}>\r\n                                                                <div className='btnadd'>\r\n                                                                    <Button className='btnai' size='small' onClick={handlemcqAddFields} color=\"success\" variant=\"contained\" ><AddIcon /></Button>\r\n                                                                </div>\r\n                                                                <div class='btnsub'>\r\n                                                                    <Button className=\"btnsi\" variant=\"contained\" onClick={handlemcqRemoveFields} color=\"error\" size=\"small\" ><RemoveIcon /></Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </form>\r\n\r\n                                                    )}\r\n                                                {\r\n                                                    showhide === 'formula' && (\r\n                                                        <div className=\"col-lg-5 col-sm-6 col-12 \">\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Formula</Form.Label>\r\n                                                                <Form className=\"custom-select\"\r\n                                                                    value={inputFields.formula}\r\n                                                                    onChange={(e) => {\r\n                                                                        const selectedFood = e.target.value;\r\n                                                                        setFoodState(selectedFood);\r\n                                                                    }}>\r\n\r\n                                                                </Form>\r\n                                                                <Form.Control type=\"text\" text={text} name='Answer' value={formula} onChange={(e) => setFormula(e.target.value)} placeholder='Formula' ></Form.Control>\r\n                                                                <br />\r\n\r\n                                                                <div class=\"buttons-flex\">\r\n\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#43;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#8722;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xd7;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xf7;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3d;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x2260;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xb1;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x25;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3c;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3e;</button>\r\n\r\n\r\n                                                                </div>\r\n\r\n\r\n\r\n                                                            </Form.Group>\r\n\r\n                                                        </div>\r\n                                                    )}\r\n\r\n\r\n\r\n\r\n\r\n                                                {/* <div className='btnadd'>\r\n                                <Button className='btnai' size='small' color=\"success\" variant=\"contained\" onClick={handleAddFields}><AddIcon /></Button>\r\n\r\n                            </div>\r\n                            <div class='btnsub'>\r\n                                <Button className=\"btnsi\" variant=\"contained\" color=\"error\" size=\"small\" onClick={handleRemoveFields}><RemoveIcon /></Button>\r\n                            </div> */}\r\n                                                {\r\n                                                    showhide != 'media' && showhide != 'formula' && showhide != 'mcq' && (\r\n                                                        <div className=\"ans col-lg-6 col-sm-6 col-12\" >\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Answer</Form.Label>\r\n                                                                <Form className=\"custom-select\"\r\n                                                                    value={foodState}\r\n                                                                    onChange={(e) => {\r\n                                                                        const selectedFood = e.target.value;\r\n                                                                        setFoodState(selectedFood);\r\n                                                                    }}>\r\n\r\n                                                                </Form>\r\n                                                                <Form.Control type=\"text\" name='answer' value={inputFields.answer} onChange={event => handleChangeInput(inputField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <div className='createplus'>\r\n                                                                <div className='btnadd'>\r\n                                                                    <Button className='btnai' size='small' onClick={handleAddFields} color=\"success\" variant=\"contained\" ><AddIcon /></Button>\r\n                                                                </div>\r\n                                                                <div class='btnsub'>\r\n                                                                    <Button className=\"btnsi\" variant=\"contained\" onClick={handleRemoveFields} color=\"error\" size=\"small\" ><RemoveIcon /></Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    )}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    ))}\r\n\r\n                                </form>\r\n                                <div className='btnnxtcreate '>\r\n\r\n                                    <Button className=\"btn btn-warning\" size='small' onClick={() => setTab(2)} variant=\"contained\">Next</Button>\r\n\r\n\r\n                                </div>\r\n                                {/* onClick={handleAddFields} onClick={handleRemoveFields}*/}\r\n\r\n                            </Container>\r\n                        </div>\r\n                    </TabPanel>\r\n                </Col>\r\n            </div>\r\n\r\n            <div>\r\n\r\n                {/* ................................This is review tab......................... */}\r\n                <Col sm={12}>\r\n                    <TabPanel value={tab} index={2}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    {/* <TableCell>S.No.</TableCell>                             */}\r\n                                    <TableCell >Course</TableCell>\r\n                                    <TableCell >board Name</TableCell>\r\n                                    <TableCell >Qualification</TableCell>\r\n                                    <TableCell >Subject Name</TableCell>\r\n                                    <TableCell >Description</TableCell>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n                                    {/* <TableCell>S.No.</TableCell>*/}\r\n                                    <TableCell >{name} </TableCell>\r\n                                    <TableCell >{board2}</TableCell>\r\n                                    <TableCell >{classes1}</TableCell>\r\n                                    <TableCell >{subject2}</TableCell>\r\n                                    <TableCell >{description1}</TableCell>\r\n\r\n\r\n                                    <br />\r\n\r\n\r\n\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        <div className=\"lastrev\">\r\n\r\n                            <div>\r\n                                <Form.Group className=\"mb-6 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                <Form.Label>Question</Form.Label>\r\n\r\n                                <Form.Control type=\"text\" style={{ width: \"570%\" }} readOnly={true} value={question} onChange={(e) => setQuestion(e.target.value)} as=\"textarea\" rows={5}   ></Form.Control>\r\n                            </div>\r\n\r\n                            <div class=\"vl\"></div>\r\n                            <div className='lastwmedia' >\r\n                                <Form.Label className='medialabel'>Media</Form.Label>\r\n                                <Card style={{ backgroundColor: \"gray\", marginLeft: \"-1350%\" }} sx={{ border: '1px solid yellow' }} className='lastimg'>\r\n                                    {/* <Form.Control type=\"file\" onChange={onSelectFile} onChange1={(e) => setMedia(e.target.value)} /> */}\r\n                                    {selectedFile && <img src={preview} />}</Card>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 col-sm-6 col-12\" >\r\n                            <form className={classes.root} onSubmit={handleSubmit}>\r\n                                {inputFields.map(inputField => (\r\n                                    <div key={inputField.id}>\r\n\r\n                                        <div className='lastbdr' onChange={event => handleChangeInput(inputField.id, event)}>\r\n                                            <div class=\"ques\">\r\n                                                <Form.Group className=\"mb-6 mt-3 \" controlId=\"exampleForm.ControlInput1\" ></Form.Group>\r\n                                                <Form.Label>Answer in Part</Form.Label>\r\n                                            </div>\r\n                                            <div className='lastrevhint'>\r\n                                                <div >\r\n                                                    <Form.Label>Hint</Form.Label>\r\n                                                    <Form.Control readOnly={true} value={inputField.hint} name=\"hint\" type=\"text\" placeholder='Hint' onChange={event => handleChangeInput(inputField.id, event)}  ></Form.Control>\r\n                                                </div>\r\n                                                <div className='ltmk' >\r\n                                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                        <Form.Label>Marks</Form.Label>\r\n                                                        <Form.Control readOnly={true} value={inputField.marks} type=\"text\" name='marks' placeholder='Marks' onChange={event => handleChangeInput(inputField.id, event)}></Form.Control>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                                <div className='ltty' >\r\n                                                    <Form.Label>Type</Form.Label>\r\n                                                    <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                                                    {/* <Form.Select className=\"custom-select\" value={inputFields.type} name='type' type='text' onChange={(e) => (handleshowhide(e))}\r\n                                                                aria-label=\"Default select example\">\r\n                                                                <option value=\"select\">Select</option>\r\n                                                                <option value=\"text\"> Text</option>\r\n                                                                <option value=\"media\">G-Panel</option>\r\n                                                                <option value=\"formula\">Formula</option>\r\n                                                                <option value=\"mcq\">MCQ</option> */}\r\n\r\n                                                                <Form.Control readOnly={true} type='text' name='type' value={inputField.type} onChange={event => handleChangeInput(inputField.id, event)}   ></Form.Control>\r\n\r\n                                                            {/* </Form.Select > */}\r\n                                                    </Form.Group>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div >\r\n                                                {/* {\r\n                                                    showhide === 'mcq' && (\r\n                                                        <div className=\"ans col-lg-6 col-sm-6 col-12\" >\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Option A</Form.Label>\r\n                                                                <Form.Control type=\"text\" value={answer}\r\n                                                                    onChange={(e) => setAnswer(e.target.value)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Option B</Form.Label>\r\n                                                                <Form.Control type=\"text\" value={answer}\r\n                                                                    onChange={(e) => setAnswer(e.target.value)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Option C</Form.Label>\r\n                                                                <Form.Control type=\"text\" value={answer}\r\n                                                                    onChange={(e) => setAnswer(e.target.value)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Option D</Form.Label>\r\n                                                                <Form.Control type=\"text\" value={answer}\r\n                                                                    onChange={(e) => setAnswer(e.target.value)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    )} */}\r\n                                                {\r\n                                                    showhide === 'media' && (\r\n                                                        <div >\r\n                                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>G-Panel</Form.Label>\r\n                                                                <br />\r\n                                                                <iframe class=\"responsive-iframe\" img src={test} width='100%' height=\"200\" > </iframe>\r\n                                                            </Form.Group>\r\n\r\n                                                        </div>\r\n                                                    )}\r\n                                                 {\r\n                                                    showhide === 'mcq' && (\r\n                                                        <form className={mcqs.root} onSubmit={handlemctypesSubmit}>\r\n                                                            {mcqtypeFields.map(mcqtypeField => (\r\n                                                                   <div key={mcqtypeField.id}>\r\n                                                                   <div className='crthint'>\r\n                                                                    <div className=\"col-lg-2 col-sm-6 col-12 mt-3 \">\r\n                                                                        <Form.Label>Hint</Form.Label>\r\n                                                                        <Form.Control value={mcqtypeField.hint} name=\"hint\" type=\"text\"  onChange={event => handleMctypesChangeInput(mcqtypeField.id, event)} ></Form.Control>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    \r\n                                                                    <div className=\" type  col-lg-2 col-sm-6 col-12  \">\r\n                                                                        <Form.Label>Type</Form.Label>\r\n                                                                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                                                                    \r\n                                                                    \r\n                                                                            <Form.Select className=\"custom-select\" readOnly='true' value={mcqtypeField.type} name='type' type='text'  onChange={event => handleMctypesChangeInput(mcqtypeField.id, event)}\r\n                                                                               aria-label=\"Default select example\">\r\n                                                                               {/* <option value=\"select\">Select</option>\r\n                                                                                <option value=\"text\"> Text</option>\r\n                                                                                <option value=\"media\">G-Panel</option>*/}\r\n                                                                                <option value=\"select\">Select</option>\r\n                                                                                {/* <option value=\"formula\">Formula</option>   */}\r\n                                                                                <option value=\"mcq\">MCQ</option> \r\n                                                                    \r\n                                                                             {/* <Form.Control type='text' name='type' value={mcqField.type} onChange={event => handleMCQChangeInput(mcqField.id, event)}   ></Form.Control>  */}\r\n                                                                    \r\n                                                                            </Form.Select > \r\n                                                                            {/* <Form.Control value={inputFields.type} name='type' type='text' onChange={event => handleChangeInput(inputField.id, event)}></Form.Control>  */}\r\n                                                                    \r\n                                                                             {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\n                                                                    onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>  */}\r\n                                                                        </Form.Group>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    <div className=\"marks  col-lg-2 col-sm-6 col-12\">\r\n                                                                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                                            <Form.Label>Marks</Form.Label>\r\n                                                                    \r\n                                                                            <Form.Control value={mcqtypeField.marks} type=\"number\" name='marks' placeholder='Marks'  onChange={event => handleMctypesChangeInput(mcqtypeField.id, event)} ></Form.Control>\r\n                                                                        </Form.Group>\r\n                                                                    </div>\r\n                                                                    \r\n                                                                    \r\n                                                                    </div>\r\n                                                                    </div>\r\n\r\n\r\n                                                                      ))}\r\n\r\n                                                        </form>\r\n\r\n                                                    )\r\n                                                }    \r\n                                                 {\r\n\r\nshowhide === 'mcq' && (\r\n    <form className={mcqs.root} onSubmit={mcqSubmit}>\r\n\r\n        {mcqFields.map(mcqField => (\r\n            <div key={mcqField.id}>\r\n\r\n                <div className='mcqbox' >\r\n\r\n\r\n                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Option</Form.Label>\r\n                        <Form.Control type=\"text\" name='optiona' value={mcqField.optiona}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    {/* <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Answer B</Form.Label>\r\n                        <Form.Control type=\"radio\" name='optionb' value={mcqField.optionb}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Answer C</Form.Label>\r\n                        <Form.Control type=\"radio\" name='optionc' value={mcqField.optionc}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Answer D</Form.Label>\r\n                        <Form.Control type=\"radio\" name='optiond' value={mcqField.optiond}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Answer E</Form.Label>\r\n                        <Form.Control type=\"radio\" name='optione' value={mcqField.optiond}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Answer F</Form.Label>\r\n                        <Form.Control type=\"radio\" name='optionf' value={mcqField.optiond}\r\n                            onChange={event => handleMCQChangeInput(mcqField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                     </Form.Group> */}\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        ))\r\n\r\n        }\r\n        \r\n    </form>\r\n\r\n)}   \r\n                                                    \r\n                                               \r\n                                                \r\n                                                {\r\n                                                    showhide === 'formula' && (\r\n                                                        <div className=\"col-lg-5 col-sm-6 col-12 \">\r\n                                                            <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                                <Form.Label>Formula</Form.Label>\r\n                                                                <Form className=\"custom-select\"\r\n                                                                    value={inputFields.formula}\r\n                                                                    onChange={(e) => {\r\n                                                                        const selectedFood = e.target.value;\r\n                                                                        setFoodState(selectedFood);\r\n                                                                    }}>\r\n\r\n                                                                </Form>\r\n                                                                <Form.Control type=\"text\" text={text} name='Answer' value={formula} onChange={(e) => setFormula(e.target.value)} placeholder='Formula' ></Form.Control>\r\n                                                                <br />\r\n\r\n                                                                <div class=\"buttons-flex\">\r\n\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#43;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#8722;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xd7;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xf7;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3d;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x2260;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#xb1;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x25;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3c;</button>\r\n                                                                    <button class=\"btn btn-light\" size=\"small\">&#x3e;</button>\r\n\r\n\r\n                                                                </div>\r\n\r\n\r\n\r\n                                                            </Form.Group>\r\n\r\n                                                        </div>\r\n                                                    )}\r\n                                                {\r\n                                                    showhide != 'media' && showhide != 'formula' && showhide != 'mcq' && (\r\n                                                        <Form.Group className=\"mb-3 \" controlId=\"exampleForm.ControlInput1\">\r\n                                                            <Form.Label>Answer</Form.Label>\r\n                                                            <Form className=\"custom-select\"\r\n                                                                value={foodState}\r\n                                                                onChange={(e) => {\r\n                                                                    const selectedFood = e.target.value;\r\n                                                                    setFoodState(selectedFood);\r\n                                                                }}>\r\n\r\n                                                            </Form>\r\n                                                            <Form.Control type=\"text\" name='answer' value={inputField.answer} onChange={event => handleChangeInput(inputField.id, event)} placeholder='Answer' as=\"textarea\" rows={5} ></Form.Control>\r\n                                                        </Form.Group>\r\n                                                    )}\r\n                                                {/* <div className='createplus'>\r\n                                                            <div className='btnadd'>\r\n                                                                <Button hidden=\"hidden\" className='btnai' size='small' onClick={handleAddFields} color=\"success\" variant=\"contained\" ><AddIcon /></Button>\r\n                                                            </div>\r\n                                                            <div class='btnsub'>\r\n                                                                <Button  hidden=\"hidden\" className=\"btnsi\" variant=\"contained\" onClick={handleRemoveFields} color=\"error\" size=\"small\" ><RemoveIcon /></Button>\r\n                                                            </div>\r\n                                                      </div> */}\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                ))}\r\n                                <div className='containedbtn'>\r\n                                    <div className='btnnxtsave'>\r\n                                        <Button class=\"btn btn-info\" onClick={() => addNewEvaluation()} variant=\"contained\">Save</Button>\r\n                                    </div>\r\n                                    <div className='plus'>\r\n                                        <Button class=\"btn btn-secondary\" onClick={() => setTab(1)} variant=\"contained\">Add</Button>\r\n                                    </div>\r\n                                    <div className='Finish'>\r\n                                        <Button class=\"btn btn-success\" onClick={() => navigate(\"/dashboard/evaluation\")} variant=\"contained\">Finish</Button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </TabPanel>\r\n                </Col>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}