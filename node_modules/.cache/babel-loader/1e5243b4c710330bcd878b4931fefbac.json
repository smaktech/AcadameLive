{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{noCase}from'change-case';import{useRef,useState}from'react';import{Link as RouterLink}from'react-router-dom';// @mui\nimport{Box,List,Badge,Button,Avatar,Tooltip,Divider,Typography,ListItemText,ListSubheader,ListItemAvatar,ListItemButton}from'@mui/material';// utils\nimport{fToNow}from'../../../utils/formatTime';// _mock_\nimport{_notifications}from'../../../_mock';// components\nimport Iconify from'../../../components/Iconify';import Scrollbar from'../../../components/Scrollbar';import MenuPopover from'../../../components/MenuPopover';import{IconButtonAnimate}from'../../../components/animate';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function NotificationsPopover(){var anchorRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(_notifications),_useState4=_slicedToArray(_useState3,2),notifications=_useState4[0],setNotifications=_useState4[1];var totalUnRead=notifications.filter(function(item){return item.isUnRead===true;}).length;var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleMarkAllAsRead=function handleMarkAllAsRead(){setNotifications(notifications.map(function(notification){return _objectSpread(_objectSpread({},notification),{},{isUnRead:false});}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButtonAnimate,{ref:anchorRef,size:\"large\",color:open?'primary':'default',onClick:handleOpen,children:/*#__PURE__*/_jsx(Badge,{badgeContent:totalUnRead,color:\"error\",children:/*#__PURE__*/_jsx(Iconify,{icon:\"eva:bell-fill\",width:20,height:20})})}),/*#__PURE__*/_jsxs(MenuPopover,{open:open,onClose:handleClose,anchorEl:anchorRef.current,sx:{width:360},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',py:2,px:2.5},children:[/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Notifications\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'text.secondary'},children:[\"You have \",totalUnRead,\" unread messages\"]})]}),totalUnRead>0&&/*#__PURE__*/_jsx(Tooltip,{title:\" Mark all as read\",children:/*#__PURE__*/_jsx(IconButtonAnimate,{color:\"primary\",onClick:handleMarkAllAsRead,children:/*#__PURE__*/_jsx(Iconify,{icon:\"eva:done-all-fill\",width:20,height:20})})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Scrollbar,{sx:{height:{xs:340,sm:'auto'}},children:[/*#__PURE__*/_jsx(List,{disablePadding:true,subheader:/*#__PURE__*/_jsx(ListSubheader,{disableSticky:true,sx:{py:1,px:2.5,typography:'overline'},children:\"New\"}),children:notifications.slice(0,2).map(function(notification){return/*#__PURE__*/_jsx(NotificationItem,{notification:notification},notification.id);})}),/*#__PURE__*/_jsx(List,{disablePadding:true,subheader:/*#__PURE__*/_jsx(ListSubheader,{disableSticky:true,sx:{py:1,px:2.5,typography:'overline'},children:\"Before that\"}),children:notifications.slice(2,5).map(function(notification){return/*#__PURE__*/_jsx(NotificationItem,{notification:notification},notification.id);})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Box,{sx:{p:1},children:/*#__PURE__*/_jsx(Button,{fullWidth:true,disableRipple:true,component:RouterLink,to:\"#\",children:\"View All\"})})]})]});}// ----------------------------------------------------------------------\nfunction NotificationItem(_ref){var notification=_ref.notification;var _renderContent=renderContent(notification),avatar=_renderContent.avatar,title=_renderContent.title;return/*#__PURE__*/_jsxs(ListItemButton,{to:\"#\",component:RouterLink,sx:_objectSpread({py:1.5,px:2.5,mt:'1px'},notification.isUnRead&&{bgcolor:'action.selected'}),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:'background.neutral'},children:avatar})}),/*#__PURE__*/_jsx(ListItemText,{primary:title,secondary:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{mt:0.5,display:'flex',alignItems:'center',color:'text.disabled'},children:[/*#__PURE__*/_jsx(Iconify,{icon:\"eva:clock-outline\",sx:{mr:0.5,width:16,height:16}}),fToNow(notification.createdAt)]})})]});}// ----------------------------------------------------------------------\nfunction renderContent(notification){var title=/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",children:[notification.title,/*#__PURE__*/_jsxs(Typography,{component:\"span\",variant:\"body2\",sx:{color:'text.secondary'},children:[\"\\xA0 \",noCase(notification.description)]})]});if(notification.type==='order_placed'){return{avatar:/*#__PURE__*/_jsx(\"img\",{alt:notification.title,src:\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"}),title:title};}if(notification.type==='order_shipped'){return{avatar:/*#__PURE__*/_jsx(\"img\",{alt:notification.title,src:\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"}),title:title};}if(notification.type==='mail'){return{avatar:/*#__PURE__*/_jsx(\"img\",{alt:notification.title,src:\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"}),title:title};}if(notification.type==='chat_message'){return{avatar:/*#__PURE__*/_jsx(\"img\",{alt:notification.title,src:\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"}),title:title};}return{avatar:notification.avatar?/*#__PURE__*/_jsx(\"img\",{alt:notification.title,src:notification.avatar}):null,title:title};}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/layouts/dashboard/header/NotificationsPopover.js"],"names":["noCase","useRef","useState","Link","RouterLink","Box","List","Badge","Button","Avatar","Tooltip","Divider","Typography","ListItemText","ListSubheader","ListItemAvatar","ListItemButton","fToNow","_notifications","Iconify","Scrollbar","MenuPopover","IconButtonAnimate","NotificationsPopover","anchorRef","open","setOpen","notifications","setNotifications","totalUnRead","filter","item","isUnRead","length","handleOpen","handleClose","handleMarkAllAsRead","map","notification","current","width","display","alignItems","py","px","flexGrow","color","height","xs","sm","typography","slice","id","p","NotificationItem","renderContent","avatar","title","mt","bgcolor","mr","createdAt","description","type"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  List,\n  Badge,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  Typography,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// _mock_\nimport { _notifications } from '../../../_mock';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nexport default function NotificationsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(_notifications);\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(\n      notifications.map((notification) => ({\n        ...notification,\n        isUnRead: false,\n      }))\n    );\n  };\n\n  return (\n    <>\n      <IconButtonAnimate ref={anchorRef} size=\"large\" color={open ? 'primary' : 'default'} onClick={handleOpen}>\n        <Badge badgeContent={totalUnRead} color=\"error\">\n          <Iconify icon=\"eva:bell-fill\" width={20} height={20} />\n        </Badge>\n      </IconButtonAnimate>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">Notifications</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              You have {totalUnRead} unread messages\n            </Typography>\n          </Box>\n\n          {totalUnRead > 0 && (\n            <Tooltip title=\" Mark all as read\">\n              <IconButtonAnimate color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Iconify icon=\"eva:done-all-fill\" width={20} height={20} />\n              </IconButtonAnimate>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                New\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(0, 2).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                Before that\n              </ListSubheader>\n            }\n          >\n            {notifications.slice(2, 5).map((notification) => (\n              <NotificationItem key={notification.id} notification={notification} />\n            ))}\n          </List>\n        </Scrollbar>\n\n        <Divider />\n\n        <Box sx={{ p: 1 }}>\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\n            View All\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nNotificationItem.propTypes = {\n  notification: PropTypes.shape({\n    createdAt: PropTypes.instanceOf(Date),\n    id: PropTypes.string,\n    isUnRead: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    avatar: PropTypes.any,\n  }),\n};\n\nfunction NotificationItem({ notification }) {\n  const { avatar, title } = renderContent(notification);\n\n  return (\n    <ListItemButton\n      to=\"#\"\n      component={RouterLink}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        mt: '1px',\n        ...(notification.isUnRead && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: 'text.disabled',\n            }}\n          >\n            <Iconify icon=\"eva:clock-outline\" sx={{ mr: 0.5, width: 16, height: 16 }} />\n            {fToNow(notification.createdAt)}\n          </Typography>\n        }\n      />\n    </ListItemButton>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction renderContent(notification) {\n  const title = (\n    <Typography variant=\"subtitle2\">\n      {notification.title}\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\n        &nbsp; {noCase(notification.description)}\n      </Typography>\n    </Typography>\n  );\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'mail') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: (\n        <img\n          alt={notification.title}\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"\n        />\n      ),\n      title,\n    };\n  }\n  return {\n    avatar: notification.avatar ? <img alt={notification.title} src={notification.avatar} /> : null,\n    title,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}