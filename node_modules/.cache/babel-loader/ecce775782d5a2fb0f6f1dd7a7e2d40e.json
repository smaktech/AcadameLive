{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\animate\\\\TextAnimate.js\";\nimport PropTypes from 'prop-types';\nimport { m } from 'framer-motion'; // @mui\n\nimport { Box } from '@mui/material'; //\n\nimport { varFade } from './variants'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTextAnimate.propTypes = {\n  text: PropTypes.string.isRequired,\n  variants: PropTypes.object,\n  sx: PropTypes.object\n};\nexport default function TextAnimate(_ref) {\n  let {\n    text,\n    variants,\n    sx,\n    ...other\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: m.h1,\n    sx: {\n      typography: 'h1',\n      overflow: 'hidden',\n      display: 'inline-flex',\n      ...sx\n    },\n    ...other,\n    children: text.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(m.span, {\n      variants: variants || varFade().inUp,\n      children: letter\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = TextAnimate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextAnimate\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/animate/TextAnimate.js"],"names":["PropTypes","m","Box","varFade","TextAnimate","propTypes","text","string","isRequired","variants","object","sx","other","h1","typography","overflow","display","split","map","letter","index","inUp"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,CAAT,QAAkB,eAAlB,C,CACA;;AACA,SAASC,GAAT,QAAoB,eAApB,C,CACA;;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACtBC,EAAAA,IAAI,EAAEN,SAAS,CAACO,MAAV,CAAiBC,UADD;AAEtBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,MAFE;AAGtBC,EAAAA,EAAE,EAAEX,SAAS,CAACU;AAHQ,CAAxB;AAMA,eAAe,SAASN,WAAT,OAAuD;AAAA,MAAlC;AAAEE,IAAAA,IAAF;AAAQG,IAAAA,QAAR;AAAkBE,IAAAA,EAAlB;AAAsB,OAAGC;AAAzB,GAAkC;AACpE,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAEX,CAAC,CAACY,EADf;AAEE,IAAA,EAAE,EAAE;AACFC,MAAAA,UAAU,EAAE,IADV;AAEFC,MAAAA,QAAQ,EAAE,QAFR;AAGFC,MAAAA,OAAO,EAAE,aAHP;AAIF,SAAGL;AAJD,KAFN;AAAA,OAQMC,KARN;AAAA,cAUGN,IAAI,CAACW,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBAClB,QAAC,CAAD,CAAG,IAAH;AAAoB,MAAA,QAAQ,EAAEX,QAAQ,IAAIN,OAAO,GAAGkB,IAApD;AAAA,gBACGF;AADH,OAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,YADD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;KAnBuBhB,W","sourcesContent":["import PropTypes from 'prop-types';\nimport { m } from 'framer-motion';\n// @mui\nimport { Box } from '@mui/material';\n//\nimport { varFade } from './variants';\n\n// ----------------------------------------------------------------------\n\nTextAnimate.propTypes = {\n  text: PropTypes.string.isRequired,\n  variants: PropTypes.object,\n  sx: PropTypes.object\n};\n\nexport default function TextAnimate({ text, variants, sx, ...other }) {\n  return (\n    <Box\n      component={m.h1}\n      sx={{\n        typography: 'h1',\n        overflow: 'hidden',\n        display: 'inline-flex',\n        ...sx\n      }}\n      {...other}\n    >\n      {text.split('').map((letter, index) => (\n        <m.span key={index} variants={variants || varFade().inUp}>\n          {letter}\n        </m.span>\n      ))}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}