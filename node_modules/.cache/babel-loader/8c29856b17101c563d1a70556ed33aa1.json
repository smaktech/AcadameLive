{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\e-commerce\\\\product-details\\\\ProductDetailsReviewForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { useSnackbar } from 'notistack'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Button, Rating, TextField, Typography, FormHelperText, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: theme.spacing(3),\n    padding: theme.spacing(3),\n    borderRadius: Number(theme.shape.borderRadius) * 2,\n    backgroundColor: theme.palette.background.neutral\n  };\n}); // ----------------------------------------------------------------------\n\nProductDetailsReviewForm.propTypes = {\n  onClose: PropTypes.func\n};\nexport default function ProductDetailsReviewForm(_ref2) {\n  _s();\n\n  let {\n    onClose,\n    ...other\n  } = _ref2;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const ReviewSchema = Yup.object().shape({\n    rating: Yup.mixed().required('Rating is required'),\n    review: Yup.string().required('Review is required'),\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      rating: null,\n      review: '',\n      name: '',\n      email: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: async (values, _ref3) => {\n      let {\n        resetForm,\n        setSubmitting\n      } = _ref3;\n      await new Promise(resolve => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n      onClose();\n      resetForm();\n      setSubmitting(false);\n      enqueueSnackbar('Verify success', {\n        variant: 'success'\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    resetForm,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n\n  const onCancel = () => {\n    onClose();\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, { ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            alignItems: {\n              sm: 'center'\n            },\n            spacing: 1.5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Your review about this product:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Rating, { ...getFieldProps('rating'),\n              onChange: event => setFieldValue('rating', Number(event.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), errors.rating && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: touched.rating && errors.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            minRows: 3,\n            maxRows: 5,\n            label: \"Review *\",\n            ...getFieldProps('review'),\n            error: Boolean(touched.review && errors.review),\n            helperText: touched.review && errors.review\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name *\",\n            ...getFieldProps('name'),\n            error: Boolean(touched.name && errors.name),\n            helperText: touched.name && errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Email *\",\n            ...getFieldProps('email'),\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"inherit\",\n              variant: \"outlined\",\n              onClick: onCancel,\n              sx: {\n                mr: 1.5\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n              type: \"submit\",\n              variant: \"contained\",\n              loading: isSubmitting,\n              children: \"Post review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetailsReviewForm, \"BjjR/Kr9DAe96J/lcJGFgDHC8O4=\", false, function () {\n  return [useSnackbar, useFormik];\n});\n\n_c = ProductDetailsReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailsReviewForm\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/e-commerce/product-details/ProductDetailsReviewForm.js"],"names":["Yup","PropTypes","useFormik","Form","FormikProvider","useSnackbar","styled","Button","Rating","TextField","Typography","FormHelperText","Stack","LoadingButton","RootStyle","theme","margin","spacing","padding","borderRadius","Number","shape","backgroundColor","palette","background","neutral","ProductDetailsReviewForm","propTypes","onClose","func","other","enqueueSnackbar","ReviewSchema","object","rating","mixed","required","review","string","name","email","formik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","Promise","resolve","setTimeout","alert","JSON","stringify","variant","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","onCancel","xs","sm","event","target","value","Boolean","mr"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { useSnackbar } from 'notistack';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Button, Rating, TextField, Typography, FormHelperText, Stack } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  margin: theme.spacing(3),\n  padding: theme.spacing(3),\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  backgroundColor: theme.palette.background.neutral,\n}));\n\n// ----------------------------------------------------------------------\n\nProductDetailsReviewForm.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default function ProductDetailsReviewForm({ onClose, ...other }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ReviewSchema = Yup.object().shape({\n    rating: Yup.mixed().required('Rating is required'),\n    review: Yup.string().required('Review is required'),\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      rating: null,\n      review: '',\n      name: '',\n      email: '',\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: async (values, { resetForm, setSubmitting }) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n      onClose();\n      resetForm();\n      setSubmitting(false);\n      enqueueSnackbar('Verify success', { variant: 'success' });\n    },\n  });\n\n  const { errors, touched, resetForm, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const onCancel = () => {\n    onClose();\n    resetForm();\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Add Review\n      </Typography>\n\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            <Stack direction={{ xs: 'column', sm: 'row' }} alignItems={{ sm: 'center' }} spacing={1.5}>\n              <Typography variant=\"body2\">Your review about this product:</Typography>\n              <Rating\n                {...getFieldProps('rating')}\n                onChange={(event) => setFieldValue('rating', Number(event.target.value))}\n              />\n            </Stack>\n            {errors.rating && <FormHelperText error>{touched.rating && errors.rating}</FormHelperText>}\n\n            <TextField\n              fullWidth\n              multiline\n              minRows={3}\n              maxRows={5}\n              label=\"Review *\"\n              {...getFieldProps('review')}\n              error={Boolean(touched.review && errors.review)}\n              helperText={touched.review && errors.review}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Name *\"\n              {...getFieldProps('name')}\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Email *\"\n              {...getFieldProps('email')}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n            />\n\n            <Stack direction=\"row\" justifyContent=\"flex-end\">\n              <Button type=\"button\" color=\"inherit\" variant=\"outlined\" onClick={onCancel} sx={{ mr: 1.5 }}>\n                Cancel\n              </Button>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                Post review\n              </LoadingButton>\n            </Stack>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}