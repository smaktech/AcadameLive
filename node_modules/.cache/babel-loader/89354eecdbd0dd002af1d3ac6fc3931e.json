{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\users\\\\Users.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { fetchUser, changeStatus, deleteUser, getUserByFilter } from \"../../api/Users/Users\";\nimport { dataLimit, imageBaseUrl } from '../../config';\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { TableFooter, TableRow } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button } from '@mui/material';\nimport SingleUserRow from './SingleUserRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Users(props) {\n  _s();\n\n  const tableIcons = materialTableIcons; //setting user data into a variable\n\n  const [users, setUser] = useState([]);\n  const [noUsers, setNoUsers] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id of the user who is blocked or deleted\n\n  const [actionUserId, setUserId] = useState();\n  console.log(actionUserId); //unblock or block vairbale \n\n  const [userStatus, setUserStatus] = useState(true); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false);\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false);\n  const navigate = useNavigate(); //useEffect for calling the function for filter onchange of search or filter data continue button\n\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      getUserByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus).then(res => {\n        console.log(\"response\", res);\n\n        if (res.status) {\n          setUser(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setUser([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false);\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoUsers(false);\n    fetchUser(rowLimit, page).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched user into state variable\n        setUser(res.results.data);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //setting no user found variable true \n        setNoUsers(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [rowLimit, page]);\n\n  function openDeleteAlertModal(id, index) {\n    setUserId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the user?');\n    setInfo('All the details of the user will be removed from the Platform');\n    setModalAlertTitle(true);\n  }\n\n  function openBlockAlertModal(id, status, index) {\n    setUserId(id);\n    setRowId(index);\n    setUserStatus(status);\n    setModalMode('block');\n    setModalTitle(status ? 'Block the user?' : 'Unblock the user?');\n    setInfo(status ? 'After unblocking the user will receive notifications' : 'After blocking the user will not receive notifications');\n    setModalAlertTitle(true);\n  } //function to change the status of the user to blocked!\n\n\n  function changeUserStatus() {\n    changeStatus(actionUserId, userStatus).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        // const index = rowId;\n        //updating userStatus in state array\n        const updatedRows = [...users];\n        updatedRows[rowId].isActive = userStatus;\n        setUser(updatedRows);\n        setActionLoader(false);\n        setModalContent('Status Updated successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  } //sets the filter data to null\n\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } //function to delete the user from the database\n\n\n  function deleteUserProfile() {\n    setActionLoader(true);\n    deleteUser(actionUserId).then(res => {\n      console.log('hello', res); // console.log(res)\n\n      if (res.status) {\n        const index = rowId; //removing deleted user from state array \n\n        const updatedRows = [...users];\n        updatedRows.splice(index, 1);\n        setUser(updatedRows);\n        setModalContent('User Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Users Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\",\n                onClick: () => navigate('/dashboard/users/addUser'),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New User\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Added On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map((row, index) => /*#__PURE__*/_jsxDEV(SingleUserRow, {\n              openBlockAlertModal: openBlockAlertModal,\n              row: row,\n              index: index,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [1, 2, 5, 10, 25],\n        colSpan: 3,\n        count: totalPages * rowLimit,\n        rowsPerPage: rowLimit,\n        page: page - 1,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: onPageChange,\n        onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\" // centered\n      ,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this User?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \" px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \" px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \" px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteUserProfile() : changeUserStatus(actionUserId, rowId, userStatus);\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: completionModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\" // centered\n      ,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Updated Topics!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: modalContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" px-5\",\n              onClick: () => setCompletionModal(false),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\" // onClick={()=>resetFilterData()}\n                  ,\n                  onClick: () => resetFilterData(),\n                  children: \"Reset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: \" px-5\",\n                  onClick: () => {\n                    applyFilters();\n                  },\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Users, \"/8cSf/DHDqRPoOYlLpXk9Da6fzU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/users/Users.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchUser","changeStatus","deleteUser","getUserByFilter","dataLimit","imageBaseUrl","materialTableIcons","modalStyle","TableFooter","TableRow","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","Button","SingleUserRow","Users","props","tableIcons","users","setUser","noUsers","setNoUsers","months","modalTitle","setModalTitle","tableDataLoading","setTableDataLoading","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionUserId","setUserId","console","log","userStatus","setUserStatus","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","sortByDate","setSortByDate","filterLoader","setFilterLoader","navigate","then","res","status","results","data","catch","err","materialTableRef","error","openDeleteAlertModal","id","index","openBlockAlertModal","changeUserStatus","updatedRows","isActive","alert","resetFilterData","applyFilters","deleteUserProfile","splice","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","e","p","mx","map","row","inputProps","native","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\n// import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchUser, changeStatus, deleteUser, getUserByFilter } from \"../../api/Users/Users\"\nimport { dataLimit, imageBaseUrl } from '../../config';\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { TableFooter, TableRow } from '@mui/material';\n\n\n\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Button } from '@mui/material';\nimport SingleUserRow from './SingleUserRow';\n\nexport default function Users(props) {\n    const tableIcons = materialTableIcons\n    //setting user data into a variable\n    const [users, setUser] = useState([]);\n    const [noUsers, setNoUsers] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id of the user who is blocked or deleted\n    const [actionUserId, setUserId] = useState();\n    console.log(actionUserId)\n\n    //unblock or block vairbale \n    const [userStatus, setUserStatus] = useState(true);\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [totalPages, setTotalPages] = useState();\n\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    const navigate = useNavigate();\n\n    //useEffect for calling the function for filter onchange of search or filter data continue button\n    useEffect(() => {\n\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            getUserByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus)\n                .then((res) => {\n                    console.log(\"response\", res)\n                    if (res.status) {\n                        setUser(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setUser([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n\n    }, [search, filterLoader])\n\n    const materialTableRef = useRef()\n    useEffect(() => {\n        setNoUsers(false)\n        fetchUser(rowLimit, page).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched user into state variable\n                setUser(res.results.data);\n                setTotalPages(res.results.totalPages)\n            }\n            else {\n                //setting no user found variable true \n                setNoUsers(true);\n            }\n            setTableDataLoading(false);\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [rowLimit, page])\n\n    function openDeleteAlertModal(id, index) {\n        setUserId(id);\n        setRowId(index)\n        setModalMode('delete');\n        setModalTitle('Delete the user?');\n        setInfo('All the details of the user will be removed from the Platform');\n        setModalAlertTitle(true)\n    }\n\n    function openBlockAlertModal(id, status, index) {\n        setUserId(id);\n        setRowId(index)\n        setUserStatus(status);\n        setModalMode('block');\n        setModalTitle(status ? ('Block the user?') : ('Unblock the user?'));\n        setInfo(status ? ('After unblocking the user will receive notifications') : ('After blocking the user will not receive notifications'));\n        setModalAlertTitle(true);\n    }\n\n    //function to change the status of the user to blocked!\n    function changeUserStatus() {\n        changeStatus(actionUserId, userStatus)\n            .then((res => {\n                console.log('res', res);\n                if (res.status) {\n                    // const index = rowId;\n                    //updating userStatus in state array\n                    const updatedRows = [...users];\n                    updatedRows[rowId].isActive = userStatus;\n                    setUser(updatedRows);\n                    setActionLoader(false)\n                    setModalContent('Status Updated successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                }\n                else {\n                    alert(\"error occured\")\n                }\n            }))\n            .catch((err => {\n                console.log('err', err);\n            }))\n    }\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n    //function to delete the user from the database\n    function deleteUserProfile() {\n        setActionLoader(true)\n        deleteUser(actionUserId)\n            .then((res) => {\n                console.log('hello', res);\n                // console.log(res)\n                if (res.status) {\n                    const index = rowId;\n                    //removing deleted user from state array \n                    const updatedRows = [...users]\n                    updatedRows.splice(index, 1)\n                    setUser(updatedRows);\n                    setModalContent('User Deleted successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                    setActionLoader(false)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n\n    // function for pagination\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n\n    console.log(users)\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Users Management</h5>\n            {/* <hr className=\"mt-4\" /> */}\n            <div className=\"d-flex align-items-center mt-3\">\n                <Card className=\"w-100\">\n                    <CardContent className=\"pageHeaderCard\">\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mx: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\n                                    onClick={() => navigate('/dashboard/users/addUser')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New User</Button>\n                                <Button variant=\"contained\" className=\"\" >Export</Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            {/* <div className=\"row\">\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <InputGroup className=\"mb-3\" >\n                                    <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-lg-4 col-md-2 col-6 \">\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className=\"col-lg-2 col-md-2 col-6 \">\n                                <Button variant=\"contained\" className=\"py-2 px-5 me-3\" >Export</Button>\n                            </div>\n                        </div> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying user details  */}\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell >Name</TableCell>\n                            <TableCell >Added On</TableCell>\n                            <TableCell >Phone Number</TableCell>\n                            <TableCell >Email Id</TableCell>\n                            <TableCell >School</TableCell>\n                            <TableCell >Subscription</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Action</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {users.map((row, index) => <SingleUserRow openBlockAlertModal={openBlockAlertModal} row={row} index={index} openDeleteAlertModal={openDeleteAlertModal} />\n                            )}\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <MaterialTable\n                    columns={[\n                        {\n                            title: 'S No.',\n                            field: 'Serial',\n                            render: rowData => <>{rowData.tableData.id + 1}</>\n                        },\n                        {\n                            title: 'Name',\n                            field: 'name',\n                            render: rowData => <Link to={'/app/user/' + rowData._id}\n                                class=\"nav-link \" style={{ display: 'flex' }}>\n                                <img src={rowData.profileImage ? (imageBaseUrl + rowData.profileImage) : ('/Assets/userProfile.png')} height={30} style={{ borderRadius: '50%' }} />\n                                {rowData.name}\n                            </Link>\n                        },\n                        {\n                            title: 'Added On',\n                            field: 'createdAt',\n                            render: rowData => <>{renderDate(rowData.createdAt)}</>\n                        },\n                        {\n                            title: 'Phone Number',\n                            field: 'phoneNumber',\n                        },\n                        {\n                            title: 'Email Id',\n                            field: 'email',\n                        },\n                        {\n                            title: 'School',\n                            field: 'school',\n                        },\n                        {\n                            title: 'Subscription',\n                            render: rowData => <>{rowData.paidStatus ? ('Yes') : ('No')}</>\n                        },\n                        {\n                            title: 'Status',\n                            render: rowData => <>{rowData.isActive ? ('Unblocked') : ('Blocked')}</>\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => <>\n                                {rowData.isActive ? (\n                                    <a href=\"javascript:void(0)\" onClick={() => openBlockAlertModal(rowData, false)}>\n                                        <i className=\"fas fa-ban txt-5282F0\" ></i>\n                                    </a>\n                                ) : (\n                                    <a href=\"javascript:void(0)\" onClick={() => openBlockAlertModal(rowData, true)}>\n                                        <i className=\"fas fa-unlock-alt txt-5282F0\"></i>\n                                    </a>\n                                )}\n                                &emsp;\n                                <a href=\"javascript:void(0)\" onClick={() => openDeleteAlertModal(rowData)}>\n                                    <i className=\"fas fa-trash txt-5282F0\"></i>\n                                </a>\n                            </>\n                        },\n                    ]}\n                    data={users}\n                    title=\"Users\"\n                    isLoading={tableDataLoading}\n                    options={{\n                        sorting: true,\n                        exportButton: true,\n                        toolbar: true,\n                        showTitle: false,\n                        search: false,\n                    }}\n                    icons={tableIcons}\n                /> */}\n            </div>\n            <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                <TablePagination\n                    rowsPerPageOptions={[1, 2, 5, 10, 25]}\n                    colSpan={3}\n                    count={totalPages * rowLimit}\n                    rowsPerPage={rowLimit}\n                    page={page - 1}\n                    SelectProps={{\n                        inputProps: {\n                            'aria-label': 'rows per page',\n                        },\n                        native: true,\n                    }}\n                    onPageChange={onPageChange}\n                    onRowsPerPageChange={onRowPerChange}\n                // ActionsComponent={TablePaginationActions}\n                />\n            </div>\n\n            {/* </div> */}\n\n            {/* Modal for delete or blocking confirmation */}\n            <Modal\n                open={modalAlertTitle}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                // centered\n                onClose={() => setModalAlertTitle(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    {modalTitle}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>Are you sure to {modalMode} this User?</p>\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\" px-5\"\n                                onClick={() => setModalAlertTitle(false)}\n                            >Cancel</Button>\n                            &emsp;\n                            {actionLodaer ? (\n                                <Button variant=\"outlined\" className=\" px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\" px-5\"\n                                    onClick={() => { modalMode == 'delete' ? (deleteUserProfile()) : (changeUserStatus(actionUserId, rowId, userStatus)) }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for successful deletion and block */}\n            <Modal\n                show={completionModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n            // centered\n            >\n                <Box style={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Updated Topics!\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </Modal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>{modalContent}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <button className=\" px-5\"\n                                onClick={() => setCompletionModal(false)}\n                            >OK</button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                onClose={() => setFilterModal(false)}\n\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\" >\n                        {/* <BootstrapModal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n                        {/* <Box> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        {/* </Box> */}\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Added Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option value={null}>Status</option>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"inactive\">Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Grid container>\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    <Button variant=\"outlined\" className=\" px-5\"\n                                        // onClick={()=>resetFilterData()}\n                                        onClick={() => resetFilterData()}\n                                    >Reset </Button>\n                                </Grid>\n                                &emsp;\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    {filterLoader ? (\n                                        <Button variant=\"outlined\" className=\" px-5\" >\n\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" className=\" px-5\"\n                                            onClick={() => { applyFilters() }}\n                                        >Confirm</Button>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}