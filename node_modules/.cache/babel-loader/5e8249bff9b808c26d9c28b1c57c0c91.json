{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\extra\\\\form\\\\FormikForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik'; // @mui\n\nimport { Stack, Button, Checkbox, TextField, Typography, IconButton, InputAdornment, FormHelperText, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport DatePicker from '@mui/lab/DatePicker'; // utils\n\nimport { fData } from '../../../../utils/formatNumber';\nimport { fTimestamp } from '../../../../utils/formatTime'; // components\n\nimport Editor from '../../../../components/editor';\nimport Iconify from '../../../../components/Iconify'; //\n\nimport { FormSchema, defaultValues } from '.'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormikForm() {\n  _s();\n\n  var _values$photo2, _values$photo3;\n\n  const fileInputRef = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const formik = useFormik({\n    initialValues: defaultValues,\n    validationSchema: FormSchema,\n    onSubmit: async (values, _ref) => {\n      var _values$photo;\n\n      let {\n        resetForm\n      } = _ref;\n      await new Promise(resolve => setTimeout(resolve, 500));\n      alert(JSON.stringify({ ...values,\n        photo: (_values$photo = values.photo) === null || _values$photo === void 0 ? void 0 : _values$photo.name,\n        startDate: values.startDate && fTimestamp(values.startDate),\n        endDate: values.endDate && fTimestamp(values.endDate)\n      }, null, 2));\n      resetForm();\n    }\n  });\n  const {\n    dirty,\n    errors,\n    values,\n    touched,\n    isSubmitting,\n    handleSubmit,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  const handleClickAttachPhoto = () => {\n    var _fileInputRef$current;\n\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Full Name\",\n          ...getFieldProps('fullName'),\n          error: Boolean(touched.fullName && errors.fullName),\n          helperText: touched.fullName && errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"email\",\n          label: \"Email address\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Age\",\n          ...getFieldProps('age'),\n          error: Boolean(touched.age && errors.age),\n          helperText: touched.age && errors.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: {\n              xs: 2,\n              sm: 3\n            },\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Start date\",\n              ...getFieldProps('startDate'),\n              onChange: date => setFieldValue('startDate', date),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...params,\n                error: Boolean(touched.startDate && errors.startDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this),\n              inputFormat: \"dd/MM/yyyy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"End date\",\n              ...getFieldProps('endDate'),\n              onChange: date => setFieldValue('endDate', date),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...params,\n                error: Boolean(touched.endDate && errors.endDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this),\n              inputFormat: \"dd/MM/yyyy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), Boolean(touched.startDate && errors.startDate) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            sx: {\n              px: 2\n            },\n            error: true,\n            children: errors.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), Boolean(touched.endDate && errors.endDate) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            sx: {\n              px: 2\n            },\n            error: true,\n            children: errors.endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Iconify, {\n                  icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: showPassword ? 'text' : 'password',\n          label: \"Confirm Password\",\n          ...getFieldProps('confirmPassword'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Iconify, {\n                  icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.confirmPassword && errors.confirmPassword),\n          helperText: touched.confirmPassword && errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            gutterBottom: true,\n            children: \"Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            id: \"formik-content\",\n            value: values.quillEditor,\n            onChange: val => setFieldValue('quillEditor', val),\n            error: Boolean(touched.quillEditor && errors.quillEditor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), touched.quillEditor && errors.quillEditor && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            sx: {\n              px: 2,\n              textTransform: 'capitalize'\n            },\n            children: touched.quillEditor && errors.quillEditor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"warning\",\n              variant: \"contained\",\n              onClick: handleClickAttachPhoto,\n              startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n                icon: 'eva:cloud-upload-fill'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 28\n              }, this),\n              children: \"Upload photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [((_values$photo2 = values.photo) === null || _values$photo2 === void 0 ? void 0 : _values$photo2.name) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: values.photo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 40\n              }, this), ((_values$photo3 = values.photo) === null || _values$photo3 === void 0 ? void 0 : _values$photo3.size) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  color: 'text.secondary'\n                },\n                children: fData(values.photo.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              id: \"photo\",\n              name: \"photo\",\n              type: \"file\",\n              onChange: event => {\n                var _event$target$files;\n\n                setFieldValue('photo', (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0]);\n              },\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), touched.photo && errors.photo && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            sx: {\n              px: 2,\n              display: 'block'\n            },\n            error: true,\n            children: errors.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, { ...getFieldProps('terms'),\n              checked: values.terms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 24\n            }, this),\n            label: \" Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), touched.terms && errors.terms && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            sx: {\n              px: 2\n            },\n            error: true,\n            children: errors.terms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          disabled: !dirty,\n          children: \"Submit Formik Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormikForm, \"EZQUoygTerr/SGObIqMTYY425Go=\", false, function () {\n  return [useFormik];\n});\n\n_c = FormikForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikForm\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/extra/form/FormikForm.js"],"names":["useState","useRef","useFormik","Form","FormikProvider","Stack","Button","Checkbox","TextField","Typography","IconButton","InputAdornment","FormHelperText","FormControlLabel","LoadingButton","DatePicker","fData","fTimestamp","Editor","Iconify","FormSchema","defaultValues","FormikForm","fileInputRef","showPassword","setShowPassword","formik","initialValues","validationSchema","onSubmit","values","resetForm","Promise","resolve","setTimeout","alert","JSON","stringify","photo","name","startDate","endDate","dirty","errors","touched","isSubmitting","handleSubmit","setFieldValue","getFieldProps","handleShowPassword","show","handleClickAttachPhoto","current","click","Boolean","fullName","email","age","xs","sm","date","params","px","endAdornment","password","confirmPassword","color","quillEditor","val","textTransform","size","event","target","files","display","terms"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport {\n  Stack,\n  Button,\n  Checkbox,\n  TextField,\n  Typography,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport DatePicker from '@mui/lab/DatePicker';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\nimport { fTimestamp } from '../../../../utils/formatTime';\n// components\nimport Editor from '../../../../components/editor';\nimport Iconify from '../../../../components/Iconify';\n//\nimport { FormSchema, defaultValues } from '.';\n\n// ----------------------------------------------------------------------\n\nexport default function FormikForm() {\n  const fileInputRef = useRef(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const formik = useFormik({\n    initialValues: defaultValues,\n    validationSchema: FormSchema,\n    onSubmit: async (values, { resetForm }) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      alert(\n        JSON.stringify(\n          {\n            ...values,\n            photo: values.photo?.name,\n            startDate: values.startDate && fTimestamp(values.startDate),\n            endDate: values.endDate && fTimestamp(values.endDate),\n          },\n          null,\n          2\n        )\n      );\n      resetForm();\n    },\n  });\n\n  const { dirty, errors, values, touched, isSubmitting, handleSubmit, setFieldValue, getFieldProps } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  const handleClickAttachPhoto = () => {\n    fileInputRef.current?.click();\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            label=\"Full Name\"\n            {...getFieldProps('fullName')}\n            error={Boolean(touched.fullName && errors.fullName)}\n            helperText={touched.fullName && errors.fullName}\n          />\n\n          <TextField\n            fullWidth\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Age\"\n            {...getFieldProps('age')}\n            error={Boolean(touched.age && errors.age)}\n            helperText={touched.age && errors.age}\n          />\n\n          <Stack spacing={1}>\n            <Stack spacing={{ xs: 2, sm: 3 }} direction={{ xs: 'column', sm: 'row' }}>\n              <DatePicker\n                label=\"Start date\"\n                {...getFieldProps('startDate')}\n                onChange={(date) => setFieldValue('startDate', date)}\n                renderInput={(params) => (\n                  <TextField fullWidth {...params} error={Boolean(touched.startDate && errors.startDate)} />\n                )}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n\n              <DatePicker\n                label=\"End date\"\n                {...getFieldProps('endDate')}\n                onChange={(date) => setFieldValue('endDate', date)}\n                renderInput={(params) => (\n                  <TextField fullWidth {...params} error={Boolean(touched.endDate && errors.endDate)} />\n                )}\n                inputFormat=\"dd/MM/yyyy\"\n              />\n            </Stack>\n\n            {Boolean(touched.startDate && errors.startDate) && (\n              <FormHelperText sx={{ px: 2 }} error>\n                {errors.startDate}\n              </FormHelperText>\n            )}\n            {Boolean(touched.endDate && errors.endDate) && (\n              <FormHelperText sx={{ px: 2 }} error>\n                {errors.endDate}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <TextField\n            fullWidth\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <TextField\n            fullWidth\n            type={showPassword ? 'text' : 'password'}\n            label=\"Confirm Password\"\n            {...getFieldProps('confirmPassword')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n            helperText={touched.confirmPassword && errors.confirmPassword}\n          />\n\n          <div>\n            <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }} gutterBottom>\n              Editor\n            </Typography>\n            <Editor\n              id=\"formik-content\"\n              value={values.quillEditor}\n              onChange={(val) => setFieldValue('quillEditor', val)}\n              error={Boolean(touched.quillEditor && errors.quillEditor)}\n            />\n            {touched.quillEditor && errors.quillEditor && (\n              <FormHelperText error sx={{ px: 2, textTransform: 'capitalize' }}>\n                {touched.quillEditor && errors.quillEditor}\n              </FormHelperText>\n            )}\n          </div>\n\n          <div>\n            <Stack direction=\"row\" alignItems=\"center\" spacing={3}>\n              <Button\n                color=\"warning\"\n                variant=\"contained\"\n                onClick={handleClickAttachPhoto}\n                startIcon={<Iconify icon={'eva:cloud-upload-fill'} />}\n              >\n                Upload photo\n              </Button>\n\n              <div>\n                {values.photo?.name && <Typography variant=\"subtitle2\">{values.photo.name}</Typography>}\n                {values.photo?.size && (\n                  <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                    {fData(values.photo.size)}\n                  </Typography>\n                )}\n              </div>\n\n              <input\n                ref={fileInputRef}\n                id=\"photo\"\n                name=\"photo\"\n                type=\"file\"\n                onChange={(event) => {\n                  setFieldValue('photo', event.target.files?.[0]);\n                }}\n                style={{ display: 'none' }}\n              />\n            </Stack>\n            {touched.photo && errors.photo && (\n              <FormHelperText sx={{ px: 2, display: 'block' }} error>\n                {errors.photo}\n              </FormHelperText>\n            )}\n          </div>\n\n          <Stack>\n            <FormControlLabel\n              control={<Checkbox {...getFieldProps('terms')} checked={values.terms} />}\n              label=\" Terms and Conditions\"\n            />\n\n            {touched.terms && errors.terms && (\n              <FormHelperText sx={{ px: 2 }} error>\n                {errors.terms}\n              </FormHelperText>\n            )}\n          </Stack>\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n            disabled={!dirty}\n          >\n            Submit Formik Form\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}