{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{findIndex}from'lodash';import{useState}from'react';// @mui\nimport{Stack,Avatar,Typography}from'@mui/material';// utils\nimport{fToNow}from'../../../utils/formatTime';// components\nimport Image from'../../../components/Image';import LightboxModal from'../../../components/LightboxModal';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function KanbanTaskCommentList(_ref){var comments=_ref.comments;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openLightbox=_useState2[0],setOpenLightbox=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedImage=_useState4[0],setSelectedImage=_useState4[1];var imagesLightbox=comments.filter(function(comment){return comment.messageType==='image';}).map(function(item){return item.message;});var handleOpenLightbox=function handleOpenLightbox(url){var selectedImage=findIndex(imagesLightbox,function(index){return index===url;});setOpenLightbox(true);setSelectedImage(selectedImage);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Stack,{spacing:3,sx:{py:3,px:2.5,bgcolor:'background.neutral'},children:comments.map(function(comment){return/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,children:[/*#__PURE__*/_jsx(Avatar,{src:comment.avatar,sx:{width:32,height:32}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",children:[\" \",comment.name]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{color:'text.secondary'},children:fToNow(comment.createdAt)})]}),comment.messageType==='image'?/*#__PURE__*/_jsx(Image,{src:comment.message,onClick:function onClick(){return handleOpenLightbox(comment.message);},sx:{mt:2,borderRadius:1}}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mt:0.5},children:comment.message})]})]},comment.id);})}),/*#__PURE__*/_jsx(LightboxModal,{images:imagesLightbox,mainSrc:imagesLightbox[selectedImage],photoIndex:selectedImage,setPhotoIndex:setSelectedImage,isOpen:openLightbox,onCloseRequest:function onCloseRequest(){return setOpenLightbox(false);}})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/kanban/KanbanTaskCommentList.js"],"names":["findIndex","useState","Stack","Avatar","Typography","fToNow","Image","LightboxModal","KanbanTaskCommentList","comments","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","imagesLightbox","filter","comment","messageType","map","item","message","handleOpenLightbox","url","index","py","px","bgcolor","avatar","width","height","name","color","createdAt","mt","borderRadius","id"],"mappings":"gKACA,OAASA,SAAT,KAA0B,QAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA;AACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,KAA0C,eAA1C,CACA;AACA,OAASC,MAAT,KAAuB,2BAAvB,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,CAEA;6IAMA,cAAe,SAASC,CAAAA,qBAAT,MAA6C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC1D,cAAwCR,QAAQ,CAAC,KAAD,CAAhD,wCAAOS,YAAP,eAAqBC,eAArB,eACA,eAA0CV,QAAQ,CAAC,CAAD,CAAlD,yCAAOW,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,cAAc,CAAGL,QAAQ,CAACM,MAAT,CAAgB,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,WAAR,GAAwB,OAArC,EAAhB,EAA8DC,GAA9D,CAAkE,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,OAAf,EAAlE,CAAvB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAS,CAClC,GAAMV,CAAAA,aAAa,CAAGZ,SAAS,CAACc,cAAD,CAAiB,SAACS,KAAD,QAAWA,CAAAA,KAAK,GAAKD,GAArB,EAAjB,CAA/B,CACAX,eAAe,CAAC,IAAD,CAAf,CACAE,gBAAgB,CAACD,aAAD,CAAhB,CACD,CAJD,CAMA,mBACE,wCACE,KAAC,KAAD,EAAO,OAAO,CAAE,CAAhB,CAAmB,EAAE,CAAE,CAAEY,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,GAAb,CAAkBC,OAAO,CAAE,oBAA3B,CAAvB,UACGjB,QAAQ,CAACS,GAAT,CAAa,SAACF,OAAD,qBACZ,MAAC,KAAD,EAAwB,SAAS,CAAC,KAAlC,CAAwC,OAAO,CAAE,CAAjD,wBACE,KAAC,MAAD,EAAQ,GAAG,CAAEA,OAAO,CAACW,MAArB,CAA6B,EAAE,CAAE,CAAEC,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAAjC,EADF,cAEE,oCACE,MAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,UAAU,CAAC,QAAlC,CAA2C,OAAO,CAAE,CAApD,wBACE,MAAC,UAAD,EAAY,OAAO,CAAC,WAApB,eAAkCb,OAAO,CAACc,IAA1C,GADF,cAEE,KAAC,UAAD,EAAY,OAAO,CAAC,SAApB,CAA8B,EAAE,CAAE,CAAEC,KAAK,CAAE,gBAAT,CAAlC,UACG1B,MAAM,CAACW,OAAO,CAACgB,SAAT,CADT,EAFF,GADF,CAQGhB,OAAO,CAACC,WAAR,GAAwB,OAAxB,cACC,KAAC,KAAD,EACE,GAAG,CAAED,OAAO,CAACI,OADf,CAEE,OAAO,CAAE,yBAAMC,CAAAA,kBAAkB,CAACL,OAAO,CAACI,OAAT,CAAxB,EAFX,CAGE,EAAE,CAAE,CAAEa,EAAE,CAAE,CAAN,CAASC,YAAY,CAAE,CAAvB,CAHN,EADD,cAOC,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,EAAE,CAAE,CAAED,EAAE,CAAE,GAAN,CAAhC,UACGjB,OAAO,CAACI,OADX,EAfJ,GAFF,GAAYJ,OAAO,CAACmB,EAApB,CADY,EAAb,CADH,EADF,cA6BE,KAAC,aAAD,EACE,MAAM,CAAErB,cADV,CAEE,OAAO,CAAEA,cAAc,CAACF,aAAD,CAFzB,CAGE,UAAU,CAAEA,aAHd,CAIE,aAAa,CAAEC,gBAJjB,CAKE,MAAM,CAAEH,YALV,CAME,cAAc,CAAE,gCAAMC,CAAAA,eAAe,CAAC,KAAD,CAArB,EANlB,EA7BF,GADF,CAwCD","sourcesContent":["import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useState } from 'react';\n// @mui\nimport { Stack, Avatar, Typography } from '@mui/material';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n// components\nimport Image from '../../../components/Image';\nimport LightboxModal from '../../../components/LightboxModal';\n\n// ----------------------------------------------------------------------\n\nKanbanTaskCommentList.propTypes = {\n  comments: PropTypes.array,\n};\n\nexport default function KanbanTaskCommentList({ comments }) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  const imagesLightbox = comments.filter((comment) => comment.messageType === 'image').map((item) => item.message);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      <Stack spacing={3} sx={{ py: 3, px: 2.5, bgcolor: 'background.neutral' }}>\n        {comments.map((comment) => (\n          <Stack key={comment.id} direction=\"row\" spacing={2}>\n            <Avatar src={comment.avatar} sx={{ width: 32, height: 32 }} />\n            <div>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                <Typography variant=\"subtitle2\"> {comment.name}</Typography>\n                <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                  {fToNow(comment.createdAt)}\n                </Typography>\n              </Stack>\n\n              {comment.messageType === 'image' ? (\n                <Image\n                  src={comment.message}\n                  onClick={() => handleOpenLightbox(comment.message)}\n                  sx={{ mt: 2, borderRadius: 1 }}\n                />\n              ) : (\n                <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                  {comment.message}\n                </Typography>\n              )}\n            </div>\n          </Stack>\n        ))}\n      </Stack>\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}