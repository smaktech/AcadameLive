{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\editor\\\\index.js\";\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill'; // @mui\n\nimport { styled } from '@mui/material/styles'; //\n\nimport EditorToolbar, { formats, redoChange, undoChange } from './EditorToolbar'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    borderRadius: theme.shape.borderRadius,\n    border: `solid 1px ${theme.palette.grey[50032]}`,\n    '& .ql-container.ql-snow': {\n      borderColor: 'transparent',\n      ...theme.typography.body1,\n      fontFamily: theme.typography.fontFamily\n    },\n    '& .ql-editor': {\n      minHeight: 200,\n      '&.ql-blank::before': {\n        fontStyle: 'normal',\n        color: theme.palette.text.disabled\n      },\n      '& pre.ql-syntax': { ...theme.typography.body2,\n        padding: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.grey[900]\n      }\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nEditor.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n  simple: PropTypes.bool,\n  sx: PropTypes.object\n};\nexport default function Editor(_ref2) {\n  let {\n    id,\n    error,\n    value,\n    onChange,\n    simple = false,\n    sx,\n    ...other\n  } = _ref2;\n  const modules = {\n    toolbar: {\n      container: `#${id}`,\n      handlers: {\n        undo: undoChange,\n        redo: redoChange\n      }\n    },\n    history: {\n      delay: 500,\n      maxStack: 100,\n      userOnly: true\n    },\n    syntax: true,\n    clipboard: {\n      matchVisual: false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    sx: { ...(error && {\n        border: theme => `solid 1px ${theme.palette.error.main}`\n      }),\n      ...sx\n    },\n    children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n      id: id,\n      isSimple: simple\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: value,\n      onChange: onChange,\n      modules: modules,\n      formats: formats,\n      placeholder: \"Write something awesome...\",\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/editor/index.js"],"names":["PropTypes","ReactQuill","styled","EditorToolbar","formats","redoChange","undoChange","RootStyle","theme","borderRadius","shape","border","palette","grey","borderColor","typography","body1","fontFamily","minHeight","fontStyle","color","text","disabled","body2","padding","spacing","backgroundColor","Editor","propTypes","id","string","isRequired","value","onChange","func","error","bool","simple","sx","object","other","modules","toolbar","container","handlers","undo","redo","history","delay","maxStack","userOnly","syntax","clipboard","matchVisual","main"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\n// @mui\nimport { styled } from '@mui/material/styles';\n//\nimport EditorToolbar, { formats, redoChange, undoChange } from './EditorToolbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  border: `solid 1px ${theme.palette.grey[500_32]}`,\n  '& .ql-container.ql-snow': {\n    borderColor: 'transparent',\n    ...theme.typography.body1,\n    fontFamily: theme.typography.fontFamily,\n  },\n  '& .ql-editor': {\n    minHeight: 200,\n    '&.ql-blank::before': {\n      fontStyle: 'normal',\n      color: theme.palette.text.disabled,\n    },\n    '& pre.ql-syntax': {\n      ...theme.typography.body2,\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[900],\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nEditor.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n  simple: PropTypes.bool,\n  sx: PropTypes.object,\n};\n\nexport default function Editor({ id, error, value, onChange, simple = false, sx, ...other }) {\n  const modules = {\n    toolbar: {\n      container: `#${id}`,\n      handlers: {\n        undo: undoChange,\n        redo: redoChange,\n      },\n    },\n    history: {\n      delay: 500,\n      maxStack: 100,\n      userOnly: true,\n    },\n    syntax: true,\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  return (\n    <RootStyle\n      sx={{\n        ...(error && {\n          border: (theme) => `solid 1px ${theme.palette.error.main}`,\n        }),\n        ...sx,\n      }}\n    >\n      <EditorToolbar id={id} isSimple={simple} />\n      <ReactQuill\n        value={value}\n        onChange={onChange}\n        modules={modules}\n        formats={formats}\n        placeholder=\"Write something awesome...\"\n        {...other}\n      />\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}