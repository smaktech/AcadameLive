{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\evaluation\\\\SingleEvaluationRow.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport { Avatar, Button } from '@mui/material';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { baseUrl } from 'src/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleEvaluationRow(_ref) {\n  _s();\n\n  let {\n    row,\n    index,\n    openDeleteAlertModal,\n    changeCourseStatus\n  } = _ref;\n  console.log(row);\n  const navigate = useNavigate(); //returns the created date of the record of the table\n\n  function renderDate(date) {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    sx: {\n      '&:last-child td, &:last-child th': {\n        border: 0\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: renderDate(row.createdAt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: row.status == 'inactive' ? 'In Active' : 'Active'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      style: {\n        width: \"30%\",\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [row.status == 'inactive' ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => changeCourseStatus(row, index, 'active'),\n          variant: \"text\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(ToggleOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => changeCourseStatus(row, index, 'inactive')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => navigate(`/dashboard/evaluation/Evaluationedit/${row._id}`),\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => navigate(`/dashboard/evaluation/Evaluationview/${row._id}`),\n          children: /*#__PURE__*/_jsxDEV(RemoveRedEyeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => openDeleteAlertModal(row._id, index),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleEvaluationRow, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SingleEvaluationRow;\nexport default SingleEvaluationRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleEvaluationRow\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/SingleEvaluationRow.js"],"names":["React","RemoveRedEyeIcon","TableRow","TableCell","Avatar","Button","ToggleOnIcon","EditIcon","ToggleOffIcon","DeleteIcon","ManageAccountsIcon","Link","useNavigate","Redirect","baseUrl","SingleEvaluationRow","row","index","openDeleteAlertModal","changeCourseStatus","console","log","navigate","renderDate","date","months","newDate","Date","returnDate","getMonth","getDate","getFullYear","border","course","createdAt","status","width","display","_id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport TableRow from '@mui/material/TableRow';\n\nimport TableCell from '@mui/material/TableCell';\nimport { Avatar, Button } from '@mui/material';\nimport ToggleOnIcon from '@mui/icons-material/ToggleOn';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ToggleOffIcon from '@mui/icons-material/ToggleOff';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\n\n\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { baseUrl } from 'src/config';\n\nfunction SingleEvaluationRow({ row, index, openDeleteAlertModal, changeCourseStatus }) {\n    console.log(row)\n\n\n    const navigate = useNavigate()\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n\n\n    return (\n        <TableRow\n            key={index}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n        >\n            <TableCell>\n                {index + 1}\n            </TableCell>\n            {/* <TableCell> \n                <Avatar alt=\"Remy Sharp\" src={`${baseUrl}/${row.image}`} />\n             </TableCell> */}\n            {/* <TableCell>\n                {row.board}\n            </TableCell> */}\n            <TableCell>\n                {row.course}\n            </TableCell>\n            \n            <TableCell>{renderDate(row.createdAt)}</TableCell>\n            {/* <TableCell>\n                {row.qualification}\n            </TableCell> */}\n            \n            <TableCell>\n                {/* {row.subject} */}\n            </TableCell>\n            {/* <TableCell>\n                {row.description}\n            </TableCell> */}\n            {/* <TableCell>{renderDate(row.createdAt)}</TableCell> */}\n            {/* <TableCell>{row?.boardID}</TableCell> */}\n            {/* <TableCell>{row?.classesID?.name}</TableCell> */}\n            <TableCell>{row.status == 'inactive' ? ('In Active') : ('Active')}</TableCell>\n            <TableCell style={{ width: \"30%\", display: 'flex' }}>\n                <>\n                    {row.status == 'inactive' ? (\n                        <Button\n\n                            onClick={() => changeCourseStatus(row, index, 'active')}\n                            variant=\"text\"\n                            color=\"secondary\"\n                        >\n                            <ToggleOffIcon />\n                        </Button>\n                    ) : (\n                        <Button variant=\"text\"\n                            onClick={() => changeCourseStatus(row, index, 'inactive')}>\n                           \n                        </Button>\n                    )} \n                    <Button variant=\"text\"\n                        onClick={() => navigate(`/dashboard/evaluation/Evaluationedit/${row._id}`)}>\n                        <EditIcon />\n                    </Button>\n                    <Button variant=\"text\"\n                        onClick={() => navigate(`/dashboard/evaluation/Evaluationview/${row._id}`)}>\n                        <RemoveRedEyeIcon />\n                        \n                    </Button>\n                     <Button variant=\"text\" onClick={() => openDeleteAlertModal(row._id, index)}>\n                       <DeleteIcon />\n                    </Button> \n                     {/* <Button variant=\"contained\" onClick={() => navigate('/dashboard/topics/' + row._id)}>\n                        Topics\n                    </Button>  */}\n                </>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default SingleEvaluationRow\n"]},"metadata":{},"sourceType":"module"}