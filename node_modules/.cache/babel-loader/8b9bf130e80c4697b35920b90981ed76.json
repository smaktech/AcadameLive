{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// @mui\nimport{Box,Table,Switch,Checkbox,TableRow,TableBody,TableCell,TableContainer,TablePagination,FormControlLabel}from'@mui/material';// components\nimport Scrollbar from'../../../../../components/Scrollbar';//\nimport SortingSelectingHead from'./SortingSelectingHead';import SortingSelectingToolbar from'./SortingSelectingToolbar';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var SORTING_SELECTING_TABLE=[createData('Cupcake',305,3.7,67,4.3),createData('Donut',452,25.0,51,4.9),createData('Eclair',262,16.0,24,6.0),createData('Frozen yoghurt',159,6.0,24,4.0),createData('Gingerbread',356,16.0,49,3.9),createData('Honeycomb',408,3.2,87,6.5),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Jelly Bean',375,0.0,94,0.0),createData('KitKat',518,26.0,65,7.0),createData('Lollipop',392,0.2,98,0.0),createData('Marshmallow',318,0,81,2.0),createData('Nougat',360,19.0,9,37.0),createData('Oreo',437,18.0,63,4.0)];var TABLE_HEAD=[{id:'name',numeric:false,disablePadding:true,label:'Dessert (100g serving)'},{id:'calories',numeric:true,disablePadding:false,label:'Calories'},{id:'fat',numeric:true,disablePadding:false,label:'Fat (g)'},{id:'carbs',numeric:true,disablePadding:false,label:'Carbs (g)'},{id:'protein',numeric:true,disablePadding:false,label:'Protein (g)'}];// ----------------------------------------------------------------------\nfunction descendingComparator(a,b,orderBy){if(b[orderBy]<a[orderBy]){return-1;}if(b[orderBy]>a[orderBy]){return 1;}return 0;}function getComparator(order,orderBy){return order==='desc'?function(a,b){return descendingComparator(a,b,orderBy);}:function(a,b){return-descendingComparator(a,b,orderBy);};}function stableSort(array,comparator){var stabilizedThis=array.map(function(el,index){return[el,index];});stabilizedThis.sort(function(a,b){var order=comparator(a[0],b[0]);if(order!==0)return order;return a[1]-b[1];});return stabilizedThis.map(function(el){return el[0];});}export default function SortingSelecting(){var _useState=useState('asc'),_useState2=_slicedToArray(_useState,2),order=_useState2[0],setOrder=_useState2[1];var _useState3=useState('calories'),_useState4=_slicedToArray(_useState3,2),orderBy=_useState4[0],setOrderBy=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),selected=_useState6[0],setSelected=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),page=_useState8[0],setPage=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),dense=_useState10[0],setDense=_useState10[1];var _useState11=useState(5),_useState12=_slicedToArray(_useState11,2),rowsPerPage=_useState12[0],setRowsPerPage=_useState12[1];var handleRequestSort=function handleRequestSort(property){var isAsc=orderBy===property&&order==='asc';setOrder(isAsc?'desc':'asc');setOrderBy(property);};var handleSelectAllClick=function handleSelectAllClick(checked){if(checked){var newSelecteds=SORTING_SELECTING_TABLE.map(function(n){return n.name;});setSelected(newSelecteds);return;}setSelected([]);};var handleClick=function handleClick(name){var selectedIndex=selected.indexOf(name);var newSelected=[];if(selectedIndex===-1){newSelected=newSelected.concat(selected,name);}else if(selectedIndex===0){newSelected=newSelected.concat(selected.slice(1));}else if(selectedIndex===selected.length-1){newSelected=newSelected.concat(selected.slice(0,-1));}else if(selectedIndex>0){newSelected=newSelected.concat(selected.slice(0,selectedIndex),selected.slice(selectedIndex+1));}setSelected(newSelected);};var handleChangePage=function handleChangePage(newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(parseInt(event.target.value,10));setPage(0);};var isSelected=function isSelected(name){return selected.indexOf(name)!==-1;};// Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\nvar emptyRows=page>0?Math.max(0,(1+page)*rowsPerPage-SORTING_SELECTING_TABLE.length):0;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SortingSelectingToolbar,{numSelected:selected.length}),/*#__PURE__*/_jsx(Scrollbar,{children:/*#__PURE__*/_jsx(TableContainer,{sx:{minWidth:800},children:/*#__PURE__*/_jsxs(Table,{size:dense?'small':'medium',children:[/*#__PURE__*/_jsx(SortingSelectingHead,{order:order,orderBy:orderBy,headLabel:TABLE_HEAD,numSelected:selected.length,onRequestSort:handleRequestSort,rowCount:SORTING_SELECTING_TABLE.length,onSelectAllClick:handleSelectAllClick}),/*#__PURE__*/_jsxs(TableBody,{children:[stableSort(SORTING_SELECTING_TABLE,getComparator(order,orderBy)).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(row,index){var isItemSelected=isSelected(row.name);var labelId=\"enhanced-table-checkbox-\".concat(index);return/*#__PURE__*/_jsxs(TableRow,{hover:true,onClick:function onClick(){return handleClick(row.name);},role:\"checkbox\",\"aria-checked\":isItemSelected,tabIndex:-1,selected:isItemSelected,children:[/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{checked:isItemSelected})}),/*#__PURE__*/_jsx(TableCell,{component:\"th\",id:labelId,scope:\"row\",padding:\"none\",children:row.name}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.calories}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.fat}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.carbs}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.protein})]},row.name);}),emptyRows>0&&/*#__PURE__*/_jsx(TableRow,{style:{height:(dense?33:53)*emptyRows},children:/*#__PURE__*/_jsx(TableCell,{colSpan:6})})]})]})})}),/*#__PURE__*/_jsxs(Box,{sx:{position:'relative'},children:[/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:SORTING_SELECTING_TABLE.length,rowsPerPage:rowsPerPage,page:page,onPageChange:function onPageChange(e,page){return handleChangePage(page);},onRowsPerPageChange:handleChangeRowsPerPage}),/*#__PURE__*/_jsx(Box,{sx:{px:3,py:1.5,top:0,position:{md:'absolute'}},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:dense,onChange:function onChange(event){return setDense(event.target.checked);}}),label:\"Dense padding\"})})]})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/mui/table/sorting-selecting/index.js"],"names":["useState","Box","Table","Switch","Checkbox","TableRow","TableBody","TableCell","TableContainer","TablePagination","FormControlLabel","Scrollbar","SortingSelectingHead","SortingSelectingToolbar","createData","name","calories","fat","carbs","protein","SORTING_SELECTING_TABLE","TABLE_HEAD","id","numeric","disablePadding","label","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","SortingSelecting","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","property","isAsc","handleSelectAllClick","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","event","parseInt","target","value","isSelected","emptyRows","Math","max","minWidth","row","isItemSelected","labelId","height","position","e","px","py","top","md"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Table,\n  Switch,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  FormControlLabel,\n} from '@mui/material';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport SortingSelectingHead from './SortingSelectingHead';\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst SORTING_SELECTING_TABLE = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nconst TABLE_HEAD = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)',\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories',\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)',\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)',\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)',\n  },\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function SortingSelecting() {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked) => {\n    if (checked) {\n      const newSelecteds = SORTING_SELECTING_TABLE.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - SORTING_SELECTING_TABLE.length) : 0;\n\n  return (\n    <div>\n      <SortingSelectingToolbar numSelected={selected.length} />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table size={dense ? 'small' : 'medium'}>\n            <SortingSelectingHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              rowCount={SORTING_SELECTING_TABLE.length}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {stableSort(SORTING_SELECTING_TABLE, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={() => handleClick(row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isItemSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Box sx={{ position: 'relative' }}>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={SORTING_SELECTING_TABLE.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={(e, page) => handleChangePage(page)}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box\n          sx={{\n            px: 3,\n            py: 1.5,\n            top: 0,\n            position: { md: 'absolute' },\n          }}\n        >\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={(event) => setDense(event.target.checked)} />}\n            label=\"Dense padding\"\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}