{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\Breadcrumbs.js\";\nimport PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom'; // @mui\n\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired\n};\nexport default function Breadcrumbs(_ref) {\n  var _last;\n\n  let {\n    links,\n    activeLast = false,\n    ...other\n  } = _ref;\n  const currentLink = (_last = last(links)) === null || _last === void 0 ? void 0 : _last.name;\n  const listDefault = links.map(link => /*#__PURE__*/_jsxDEV(LinkItem, {\n    link: link\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 43\n  }, this));\n  const listActiveLast = links.map(link => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: link.name !== currentLink ? /*#__PURE__*/_jsxDEV(LinkItem, {\n      link: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        maxWidth: 260,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        color: 'text.disabled',\n        textOverflow: 'ellipsis'\n      },\n      children: currentLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(MUIBreadcrumbs, {\n    separator: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"span\",\n      sx: {\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this),\n    ...other,\n    children: activeLast ? listDefault : listActiveLast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_c = Breadcrumbs;\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string\n  })\n};\n\nfunction LinkItem(_ref2) {\n  let {\n    link\n  } = _ref2;\n  const {\n    href,\n    name,\n    icon\n  } = link;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    variant: \"body2\",\n    component: RouterLink,\n    to: href || '#',\n    sx: {\n      lineHeight: 2,\n      display: 'flex',\n      alignItems: 'center',\n      color: 'text.primary',\n      '& > div': {\n        display: 'inherit'\n      }\n    },\n    children: [icon && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mr: 1,\n        '& svg': {\n          width: 20,\n          height: 20\n        }\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this), name]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = LinkItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Breadcrumbs\");\n$RefreshReg$(_c2, \"LinkItem\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/Breadcrumbs.js"],"names":["PropTypes","last","Link","RouterLink","Box","Typography","Breadcrumbs","MUIBreadcrumbs","propTypes","activeLast","bool","links","array","isRequired","other","currentLink","name","listDefault","map","link","listActiveLast","maxWidth","overflow","whiteSpace","color","textOverflow","width","height","borderRadius","bgcolor","LinkItem","shape","href","string","icon","any","lineHeight","display","alignItems","mr"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { last } from 'lodash';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = last(links)?.name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}