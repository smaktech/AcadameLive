{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\Avatar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar as MUIAvatar } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    color = 'default',\n    children,\n    sx,\n    ...other\n  } = _ref;\n  const theme = useTheme();\n\n  if (color === 'default') {\n    return /*#__PURE__*/_jsxDEV(MUIAvatar, {\n      ref: ref,\n      sx: sx,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MUIAvatar, {\n    ref: ref,\n    sx: {\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n      ...sx\n    },\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = Avatar;\nAvatar.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error'])\n};\nexport default Avatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Avatar$forwardRef\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/Avatar.js"],"names":["PropTypes","forwardRef","useTheme","Avatar","MUIAvatar","ref","color","children","sx","other","theme","fontWeight","typography","fontWeightMedium","palette","contrastText","backgroundColor","main","propTypes","node","object","oneOf"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,eAApC,C,CAEA;;;AAEA,MAAMD,MAAM,gBAAGF,UAAU,SAAC,OAAgDI,GAAhD,KAAwD;AAAA;;AAAA,MAAvD;AAAEC,IAAAA,KAAK,GAAG,SAAV;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,EAA/B;AAAmC,OAAGC;AAAtC,GAAuD;AAChF,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,MAAII,KAAK,KAAK,SAAd,EAAyB;AACvB,wBACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAED,GAAhB;AAAqB,MAAA,EAAE,EAAEG,EAAzB;AAAA,SAAiCC,KAAjC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,SAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,EAAE,EAAE;AACFM,MAAAA,UAAU,EAAED,KAAK,CAACE,UAAN,CAAiBC,gBAD3B;AAEFP,MAAAA,KAAK,EAAEI,KAAK,CAACI,OAAN,CAAcR,KAAd,EAAqBS,YAF1B;AAGFC,MAAAA,eAAe,EAAEN,KAAK,CAACI,OAAN,CAAcR,KAAd,EAAqBW,IAHpC;AAIF,SAAGT;AAJD,KAFN;AAAA,OAQMC,KARN;AAAA,cAUGF;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzBwB;AAAA,UACTL,QADS;AAAA,GAAzB;MAAMC,M;AA2BNA,MAAM,CAACe,SAAP,GAAmB;AACjBX,EAAAA,QAAQ,EAAEP,SAAS,CAACmB,IADH;AAEjBX,EAAAA,EAAE,EAAER,SAAS,CAACoB,MAFG;AAGjBd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,MAApC,EAA4C,SAA5C,EAAuD,SAAvD,EAAkE,OAAlE,CAAhB;AAHU,CAAnB;AAMA,eAAelB,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar as MUIAvatar } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Avatar = forwardRef(({ color = 'default', children, sx, ...other }, ref) => {\n  const theme = useTheme();\n\n  if (color === 'default') {\n    return (\n      <MUIAvatar ref={ref} sx={sx} {...other}>\n        {children}\n      </MUIAvatar>\n    );\n  }\n\n  return (\n    <MUIAvatar\n      ref={ref}\n      sx={{\n        fontWeight: theme.typography.fontWeightMedium,\n        color: theme.palette[color].contrastText,\n        backgroundColor: theme.palette[color].main,\n        ...sx,\n      }}\n      {...other}\n    >\n      {children}\n    </MUIAvatar>\n  );\n});\n\nAvatar.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'error']),\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}