{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"data\"];import MapGL from'react-map-gl';import{useState}from'react';// @mui\nimport{Box,Typography}from'@mui/material';// components\nimport Image from'../../components/Image';import{MapControlPopup,MapControlMarker,MapControlScale,MapControlGeolocate,MapControlNavigation,MapControlFullscreen}from'../../components/map';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MapMarkersPopups(_ref){var data=_ref.data,other=_objectWithoutProperties(_ref,_excluded);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),tooltip=_useState2[0],setTooltip=_useState2[1];var _useState3=useState({zoom:2}),_useState4=_slicedToArray(_useState3,2),viewport=_useState4[0],setViewport=_useState4[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MapGL,_objectSpread(_objectSpread(_objectSpread({},viewport),{},{onViewportChange:setViewport},other),{},{children:[/*#__PURE__*/_jsx(MapControlScale,{}),/*#__PURE__*/_jsx(MapControlNavigation,{}),/*#__PURE__*/_jsx(MapControlFullscreen,{}),/*#__PURE__*/_jsx(MapControlGeolocate,{}),data.map(function(country){return/*#__PURE__*/_jsx(MapControlMarker,{latitude:country.latlng[0],longitude:country.latlng[1],onClick:function onClick(){return setTooltip(country);}},country.name);}),tooltip&&/*#__PURE__*/_jsx(MapControlPopup,{longitude:tooltip.latlng[1],latitude:tooltip.latlng[0],onClose:function onClose(){return setTooltip(null);},children:/*#__PURE__*/_jsxs(Box,{sx:{color:'common.white'},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:1,display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{height:'18px',minWidth:'28px',marginRight:'8px',borderRadius:'4px',backgroundSize:'cover',backgroundPosition:'center',backgroundRepeat:'no-repeat',backgroundImage:\"url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/\".concat(tooltip.country_code.toLowerCase(),\".svg)\")}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:tooltip.name})]}),/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[\"Timezones: \",tooltip.timezones]}),/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[\"Lat: \",tooltip.latlng[0]]}),/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[\"Long: \",tooltip.latlng[1]]}),/*#__PURE__*/_jsx(Image,{alt:tooltip.name,src:tooltip.photo,ratio:\"4/3\",sx:{mt:1,borderRadius:1}})]})})]}))});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapMarkersPopups.js"],"names":["MapGL","useState","Box","Typography","Image","MapControlPopup","MapControlMarker","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","MapMarkersPopups","data","other","tooltip","setTooltip","zoom","viewport","setViewport","map","country","latlng","name","color","mb","display","alignItems","height","minWidth","marginRight","borderRadius","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","country_code","toLowerCase","timezones","photo","mt"],"mappings":"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","sourcesContent":["import MapGL from 'react-map-gl';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Typography } from '@mui/material';\n// components\nimport Image from '../../components/Image';\nimport {\n  MapControlPopup,\n  MapControlMarker,\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nMapMarkersPopups.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default function MapMarkersPopups({ data, ...other }) {\n  const [tooltip, setTooltip] = useState(null);\n  const [viewport, setViewport] = useState({\n    zoom: 2,\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        {data.map((country) => (\n          <MapControlMarker\n            key={country.name}\n            latitude={country.latlng[0]}\n            longitude={country.latlng[1]}\n            onClick={() => setTooltip(country)}\n          />\n        ))}\n\n        {tooltip && (\n          <MapControlPopup longitude={tooltip.latlng[1]} latitude={tooltip.latlng[0]} onClose={() => setTooltip(null)}>\n            <Box sx={{ color: 'common.white' }}>\n              <Box\n                sx={{\n                  mb: 1,\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <Box\n                  sx={{\n                    height: '18px',\n                    minWidth: '28px',\n                    marginRight: '8px',\n                    borderRadius: '4px',\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${tooltip.country_code.toLowerCase()}.svg)`,\n                  }}\n                />\n                <Typography variant=\"subtitle2\">{tooltip.name}</Typography>\n              </Box>\n              <Typography component=\"div\" variant=\"caption\">\n                Timezones: {tooltip.timezones}\n              </Typography>\n              <Typography component=\"div\" variant=\"caption\">\n                Lat: {tooltip.latlng[0]}\n              </Typography>\n              <Typography component=\"div\" variant=\"caption\">\n                Long: {tooltip.latlng[1]}\n              </Typography>\n              <Image alt={tooltip.name} src={tooltip.photo} ratio=\"4/3\" sx={{ mt: 1, borderRadius: 1 }} />\n            </Box>\n          </MapControlPopup>\n        )}\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}