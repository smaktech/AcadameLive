{"ast":null,"code":"/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [\"self\", {\n      begin: /:-/,\n      contains: [VAR]\n    } // default values\n    ]\n  };\n  Object.assign(VAR, {\n    className: 'variable',\n    variants: [{\n      begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/, // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![\\\\w\\\\d])(?![$])`)\n    }, BRACED_VAR]\n  });\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/,\n    end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        className: 'string'\n      })]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VAR, SUBST]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [{\n      begin: /\\d+#[0-9a-f]+/,\n      className: \"number\"\n    }, hljs.NUMBER_MODE, VAR]\n  };\n  const SH_LIKE_SHELLS = [\"fish\", \"bash\", \"zsh\", \"sh\", \"csh\", \"ksh\", \"tcsh\", \"dash\", \"scsh\"];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: /\\w[\\w\\d_]*/\n    })],\n    relevance: 0\n  };\n  const KEYWORDS = [\"if\", \"then\", \"else\", \"elif\", \"fi\", \"for\", \"while\", \"in\", \"do\", \"done\", \"case\", \"esac\", \"function\"];\n  const LITERALS = [\"true\", \"false\"]; // to consume paths to prevent keyword matches inside them\n\n  const PATH_MODE = {\n    match: /(\\/[a-z._-]+)+/\n  }; // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\n  const SHELL_BUILT_INS = [\"break\", \"cd\", \"continue\", \"eval\", \"exec\", \"exit\", \"export\", \"getopts\", \"hash\", \"pwd\", \"readonly\", \"return\", \"shift\", \"test\", \"times\", \"trap\", \"umask\", \"unset\"];\n  const BASH_BUILT_INS = [\"alias\", \"bind\", \"builtin\", \"caller\", \"command\", \"declare\", \"echo\", \"enable\", \"help\", \"let\", \"local\", \"logout\", \"mapfile\", \"printf\", \"read\", \"readarray\", \"source\", \"type\", \"typeset\", \"ulimit\", \"unalias\"];\n  const ZSH_BUILT_INS = [\"autoload\", \"bg\", \"bindkey\", \"bye\", \"cap\", \"chdir\", \"clone\", \"comparguments\", \"compcall\", \"compctl\", \"compdescribe\", \"compfiles\", \"compgroups\", \"compquote\", \"comptags\", \"comptry\", \"compvalues\", \"dirs\", \"disable\", \"disown\", \"echotc\", \"echoti\", \"emulate\", \"fc\", \"fg\", \"float\", \"functions\", \"getcap\", \"getln\", \"history\", \"integer\", \"jobs\", \"kill\", \"limit\", \"log\", \"noglob\", \"popd\", \"print\", \"pushd\", \"pushln\", \"rehash\", \"sched\", \"setcap\", \"setopt\", \"stat\", \"suspend\", \"ttyctl\", \"unfunction\", \"unhash\", \"unlimit\", \"unsetopt\", \"vared\", \"wait\", \"whence\", \"where\", \"which\", \"zcompile\", \"zformat\", \"zftp\", \"zle\", \"zmodload\", \"zparseopts\", \"zprof\", \"zpty\", \"zregexparse\", \"zsocket\", \"zstyle\", \"ztcp\"];\n  const GNU_CORE_UTILS = [\"chcon\", \"chgrp\", \"chown\", \"chmod\", \"cp\", \"dd\", \"df\", \"dir\", \"dircolors\", \"ln\", \"ls\", \"mkdir\", \"mkfifo\", \"mknod\", \"mktemp\", \"mv\", \"realpath\", \"rm\", \"rmdir\", \"shred\", \"sync\", \"touch\", \"truncate\", \"vdir\", \"b2sum\", \"base32\", \"base64\", \"cat\", \"cksum\", \"comm\", \"csplit\", \"cut\", \"expand\", \"fmt\", \"fold\", \"head\", \"join\", \"md5sum\", \"nl\", \"numfmt\", \"od\", \"paste\", \"ptx\", \"pr\", \"sha1sum\", \"sha224sum\", \"sha256sum\", \"sha384sum\", \"sha512sum\", \"shuf\", \"sort\", \"split\", \"sum\", \"tac\", \"tail\", \"tr\", \"tsort\", \"unexpand\", \"uniq\", \"wc\", \"arch\", \"basename\", \"chroot\", \"date\", \"dirname\", \"du\", \"echo\", \"env\", \"expr\", \"factor\", // \"false\", // keyword literal already\n  \"groups\", \"hostid\", \"id\", \"link\", \"logname\", \"nice\", \"nohup\", \"nproc\", \"pathchk\", \"pinky\", \"printenv\", \"printf\", \"pwd\", \"readlink\", \"runcon\", \"seq\", \"sleep\", \"stat\", \"stdbuf\", \"stty\", \"tee\", \"test\", \"timeout\", // \"true\", // keyword literal already\n  \"tty\", \"uname\", \"unlink\", \"uptime\", \"users\", \"who\", \"whoami\", \"yes\"];\n  return {\n    name: 'Bash',\n    aliases: ['sh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: [...SHELL_BUILT_INS, ...BASH_BUILT_INS, // Shell modifiers\n      \"set\", \"shopt\", ...ZSH_BUILT_INS, ...GNU_CORE_UTILS]\n    },\n    contains: [KNOWN_SHEBANG, // to catch known shells and boost relevancy\n    hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n    FUNCTION, ARITHMETIC, hljs.HASH_COMMENT_MODE, HERE_DOC, PATH_MODE, QUOTE_STRING, ESCAPED_QUOTE, APOS_STRING, VAR]\n  };\n}\n\nmodule.exports = bash;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/bash.js"],"names":["bash","hljs","regex","VAR","BRACED_VAR","begin","end","contains","Object","assign","className","variants","concat","SUBST","BACKSLASH_ESCAPE","HERE_DOC","starts","END_SAME_AS_BEGIN","QUOTE_STRING","push","ESCAPED_QUOTE","APOS_STRING","ARITHMETIC","NUMBER_MODE","SH_LIKE_SHELLS","KNOWN_SHEBANG","SHEBANG","binary","join","relevance","FUNCTION","returnBegin","inherit","TITLE_MODE","KEYWORDS","LITERALS","PATH_MODE","match","SHELL_BUILT_INS","BASH_BUILT_INS","ZSH_BUILT_INS","GNU_CORE_UTILS","name","aliases","keywords","$pattern","keyword","literal","built_in","HASH_COMMENT_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const regex = hljs.regex;\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: regex.concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  const KEYWORDS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"elif\",\n    \"fi\",\n    \"for\",\n    \"while\",\n    \"in\",\n    \"do\",\n    \"done\",\n    \"case\",\n    \"esac\",\n    \"function\"\n  ];\n\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n\n  // to consume paths to prevent keyword matches inside them\n  const PATH_MODE = {\n    match: /(\\/[a-z._-]+)+/\n  };\n\n  // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n  const SHELL_BUILT_INS = [\n    \"break\",\n    \"cd\",\n    \"continue\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"export\",\n    \"getopts\",\n    \"hash\",\n    \"pwd\",\n    \"readonly\",\n    \"return\",\n    \"shift\",\n    \"test\",\n    \"times\",\n    \"trap\",\n    \"umask\",\n    \"unset\"\n  ];\n\n  const BASH_BUILT_INS = [\n    \"alias\",\n    \"bind\",\n    \"builtin\",\n    \"caller\",\n    \"command\",\n    \"declare\",\n    \"echo\",\n    \"enable\",\n    \"help\",\n    \"let\",\n    \"local\",\n    \"logout\",\n    \"mapfile\",\n    \"printf\",\n    \"read\",\n    \"readarray\",\n    \"source\",\n    \"type\",\n    \"typeset\",\n    \"ulimit\",\n    \"unalias\"\n  ];\n\n  const ZSH_BUILT_INS = [\n    \"autoload\",\n    \"bg\",\n    \"bindkey\",\n    \"bye\",\n    \"cap\",\n    \"chdir\",\n    \"clone\",\n    \"comparguments\",\n    \"compcall\",\n    \"compctl\",\n    \"compdescribe\",\n    \"compfiles\",\n    \"compgroups\",\n    \"compquote\",\n    \"comptags\",\n    \"comptry\",\n    \"compvalues\",\n    \"dirs\",\n    \"disable\",\n    \"disown\",\n    \"echotc\",\n    \"echoti\",\n    \"emulate\",\n    \"fc\",\n    \"fg\",\n    \"float\",\n    \"functions\",\n    \"getcap\",\n    \"getln\",\n    \"history\",\n    \"integer\",\n    \"jobs\",\n    \"kill\",\n    \"limit\",\n    \"log\",\n    \"noglob\",\n    \"popd\",\n    \"print\",\n    \"pushd\",\n    \"pushln\",\n    \"rehash\",\n    \"sched\",\n    \"setcap\",\n    \"setopt\",\n    \"stat\",\n    \"suspend\",\n    \"ttyctl\",\n    \"unfunction\",\n    \"unhash\",\n    \"unlimit\",\n    \"unsetopt\",\n    \"vared\",\n    \"wait\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"zcompile\",\n    \"zformat\",\n    \"zftp\",\n    \"zle\",\n    \"zmodload\",\n    \"zparseopts\",\n    \"zprof\",\n    \"zpty\",\n    \"zregexparse\",\n    \"zsocket\",\n    \"zstyle\",\n    \"ztcp\"\n  ];\n\n  const GNU_CORE_UTILS = [\n    \"chcon\",\n    \"chgrp\",\n    \"chown\",\n    \"chmod\",\n    \"cp\",\n    \"dd\",\n    \"df\",\n    \"dir\",\n    \"dircolors\",\n    \"ln\",\n    \"ls\",\n    \"mkdir\",\n    \"mkfifo\",\n    \"mknod\",\n    \"mktemp\",\n    \"mv\",\n    \"realpath\",\n    \"rm\",\n    \"rmdir\",\n    \"shred\",\n    \"sync\",\n    \"touch\",\n    \"truncate\",\n    \"vdir\",\n    \"b2sum\",\n    \"base32\",\n    \"base64\",\n    \"cat\",\n    \"cksum\",\n    \"comm\",\n    \"csplit\",\n    \"cut\",\n    \"expand\",\n    \"fmt\",\n    \"fold\",\n    \"head\",\n    \"join\",\n    \"md5sum\",\n    \"nl\",\n    \"numfmt\",\n    \"od\",\n    \"paste\",\n    \"ptx\",\n    \"pr\",\n    \"sha1sum\",\n    \"sha224sum\",\n    \"sha256sum\",\n    \"sha384sum\",\n    \"sha512sum\",\n    \"shuf\",\n    \"sort\",\n    \"split\",\n    \"sum\",\n    \"tac\",\n    \"tail\",\n    \"tr\",\n    \"tsort\",\n    \"unexpand\",\n    \"uniq\",\n    \"wc\",\n    \"arch\",\n    \"basename\",\n    \"chroot\",\n    \"date\",\n    \"dirname\",\n    \"du\",\n    \"echo\",\n    \"env\",\n    \"expr\",\n    \"factor\",\n    // \"false\", // keyword literal already\n    \"groups\",\n    \"hostid\",\n    \"id\",\n    \"link\",\n    \"logname\",\n    \"nice\",\n    \"nohup\",\n    \"nproc\",\n    \"pathchk\",\n    \"pinky\",\n    \"printenv\",\n    \"printf\",\n    \"pwd\",\n    \"readlink\",\n    \"runcon\",\n    \"seq\",\n    \"sleep\",\n    \"stat\",\n    \"stdbuf\",\n    \"stty\",\n    \"tee\",\n    \"test\",\n    \"timeout\",\n    // \"true\", // keyword literal already\n    \"tty\",\n    \"uname\",\n    \"unlink\",\n    \"uptime\",\n    \"users\",\n    \"who\",\n    \"whoami\",\n    \"yes\"\n  ];\n\n  return {\n    name: 'Bash',\n    aliases: ['sh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in:[\n        ...SHELL_BUILT_INS,\n        ...BASH_BUILT_INS,\n        // Shell modifiers\n        \"set\",\n        \"shopt\",\n        ...ZSH_BUILT_INS,\n        ...GNU_CORE_UTILS\n      ]\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      PATH_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n"]},"metadata":{},"sourceType":"script"}