{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\earnings\\\\Earnings.js\",\n    _s = $RefreshSig$();\n\n//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import {  InputGroup, FormControl } from 'react-bootstrap'\n\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { deleteResourse, editResourse, getAllResourse, getResourseByFilter } from '../../api/Resourses/Resourses';\nimport { getAllEarnings, getEarningsByFilter } from '../../api/Earnings/Earnings';\nimport { dataLimit, imageBaseUrl } from '../../config'; // import MultiSlider from '../../Components/Slider/MultiSlider'\n\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slider from '@mui/material/Slider';\nimport { Button } from '@mui/material';\nimport SingleEarningRow from './SingleEarningRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Earnings(props) {\n  _s();\n\n  const tableIcons = materialTableIcons; //setting earning data into a variable\n\n  const [earnings, setEarnings] = useState([]);\n  const [noEarnings, setNoEarnings] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the topic who is blocked or deleted\n\n  const [actionTopicId, setTopicId] = useState();\n  const [subjectName, setSubjectName] = useState(''); //unblock or block vairbale \n\n  const [subjectStatus, setSubjectStatus] = useState(true); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm Button\n\n  const [actionLodaer, setActionLoader] = useState(false); //sets the visibility of the filter modal \n\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false); //sets the range of amount\n\n  const [minValue, set_minValue] = useState(0);\n  const [maxValue, set_maxValue] = useState(100);\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [totalPages, setTotalPages] = useState();\n  const [sliderValue, setSliderValue] = useState([0, 100]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      console.log(minValue, maxValue);\n      getEarningsByFilter(search, filterStatus, filterDateFrom, filterDateTo, minValue, maxValue, sortByDate).then(res => {\n        console.log(\"res\", res);\n\n        if (res.status) {\n          setEarnings(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setEarnings([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false);\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoEarnings(false);\n    setTableDataLoading(true);\n    getAllEarnings(page, rowLimit).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched Topics into state variable\n        setEarnings(res.results.data);\n        setTotalPages(res.results.totalPages);\n      } else {\n        //setting no earnigs found variable true \n        setNoEarnings(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [page, rowLimit]); //sets the filter data to null\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  } // function for pagination\n\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  const handleChange = (event, newValue) => {\n    // setValue(newValue);\n    set_minValue(newValue[0]);\n    set_maxValue(newValue[1]);\n    setSliderValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Earnings Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"col-5 col-md-5 col-lg-3 shadow-lg rounded\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-4 col-md-4 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/Assets/money.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8 col-md-8 col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"mt-3 txt-5282F0 fw-bold\",\n                children: \"$1000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-3 txt-5282F0 fw-bold \",\n                children: [\"Total Payment \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 88\n                }, this), \"Received\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\" // onClick={() => navigate('/dashboard/resources/addResource')}\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New Transaction\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Transaction Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Transaction Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: earnings.map((row, index) => /*#__PURE__*/_jsxDEV(SingleEarningRow, {\n              row: row,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 59\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 mt-3 w-100 d-flex justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [1, 2, 5, 10, 25],\n        colSpan: 3,\n        count: totalPages * rowLimit,\n        rowsPerPage: rowLimit,\n        page: page - 1,\n        SelectProps: {\n          inputProps: {\n            'aria-label': 'rows per page'\n          },\n          native: true\n        },\n        onPageChange: onPageChange,\n        onRowsPerPageChange: onRowPerChange // ActionsComponent={TablePaginationActions}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Amount of Transaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"$ \", minValue, \" - \", maxValue]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                  getAriaLabel: () => 'Amount of Transaction',\n                  value: sliderValue,\n                  onChange: handleChange,\n                  valueLabelDisplay: \"auto\" // getAriaValueText={valuetext}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: true,\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: false,\n                    children: \"Cancelled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-outline-secondary px-5\" // onClick={()=>resetFilterData()}\n              ,\n              onClick: () => resetFilterData(),\n              children: \"Reset \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this), \"\\u2003\", filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                applyFilters();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Earnings, \"+/0bPYWNv3cplWVOdiIabhXZXWI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Earnings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earnings\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/earnings/Earnings.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","materialTableIcons","modalStyle","deleteResourse","editResourse","getAllResourse","getResourseByFilter","getAllEarnings","getEarningsByFilter","dataLimit","imageBaseUrl","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","Slider","Button","SingleEarningRow","Earnings","props","tableIcons","earnings","setEarnings","noEarnings","setNoEarnings","months","modalTitle","setModalTitle","tableDataLoading","setTableDataLoading","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionTopicId","setTopicId","subjectName","setSubjectName","subjectStatus","setSubjectStatus","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","sortByDate","setSortByDate","filterLoader","setFilterLoader","minValue","set_minValue","maxValue","set_maxValue","page","setPage","rowLimit","setRowLimit","totalPages","setTotalPages","sliderValue","setSliderValue","navigate","console","log","then","res","status","results","data","catch","err","materialTableRef","error","resetFilterData","applyFilters","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","handleChange","newValue","e","p","mx","map","row","index","inputProps","native","marginTop"],"mappings":"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","sourcesContent":["//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\n// import {  InputGroup, FormControl } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { materialTableIcons, modalStyle } from '../../config';\nimport { deleteResourse, editResourse, getAllResourse, getResourseByFilter } from '../../api/Resourses/Resourses'\nimport { getAllEarnings, getEarningsByFilter } from '../../api/Earnings/Earnings'\nimport { dataLimit, imageBaseUrl } from '../../config'\n// import MultiSlider from '../../Components/Slider/MultiSlider'\n\n\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Slider from '@mui/material/Slider';\nimport { Button } from '@mui/material';\nimport SingleEarningRow from './SingleEarningRow';\n\nexport default function Earnings(props) {\n    const tableIcons = materialTableIcons\n    //setting earning data into a variable\n    const [earnings, setEarnings] = useState([]);\n    const [noEarnings, setNoEarnings] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id and name of the topic who is blocked or deleted\n    const [actionTopicId, setTopicId] = useState();\n    const [subjectName, setSubjectName] = useState('');\n\n    //unblock or block vairbale \n    const [subjectStatus, setSubjectStatus] = useState(true);\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm Button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    //sets the visibility of the filter modal \n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    //sets the range of amount\n    const [minValue, set_minValue] = useState(0);\n    const [maxValue, set_maxValue] = useState(100);\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [totalPages, setTotalPages] = useState();\n    const [sliderValue, setSliderValue] = useState([0, 100])\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            console.log(minValue, maxValue)\n            getEarningsByFilter(search, filterStatus, filterDateFrom, filterDateTo, minValue, maxValue, sortByDate)\n                .then((res) => {\n                    console.log(\"res\", res)\n                    if (res.status) {\n                        setEarnings(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setEarnings([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n    }, [search, filterLoader])\n\n    const materialTableRef = useRef()\n    useEffect(() => {\n        setNoEarnings(false)\n        setTableDataLoading(true)\n        getAllEarnings(page, rowLimit).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Topics into state variable\n                setEarnings(res.results.data);\n                setTotalPages(res.results.totalPages)\n            }\n            else {\n                //setting no earnigs found variable true \n                setNoEarnings(true);\n            }\n            setTableDataLoading(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [page, rowLimit])\n\n\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n    // function for pagination\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n\n    const handleChange = (event, newValue) => {\n        // setValue(newValue);\n        set_minValue(newValue[0])\n        set_maxValue(newValue[1])\n        setSliderValue(newValue)\n    };\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Earnings Management</h5>\n            <div className=\"d-flex align-items-center mt-3\">\n                <Card className=\"col-5 col-md-5 col-lg-3 shadow-lg rounded\">\n                    <CardContent>\n                        <div className=\"row justify-content-center align-items-center\">\n                            <div className=\"col-lg-4 col-md-4 col-12\">\n                                <img src=\"/Assets/money.png\" />\n                            </div>\n                            <div className=\"col-lg-8 col-md-8 col-12\">\n                                <h4 className=\"mt-3 txt-5282F0 fw-bold\">$1000</h4>\n                                <h6 className=\"mt-3 txt-5282F0 fw-bold \">Total Payment <br />Received</h6>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            {/* <hr className=\"mt-4\" /> */}\n            <div className=\"d-flex align-items-center mt-3\">\n                <Card className=\"w-100\">\n                    <CardContent className=\"pageHeaderCard\">\n\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mx: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\n                                // onClick={() => navigate('/dashboard/resources/addResource')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Transaction</Button>\n                                <Button variant=\"contained\" className=\"\" >Export</Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            {/* <div className=\"row\">\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <InputGroup className=\"mb-3\" >\n                                    <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-lg-4 col-md-2 col-6 \">\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className=\"col-lg-2 col-md-2 col-6 \">\n                                <Button variant=\"contained\" className=\"py-2 px-5 me-3\" >Export</Button>\n                            </div>\n                        </div> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying Resourse details  */}\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell >User Name</TableCell>\n                            <TableCell >Transaction Id</TableCell>\n                            <TableCell >Transaction Date</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Price</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {earnings.map((row, index) => <SingleEarningRow row={row} index={index} />)}\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <MaterialTable\n                    columns={[\n                        {\n                            title: 'S No.',\n                            field: 'Serial',\n                            render: rowData => <>{rowData.tableData.id + 1}</>\n                        },\n                        {\n                            title: 'User Name',\n                            field: 'userName',\n                            render: rowData => <>\n                                <img src={rowData.profileImage ? (imageBaseUrl + rowData.profileImage) : ('/Assets/userProfile.png')} height={30} style={{ borderRadius: '50%' }} />\n                                {rowData.userID.name}\n                            </>\n                        },\n                        {\n                            title: 'Transaction Id',\n                            field: 'transactionID',\n                            render: rowData => <>{rowData.transactionID}</>\n                        },\n                        {\n                            title: 'Transaction Date',\n                            field: 'transactionDate',\n                            render: rowData => <>{renderDate(rowData.transactionDate)}</>\n                        },\n                        {\n                            title: 'Status',\n                            render: rowData => <>{rowData.status == true ? ('Completed') : ('Cancelled')}</>\n                        },\n                        {\n                            title: 'Price',\n                            render: rowData => <>{rowData.amount}</>\n                        },\n                    ]}\n                    data={earnings}\n                    title=\"earnings\"\n                    isLoading={tableDataLoading}\n                    options={{\n                        sorting: true,\n                        exportButton: true,\n                        toolbar: true,\n                        showTitle: false,\n                        search: false,\n                        paging:false\n                    }}\n                    icons={tableIcons}\n                /> */}\n            </div>\n            <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                <TablePagination\n\n                    rowsPerPageOptions={[1, 2, 5, 10, 25]}\n                    colSpan={3}\n                    count={totalPages * rowLimit}\n                    rowsPerPage={rowLimit}\n                    page={page - 1}\n                    SelectProps={{\n                        inputProps: {\n                            'aria-label': 'rows per page',\n                        },\n                        native: true,\n                    }}\n                    onPageChange={onPageChange}\n                    onRowsPerPageChange={onRowPerChange}\n                // ActionsComponent={TablePaginationActions}\n                />\n            </div>\n            {/* </div> */}\n\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setFilterModal(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Transaction Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Amount of Transaction</label>\n                                    <h5>$ {minValue} - {maxValue}</h5>\n                                    {/* <MultiSlider min={0} max={30000} set_maxValue={set_maxValue} set_minValue={set_minValue}/> */}\n                                    <Slider\n                                        getAriaLabel={() => 'Amount of Transaction'}\n                                        value={sliderValue}\n                                        onChange={handleChange}\n                                        valueLabelDisplay=\"auto\"\n                                    // getAriaValueText={valuetext}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option>Status</option>\n                                        <option value={true}>Completed</option>\n                                        <option value={false}>Cancelled</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button className=\"btn btn-outline-secondary px-5\"\n                                // onClick={()=>resetFilterData()}\n                                onClick={() => resetFilterData()}\n                            >Reset </Button>\n                            &emsp;\n                            {filterLoader ? (\n                                <Button className=\"btn btn-primary px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\n                                    onClick={() => { applyFilters() }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}