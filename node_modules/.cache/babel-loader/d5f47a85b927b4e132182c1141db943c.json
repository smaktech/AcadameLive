{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\components\\\\CopyClipboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // @mui\n\nimport { Tooltip, TextField, IconButton, InputAdornment } from '@mui/material'; //\n\nimport Iconify from './Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCopyClipboard.propTypes = {\n  value: PropTypes.string\n};\nexport default function CopyClipboard(_ref) {\n  _s();\n\n  let {\n    value,\n    ...other\n  } = _ref;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [state, setState] = useState({\n    value,\n    copied: false\n  });\n\n  const handleChange = event => {\n    setState({\n      value: event.target.value,\n      copied: false\n    });\n  };\n\n  const onCopy = () => {\n    setState({ ...state,\n      copied: true\n    });\n\n    if (state.value) {\n      enqueueSnackbar('Copied', {\n        variant: 'success'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    value: state.value,\n    onChange: handleChange,\n    InputProps: {\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: state.value,\n          onCopy: onCopy,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Copy\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(Iconify, {\n                icon: 'eva:copy-fill',\n                width: 24,\n                height: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CopyClipboard, \"dyunR4VS0larGGJfSR2DuE75cNI=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = CopyClipboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CopyClipboard\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/components/CopyClipboard.js"],"names":["useState","PropTypes","useSnackbar","CopyToClipboard","Tooltip","TextField","IconButton","InputAdornment","Iconify","CopyClipboard","propTypes","value","string","other","enqueueSnackbar","state","setState","copied","handleChange","event","target","onCopy","variant","endAdornment"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC,C,CACA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,EAAyCC,cAAzC,QAA+D,eAA/D,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAEV,SAAS,CAACW;AADO,CAA1B;AAIA,eAAe,SAASH,aAAT,OAA4C;AAAA;;AAAA,MAArB;AAAEE,IAAAA,KAAF;AAAS,OAAGE;AAAZ,GAAqB;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAsBZ,WAAW,EAAvC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC;AACjCW,IAAAA,KADiC;AAEjCM,IAAAA,MAAM,EAAE;AAFyB,GAAD,CAAlC;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,KAAK,EAAEQ,KAAK,CAACC,MAAN,CAAaT,KAAtB;AAA6BM,MAAAA,MAAM,EAAE;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACnBL,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,MAAAA,MAAM,EAAE;AAApB,KAAD,CAAR;;AACA,QAAIF,KAAK,CAACJ,KAAV,EAAiB;AACfG,MAAAA,eAAe,CAAC,QAAD,EAAW;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAX,CAAf;AACD;AACF,GALD;;AAOA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAEP,KAAK,CAACJ,KAFf;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,UAAU,EAAE;AACVK,MAAAA,YAAY,eACV,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAER,KAAK,CAACJ,KAA7B;AAAoC,UAAA,MAAM,EAAEU,MAA5C;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,MAAf;AAAA,mCACE,QAAC,UAAD;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAE,eAAf;AAAgC,gBAAA,KAAK,EAAE,EAAvC;AAA2C,gBAAA,MAAM,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ,KAJd;AAAA,OAiBMR;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvCuBJ,a;UACMP,W;;;KADNO,a","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n// @mui\nimport { Tooltip, TextField, IconButton, InputAdornment } from '@mui/material';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nCopyClipboard.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default function CopyClipboard({ value, ...other }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const [state, setState] = useState({\n    value,\n    copied: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ value: event.target.value, copied: false });\n  };\n\n  const onCopy = () => {\n    setState({ ...state, copied: true });\n    if (state.value) {\n      enqueueSnackbar('Copied', { variant: 'success' });\n    }\n  };\n\n  return (\n    <TextField\n      fullWidth\n      value={state.value}\n      onChange={handleChange}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CopyToClipboard text={state.value} onCopy={onCopy}>\n              <Tooltip title=\"Copy\">\n                <IconButton>\n                  <Iconify icon={'eva:copy-fill'} width={24} height={24} />\n                </IconButton>\n              </Tooltip>\n            </CopyToClipboard>\n          </InputAdornment>\n        ),\n      }}\n      {...other}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}