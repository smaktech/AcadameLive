{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{range}from'd3-array';import{scaleQuantile}from'd3-scale';import MapGL,{Source,Layer}from'react-map-gl';import{useState,useEffect,useMemo,useCallback}from'react';// @mui\nimport{useTheme,alpha}from'@mui/material/styles';import{Box,Typography}from'@mui/material';// components\nimport{MapControlScale,MapControlGeolocate,MapControlNavigation,MapControlFullscreen}from'../../../components/map';//\nimport ControlPanel from'./ControlPanel';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function updatePercentiles(featureCollection,accessor){var features=featureCollection.features;var scale=scaleQuantile().domain(features.map(accessor)).range(range(9));return{type:'FeatureCollection',features:features.map(function(f){var value=accessor(f);var properties=_objectSpread(_objectSpread({},f.properties),{},{value:value,percentile:scale(value)});return _objectSpread(_objectSpread({},f),{},{properties:properties});})};}export default function MapGeojson(_ref){var other=Object.assign({},_ref);var theme=useTheme();var _useState=useState({latitude:40,longitude:-100,zoom:3,bearing:0,pitch:0}),_useState2=_slicedToArray(_useState,2),viewport=_useState2[0],setViewport=_useState2[1];var _useState3=useState(2010),_useState4=_slicedToArray(_useState3,2),year=_useState4[0],setYear=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),allData=_useState6[0],setAllData=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),hoverInfo=_useState8[0],setHoverInfo=_useState8[1];var dataLayer={id:'data',type:'fill',paint:{'fill-color':{property:'percentile',stops:[[0,theme.palette.primary.light],[1,theme.palette.primary.main],[2,theme.palette.info.light],[3,theme.palette.info.main],[4,theme.palette.warning.light],[5,theme.palette.warning.main],[6,theme.palette.error.light],[7,theme.palette.error.light],[8,theme.palette.primary.dark]]},'fill-opacity':0.72}};useEffect(function(){fetch('https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson').then(function(resp){return resp.json();}).then(function(json){return setAllData(json);});},[]);var onHover=useCallback(function(event){var features=event.features,_event$srcEvent=event.srcEvent,offsetX=_event$srcEvent.offsetX,offsetY=_event$srcEvent.offsetY;var hoveredFeature=features&&features[0];setHoverInfo(hoveredFeature?{feature:hoveredFeature,x:offsetX,y:offsetY}:null);},[]);var data=useMemo(function(){return allData&&updatePercentiles(allData,function(f){return f.properties.income[year];});},[allData,year]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MapGL,_objectSpread(_objectSpread(_objectSpread({},viewport),{},{onViewportChange:setViewport,interactiveLayerIds:['data'],onHover:onHover},other),{},{children:[/*#__PURE__*/_jsx(MapControlScale,{}),/*#__PURE__*/_jsx(MapControlNavigation,{}),/*#__PURE__*/_jsx(MapControlFullscreen,{}),/*#__PURE__*/_jsx(MapControlGeolocate,{}),/*#__PURE__*/_jsx(Source,{type:\"geojson\",data:data,children:/*#__PURE__*/_jsx(Layer,_objectSpread({},dataLayer))}),hoverInfo&&/*#__PURE__*/_jsxs(Box,{sx:{p:1,zIndex:99,borderRadius:1,position:'absolute',pointerEvents:'none',color:'common.white',backgroundColor:alpha(theme.palette.grey[900],0.8)},style:{left:hoverInfo.x,top:hoverInfo.y},children:[/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"State:\"}),\" \",hoverInfo.feature.properties.name]}),/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\" Median Household Income: \"}),hoverInfo.feature.properties.value]}),/*#__PURE__*/_jsxs(Typography,{component:\"div\",variant:\"caption\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Percentile:\"}),hoverInfo.feature.properties.percentile/8*100]})]})]})),/*#__PURE__*/_jsx(ControlPanel,{year:year,onChange:function onChange(event){return setYear(event.target.value);}})]});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/geojson/index.js"],"names":["range","scaleQuantile","MapGL","Source","Layer","useState","useEffect","useMemo","useCallback","useTheme","alpha","Box","Typography","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","updatePercentiles","featureCollection","accessor","features","scale","domain","map","type","f","value","properties","percentile","MapGeojson","other","theme","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","year","setYear","allData","setAllData","hoverInfo","setHoverInfo","dataLayer","id","paint","property","stops","palette","primary","light","main","info","warning","error","dark","fetch","then","resp","json","onHover","event","srcEvent","offsetX","offsetY","hoveredFeature","feature","x","y","data","income","p","zIndex","borderRadius","position","pointerEvents","color","backgroundColor","grey","left","top","name","target"],"mappings":"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","sourcesContent":["import { range } from 'd3-array';\nimport { scaleQuantile } from 'd3-scale';\nimport MapGL, { Source, Layer } from 'react-map-gl';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\n// @mui\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nfunction updatePercentiles(featureCollection, accessor) {\n  const { features } = featureCollection;\n  const scale = scaleQuantile().domain(features.map(accessor)).range(range(9));\n  return {\n    type: 'FeatureCollection',\n    features: features.map((f) => {\n      const value = accessor(f);\n      const properties = {\n        ...f.properties,\n        value,\n        percentile: scale(value),\n      };\n      return { ...f, properties };\n    }),\n  };\n}\n\nexport default function MapGeojson({ ...other }) {\n  const theme = useTheme();\n\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -100,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [year, setYear] = useState(2010);\n  const [allData, setAllData] = useState(null);\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  const dataLayer = {\n    id: 'data',\n    type: 'fill',\n    paint: {\n      'fill-color': {\n        property: 'percentile',\n        stops: [\n          [0, theme.palette.primary.light],\n          [1, theme.palette.primary.main],\n          [2, theme.palette.info.light],\n          [3, theme.palette.info.main],\n          [4, theme.palette.warning.light],\n          [5, theme.palette.warning.main],\n          [6, theme.palette.error.light],\n          [7, theme.palette.error.light],\n          [8, theme.palette.primary.dark],\n        ],\n      },\n      'fill-opacity': 0.72,\n    },\n  };\n\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/us-income.geojson')\n      .then((resp) => resp.json())\n      .then((json) => setAllData(json));\n  }, []);\n\n  const onHover = useCallback((event) => {\n    const {\n      features,\n      srcEvent: { offsetX, offsetY },\n    } = event;\n    const hoveredFeature = features && features[0];\n\n    setHoverInfo(\n      hoveredFeature\n        ? {\n            feature: hoveredFeature,\n            x: offsetX,\n            y: offsetY,\n          }\n        : null\n    );\n  }, []);\n\n  const data = useMemo(() => allData && updatePercentiles(allData, (f) => f.properties.income[year]), [allData, year]);\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} interactiveLayerIds={['data']} onHover={onHover} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        <Source type=\"geojson\" data={data}>\n          <Layer {...dataLayer} />\n        </Source>\n\n        {hoverInfo && (\n          <Box\n            sx={{\n              p: 1,\n              zIndex: 99,\n              borderRadius: 1,\n              position: 'absolute',\n              pointerEvents: 'none',\n              color: 'common.white',\n              backgroundColor: alpha(theme.palette.grey[900], 0.8),\n            }}\n            style={{ left: hoverInfo.x, top: hoverInfo.y }}\n          >\n            <Typography component=\"div\" variant=\"caption\">\n              <strong>State:</strong> {hoverInfo.feature.properties.name}\n            </Typography>\n            <Typography component=\"div\" variant=\"caption\">\n              <strong> Median Household Income: </strong>\n              {hoverInfo.feature.properties.value}\n            </Typography>\n            <Typography component=\"div\" variant=\"caption\">\n              <strong>Percentile:</strong>\n              {(hoverInfo.feature.properties.percentile / 8) * 100}\n            </Typography>\n          </Box>\n        )}\n      </MapGL>\n\n      <ControlPanel year={year} onChange={(event) => setYear(event.target.value)} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}