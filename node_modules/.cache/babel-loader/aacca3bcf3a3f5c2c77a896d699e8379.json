{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\courses\\\\AddEditCourse.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic';\nimport { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses';\nimport { getAllBoard } from '../../api/Boards/Boards';\nimport { getAllClasses } from '../../api/Classes/Classes';\nimport { getAllSubjects } from '../../api/Subject/Subject';\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic';\nimport { imageBaseUrl } from '../..'; // import Button from '@restart/ui/esm/Button'\n\nimport TopicSelector from './TopicSelector';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { useParams } from 'react-router-dom';\nimport { getAllSubBoard } from 'src/api/SubBoard/SubBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar className = '';\nvar boardName = '';\nvar subBoardName = '';\nvar subjectName = '';\nexport default function AddEditCourse(props) {\n  _s();\n\n  // const courseID = props.match.params.courseId;\n  // const courseStatus = props.match.params.courseStatus;\n  const {\n    courseID,\n    courseStatus\n  } = useParams(); // console.log(props)\n  // const subjectStatus = props.match.params.subjectStatus;\n\n  const [mode, setMode] = useState(courseID ? \"edit\" : \"add\"); //setting subjects data into a variable\n\n  const [course, setCourse] = useState({}); //setting course data into a variable\n\n  const [boardData, setBoardData] = useState([]); //setting course data into a variable\n\n  const [classesData, setClassesData] = useState([]); //setting course data into a variable\n\n  const [subjectData, setSubjectData] = useState([]); //setting course data into a variable\n\n  const topicData = useRef([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add course button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the course name user want to add\n\n  const [name, setName] = useState(); //sets topic description user want to add\n\n  const [description, setDescription] = useState(); //sets board user want to add\n\n  const [board, setBoard] = useState(); //sets classes user want to add\n\n  const [classes, setClasses] = useState(); //sets subject user want to add\n\n  const [subject, setSubject] = useState(); //sets topic  user want to add\n\n  const [topic, setTopic] = useState([]);\n  const [chooseTopic, setChooseTopic] = useState([]);\n  const [newTopic, setNewTopic] = useState(1); // console.log(chooseTopic)\n\n  const [subBoardsData, setSubBoardsData] = useState([]);\n  console.log(subBoardsData);\n  const [selectedSubBoard, setSelectedSubBoard] = useState(); //sets course picture user want to add\n\n  const [coursePicture, setCoursePicture] = useState(); //sets course picture preview user want to add\n\n  const [picturePreview, setPicturePreview] = useState(null); //referance variable for video file choose\n\n  let chooseCoursePictureRef = useRef();\n  let chooseTopicRef = useRef(); // sets varialbe for video status\n\n  const [videoStatus, setVideoStatus] = useState(false); //shows the error when users try to add subject without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(100);\n  const [classState, setClassState] = useState('');\n  const [boardState, setBoardState] = useState('');\n  const [subBoardState, setSubBoardState] = useState('');\n  const [subjectState, setSubjectState] = useState('');\n  const [courseImage, setCourseImage] = useState(null);\n  useEffect(async () => {\n    if (board) {\n      const response = await getAllSubBoard(board, 1, 1000);\n\n      if (response.status) {\n        setSubBoardsData(response.results.data);\n      }\n    }\n  }, [board]);\n  useEffect(() => {\n    setMode(courseID ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getCourseById(courseID).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        var _res$course, _res$course$boardID, _res$course2, _res$course2$subBoard;\n\n        //setting the fetched Course by id into state variable\n        setCourse(res.course);\n        setName(res.course.name);\n        setDescription(res.course.description);\n        setBoard(res === null || res === void 0 ? void 0 : (_res$course = res.course) === null || _res$course === void 0 ? void 0 : (_res$course$boardID = _res$course.boardID) === null || _res$course$boardID === void 0 ? void 0 : _res$course$boardID._id);\n        setSelectedSubBoard(res === null || res === void 0 ? void 0 : (_res$course2 = res.course) === null || _res$course2 === void 0 ? void 0 : (_res$course2$subBoard = _res$course2.subBoardID) === null || _res$course2$subBoard === void 0 ? void 0 : _res$course2$subBoard._id);\n        setClasses(res.course.classesID._id);\n        setSubject(res.course.subjectID._id);\n        setTopic(res.course.topicIDs);\n        setCoursePicture(res.course.coursePicture);\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [courseID]);\n  useEffect(() => {\n    // fetching all boards\n    getAllBoard(page, limit).then(res => {\n      console.log('Boards', res);\n\n      if (res.status) {\n        //setting the fetched board into state variable\n        setBoardData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all topics\n\n    getAllTopics(page, limit).then(res => {\n      console.log('Topics', res);\n\n      if (res.status) {\n        //setting the fetched topic into state variable\n        topicData.current = res.results.data;\n        chooseTopicHandler();\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all classes\n\n    getAllClasses(page, limit).then(res => {\n      console.log('Classes', res);\n\n      if (res.status) {\n        //setting the fetched classes into state variable\n        setClassesData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    }); // fetching all subjects\n\n    getAllSubjects(page, limit).then(res => {\n      console.log('Subjects', res);\n\n      if (res.status) {\n        //setting the fetched Subject into state variable\n        setSubjectData(res.results.data);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); //edit the details  of the existing Course\n\n  function editCourseDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (courseID != '') {\n      editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus, courseImage).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Subject details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill all the Course details');\n    }\n  } //adds new Course \n\n\n  function addNewCourse() {\n    className = '';\n    boardName = '';\n    subBoardName = '';\n    subjectName = '';\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false); // console.log(name, board, classes, subject, topic, description)\n\n    console.log(name, \" \", board, \" \", classes, \" \", subject, \" \", description, \"\", courseImage);\n\n    if (name && board && classes && subject && description && courseImage != '') {\n      createCourse(name, board, selectedSubBoard, classes, subject, description, 'active', courseImage).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setAddLoader(false);\n          setModalLine1('New Course Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the Course details');\n    }\n  } // // on change Picture handler\n  // const onChangePictureHandler = (e) => {\n  //     var url = URL.createObjectURL(e.target.files[0]);\n  //     console.log(e.target.files[0])\n  //     setPicturePreview(url)\n  //     setCoursePicture(e.target.files[0])\n  // }\n  // function to reset \n\n\n  const reSetForm = () => {\n    setName(null);\n    setDescription(null);\n    setBoard(null);\n    setClasses(null);\n    setSubject(null);\n    setTopic(null);\n    setSelectedSubBoard(null);\n    setCoursePicture(null);\n  }; // function for choose topic\n\n\n  const actionForChooseTopic = (e, index) => {\n    // setTopic(e.target.value)\n    let newDAta = e.target.value;\n    let all = [...topic];\n    all[index] = newDAta;\n    setTopic(all);\n    console.log(all);\n  }; // function to add new topic\n\n\n  const chooseTopicHandler = () => {\n    let all = [...topic];\n    all.push(\"-1\");\n    setTopic(all);\n  }; //function to delete the selected topic from state array\n\n\n  function deleteTopic(index) {\n    //removing selected topic from state array \n    const updatedTopic = [...topic];\n    updatedTopic.splice(index, 1);\n    setTopic(updatedTopic);\n    console.log(\"working\");\n  }\n\n  console.log(className);\n\n  const classSeparator = e => {\n    setClassState(e.target.value);\n    const classId = e.target.value.split('*')[0];\n    setClasses(classId);\n    className = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subjectName);\n  };\n\n  const boardSeparator = e => {\n    setBoardState(e.target.value);\n    const boardId = e.target.value.split('*')[0];\n    setBoard(boardId);\n    boardName = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subjectName);\n  };\n\n  const subBoardSeparator = e => {\n    setSubBoardState(e.target.value);\n    const subBoardId = e.target.value.split('*')[0];\n    setSelectedSubBoard(subBoardId);\n    subBoardName = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subBoardName);\n  };\n\n  const subjectSeparator = e => {\n    setSubjectState(e.target.value);\n    const subjectId = e.target.value.split('*')[0];\n    setSubject(subjectId);\n    subjectName = e.target.value.split('*')[1];\n    setName(className + ' ' + boardName + ' ' + subBoardName + ' ' + subjectName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Courses Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"pageHeaderCard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"   text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-6 col-sm-6 col-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      required: true,\n                      value: name,\n                      type: \"text\",\n                      onChange: e => setName(e.target.value),\n                      placeholder: \"Enter Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Select Qualification\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: classState,\n                      onChange: classSeparator,\n                      \"aria-label\": \"Default select example\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 53\n                      }, this), classesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: `${item._id}*${item.name}`,\n                        children: item.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 57\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Select Board\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: boardState,\n                      onChange: boardSeparator,\n                      \"aria-label\": \"Default select example\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 53\n                      }, this), boardData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: `${item._id}*${item.name}`,\n                        children: item.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 57\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 45\n                  }, this), subBoardsData.length ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Select Sub Board\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: subBoardState,\n                      onChange: subBoardSeparator,\n                      \"aria-label\": \"Default select example\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 57\n                      }, this), subBoardsData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: `${item._id}*${item.name}`,\n                        children: item.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 61\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 49\n                  }, this) : null, /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlInput1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Select Subject\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: subjectState,\n                      onChange: subjectSeparator,\n                      \"aria-label\": \"Default select example\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 53\n                      }, this), subjectData.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: `${item._id}*${item.name}`,\n                        children: item.name\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 57\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: description,\n                      placeholder: \"Enter Course Description\",\n                      type: \"text\",\n                      onChange: e => setDescription(e.target.value),\n                      as: \"textarea\",\n                      rows: 3\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    controlId: \"exampleForm.ControlTextarea1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Choose Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"file\",\n                      placeholder: \"choose Sub Topic Exam Zip\",\n                      onChange: e => setCourseImage(e.target.files[0])\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate('/dashboard/courses'),\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                className: \"py-2 px-6 me-3\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"py-2 px-6 me-3\",\n                onClick: () => {\n                  editCourseDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"py-2 px-6 me-3\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"py-2 px-6 me-3\",\n              onClick: () => addNewCourse(),\n              children: \"Add Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => {\n        setModalVisible(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            style: {\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm(), navigate('/dashboard/courses/addCourse'))\n                }, void 0, false);\n              },\n              children: \"Add New Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 29\n            }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              style: {\n                marginRight: 10,\n                marginTop: 10\n              },\n              onClick: () => navigate('/dashboard/courses'),\n              children: \"Back To Courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditCourse, \"sPVN0vYTyJmJLPzB1ZbfX6Op7VI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditCourse\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/courses/AddEditCourse.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","Row","Col","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","createTopic","editTopic","getTopicById","createCourse","editCourse","getCourseById","getAllBoard","getAllClasses","getAllSubjects","getAllTopics","getTopicByFilter","imageBaseUrl","TopicSelector","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","useParams","getAllSubBoard","className","boardName","subBoardName","subjectName","AddEditCourse","props","courseID","courseStatus","mode","setMode","course","setCourse","boardData","setBoardData","classesData","setClassesData","subjectData","setSubjectData","topicData","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","name","setName","description","setDescription","board","setBoard","classes","setClasses","subject","setSubject","topic","setTopic","chooseTopic","setChooseTopic","newTopic","setNewTopic","subBoardsData","setSubBoardsData","console","log","selectedSubBoard","setSelectedSubBoard","coursePicture","setCoursePicture","picturePreview","setPicturePreview","chooseCoursePictureRef","chooseTopicRef","videoStatus","setVideoStatus","errorMessage","setErrorMessage","error","showError","page","setPage","limit","setLimit","classState","setClassState","boardState","setBoardState","subBoardState","setSubBoardState","subjectState","setSubjectState","courseImage","setCourseImage","response","status","results","data","then","res","boardID","_id","subBoardID","classesID","subjectID","topicIDs","catch","err","current","chooseTopicHandler","editCourseDetails","addNewCourse","reSetForm","actionForChooseTopic","e","index","newDAta","target","value","all","push","deleteTopic","updatedTopic","splice","classSeparator","classId","split","boardSeparator","boardId","subBoardSeparator","subBoardId","subjectSeparator","subjectId","display","height","justifyContent","alignItems","margin","map","item","length","files","flexDirection","marginRight","marginTop"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form, Row, Col } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { createTopic, editTopic, getTopicById } from '../../api/Topic/Topic'\nimport { createCourse, editCourse, getCourseById } from '../../api/Courses/Courses'\nimport { getAllBoard } from '../../api/Boards/Boards'\nimport { getAllClasses } from '../../api/Classes/Classes'\nimport { getAllSubjects } from '../../api/Subject/Subject'\nimport { getAllTopics, getTopicByFilter } from '../../api/Topic/Topic'\nimport { imageBaseUrl } from '../..'\n// import Button from '@restart/ui/esm/Button'\nimport TopicSelector from './TopicSelector'\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\nimport { useParams } from 'react-router-dom'\nimport { getAllSubBoard } from 'src/api/SubBoard/SubBoard'\n\nvar className = '';\nvar boardName = '';\nvar subBoardName = '';\nvar subjectName = '';\n\nexport default function AddEditCourse(props) {\n\n    // const courseID = props.match.params.courseId;\n    // const courseStatus = props.match.params.courseStatus;\n    const { courseID, courseStatus } = useParams()\n    // console.log(props)\n    // const subjectStatus = props.match.params.subjectStatus;\n    const [mode, setMode] = useState(courseID ? \"edit\" : \"add\")\n\n    //setting subjects data into a variable\n    const [course, setCourse] = useState({});\n    //setting course data into a variable\n    const [boardData, setBoardData] = useState([]);\n\n    //setting course data into a variable\n    const [classesData, setClassesData] = useState([]);\n\n    //setting course data into a variable\n    const [subjectData, setSubjectData] = useState([]);\n\n    //setting course data into a variable\n    const topicData = useRef([]);\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add course button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the course name user want to add\n    const [name, setName] = useState();\n\n    //sets topic description user want to add\n    const [description, setDescription] = useState()\n\n    //sets board user want to add\n    const [board, setBoard] = useState()\n\n    //sets classes user want to add\n    const [classes, setClasses] = useState()\n\n    //sets subject user want to add\n    const [subject, setSubject] = useState()\n\n    //sets topic  user want to add\n    const [topic, setTopic] = useState([])\n    const [chooseTopic, setChooseTopic] = useState([])\n    const [newTopic, setNewTopic] = useState(1)\n    // console.log(chooseTopic)\n    const [subBoardsData, setSubBoardsData] = useState([])\n    console.log(subBoardsData)\n    const [selectedSubBoard, setSelectedSubBoard] = useState()\n    //sets course picture user want to add\n\n    const [coursePicture, setCoursePicture] = useState()\n    //sets course picture preview user want to add\n    const [picturePreview, setPicturePreview] = useState(null);\n\n    //referance variable for video file choose\n    let chooseCoursePictureRef = useRef()\n    let chooseTopicRef = useRef()\n\n    // sets varialbe for video status\n    const [videoStatus, setVideoStatus] = useState(false)\n\n    //shows the error when users try to add subject without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [page, setPage] = useState(1);\n\n    const [limit, setLimit] = useState(100);\n    const [classState, setClassState] = useState('')\n    const [boardState, setBoardState] = useState('')\n    const [subBoardState, setSubBoardState] = useState('')\n    const [subjectState, setSubjectState] = useState('')\n\n    const [courseImage, setCourseImage] = useState(null);\n    useEffect(async () => {\n        if (board) {\n            const response = await getAllSubBoard(board, 1, 1000)\n            if (response.status) {\n                setSubBoardsData(response.results.data);\n            }\n        }\n    }, [board])\n\n    useEffect(() => {\n        setMode(courseID ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getCourseById(courseID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Course by id into state variable\n                setCourse(res.course);\n                setName(res.course.name)\n                setDescription(res.course.description)\n                setBoard(res?.course?.boardID?._id)\n                setSelectedSubBoard(res?.course?.subBoardID?._id)\n                setClasses(res.course.classesID._id)\n                setSubject(res.course.subjectID._id)\n                setTopic(res.course.topicIDs)\n                setCoursePicture(res.course.coursePicture)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [courseID])\n\n\n    useEffect(() => {\n        // fetching all boards\n        getAllBoard(page, limit).then((res) => {\n            console.log('Boards', res);\n            if (res.status) {\n                //setting the fetched board into state variable\n                setBoardData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        // fetching all topics\n        getAllTopics(page, limit).then((res) => {\n            console.log('Topics', res);\n            if (res.status) {\n                //setting the fetched topic into state variable\n                topicData.current = res.results.data;\n\n                chooseTopicHandler()\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n\n        // fetching all classes\n        getAllClasses(page, limit).then((res) => {\n            console.log('Classes', res);\n            if (res.status) {\n                //setting the fetched classes into state variable\n                setClassesData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n\n        // fetching all subjects\n        getAllSubjects(page, limit).then((res) => {\n            console.log('Subjects', res);\n            if (res.status) {\n                //setting the fetched Subject into state variable\n                setSubjectData(res.results.data);\n            }\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [])\n\n\n\n\n\n\n\n\n    //edit the details  of the existing Course\n    function editCourseDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (courseID != '') {\n\n            editCourse(courseID, name, board, selectedSubBoard, classes, subject, description, courseStatus,courseImage)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Subject details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill all the Course details');\n        }\n\n    }\n\n    //adds new Course \n    function addNewCourse() {\n        className = '';\n        boardName = '';\n        subBoardName = '';\n        subjectName = '';\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        // console.log(name, board, classes, subject, topic, description)\n        console.log(name, \" \", board, \" \", classes, \" \", subject, \" \", description, \"\", courseImage)\n        if (name && board && classes && subject && description && courseImage != '') {\n            createCourse(name, board, selectedSubBoard, classes, subject, description, 'active', courseImage)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Course Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the Course details');\n        }\n    }\n\n    // // on change Picture handler\n    // const onChangePictureHandler = (e) => {\n    //     var url = URL.createObjectURL(e.target.files[0]);\n    //     console.log(e.target.files[0])\n    //     setPicturePreview(url)\n    //     setCoursePicture(e.target.files[0])\n    // }\n\n    // function to reset \n    const reSetForm = () => {\n        setName(null)\n        setDescription(null)\n        setBoard(null)\n        setClasses(null)\n        setSubject(null)\n        setTopic(null)\n        setSelectedSubBoard(null)\n        setCoursePicture(null)\n    }\n\n    // function for choose topic\n    const actionForChooseTopic = (e, index) => {\n        // setTopic(e.target.value)\n        let newDAta = e.target.value\n        let all = [...topic];\n        all[index] = newDAta\n        setTopic(all)\n        console.log(all)\n    }\n\n    // function to add new topic\n    const chooseTopicHandler = () => {\n\n        let all = [...topic];\n        all.push(\"-1\")\n        setTopic(all)\n    }\n\n    //function to delete the selected topic from state array\n    function deleteTopic(index) {\n        //removing selected topic from state array \n        const updatedTopic = [...topic]\n        updatedTopic.splice(index, 1)\n        setTopic(updatedTopic);\n        console.log(\"working\")\n\n    }\n\n\n    console.log(className)\n    const classSeparator = (e) => {\n        setClassState(e.target.value)\n        const classId = e.target.value.split('*')[0]\n        setClasses(classId)\n        className = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subjectName)\n    }\n    const boardSeparator = (e) => {\n        setBoardState(e.target.value)\n        const boardId = e.target.value.split('*')[0]\n        setBoard(boardId);\n        boardName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subjectName)\n    }\n    const subBoardSeparator = (e) => {\n        setSubBoardState(e.target.value)\n        const subBoardId = e.target.value.split('*')[0]\n        setSelectedSubBoard(subBoardId);\n        subBoardName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subBoardName)\n    }\n    const subjectSeparator = (e) => {\n        setSubjectState(e.target.value)\n        const subjectId = e.target.value.split('*')[0]\n        setSubject(subjectId);\n        subjectName = e.target.value.split('*')[1];\n        setName(className + ' ' + boardName + ' ' + subBoardName + ' ' + subjectName)\n    }\n\n\n\n    return (\n        <>\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Courses Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent className=\"pageHeaderCard\">\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div class=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div class=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div class=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <Form>\n                                        <div className=\"col-lg-6 col-sm-6 col-12\">\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Course Name</Form.Label>\n                                                <Form.Control required value={name} type=\"text\" onChange={(e) => setName(e.target.value)} placeholder=\"Enter Course Name\" />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Qualification</Form.Label>\n                                                <Form.Select value={classState} onChange={classSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {classesData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Board</Form.Label>\n                                                <Form.Select value={boardState} onChange={boardSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {boardData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n                                            {subBoardsData.length ? (\n                                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                    <Form.Label>Select Sub Board</Form.Label>\n                                                    <Form.Select value={subBoardState} onChange={subBoardSeparator} aria-label=\"Default select example\">\n                                                        <option>Select</option>\n                                                        {subBoardsData.map((item, index) => (\n                                                            <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                        ))}\n                                                    </Form.Select>\n                                                </Form.Group>\n                                            ) : (null)}\n\n\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                <Form.Label>Select Subject</Form.Label>\n                                                <Form.Select value={subjectState} onChange={subjectSeparator} aria-label=\"Default select example\">\n                                                    <option>Select</option>\n                                                    {subjectData.map((item, index) => (\n                                                        <option key={index} value={`${item._id}*${item.name}`}>{item.name}</option>\n                                                    ))}\n                                                </Form.Select>\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Description</Form.Label>\n                                                <Form.Control value={description} placeholder=\"Enter Course Description\" type=\"text\" onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} />\n                                            </Form.Group>\n                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                <Form.Label>Choose Icon</Form.Label>\n                                                <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setCourseImage(e.target.files[0])} />\n                                            </Form.Group>\n\n                                        </div>\n                                    </Form>\n\n                                    {/* <div className=\"col-lg-12 col-sm-6 col-12\">\n                                        <Row>\n                                            <Col>\n                                                {topicData.current && topic&&topic.map((item, index) => (\n                                                    <>\n                                                        <TopicSelector topicData={topicData.current} topic={item} index={index} actionForChooseTopic={actionForChooseTopic} />\n                                                        {index > 0 ? (\n                                                            <div className='d-flex justify-content-end'>\n                                                                <Button  variant=\"outlined\" color=\"error\" onClick={()=>deleteTopic(index)} className=\"mb-4 float-right\" ><i class=\"fas fa-plus-circle\"></i> Remove</Button>\n                                                            </div>\n                                                        ) : ('')}\n                                                    </>\n                                                ))}  \n                                            </Col>\n                                            <Col>\n                                                <Button variant=\"outlined\" className='mt-4' onClick={() => chooseTopicHandler()}><i class=\"fas fa-plus-circle\"></i> Add New Topic</Button>\n                                            </Col>\n                                        </Row>\n                                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                            <Form.Label>Description</Form.Label>\n                                            <Form.Control value={description} placeholder=\"Enter Course Description\" type=\"text\" onChange={(e) => setDescription(e.target.value)} as=\"textarea\" rows={3} />\n                                        </Form.Group>\n\n                                    </div> */}\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {/* <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >Cancel</Button> */}\n                                        <Button onClick={() => navigate('/dashboard/courses')} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" className=\"py-2 px-6 me-3\" onClick={() => { editCourseDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\" className=\"py-2 px-6 me-3\" >\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"outlined\" className=\"py-2 px-6 me-3\"\n                                            onClick={() => addNewCourse()}\n                                        >Add Course</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )\n            }\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => { setModalVisible(false) }}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/courses/addCourse')}</>) }}\n                            >Add New Course</Button>\n                            &emsp;\n                            <Button variant=\"outlined\" style={{ marginRight: 10, marginTop: 10 }}\n                                onClick={() => navigate('/dashboard/courses')}\n                            >Back To Courses</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}