{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\overview\\\\mui\\\\Snackbar.js\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, IconButton } from '@mui/material';\nimport { Masonry } from '@mui/lab'; // routes\n\nimport { PATH_PAGE } from '../../../routes/paths'; // components\n\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs'; //\n\nimport { Block } from '../Block'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': {\n    mx: '8px !important'\n  }\n};\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: theme.spacing(11),\n    paddingBottom: theme.spacing(15)\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function SnackbarComponent() {\n  _s();\n\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const onSnackbarClose = color => {\n    enqueueSnackbar( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        sx: {\n          textTransform: 'capitalize'\n        },\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: [\"This is an \", color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), {\n      variant: color,\n      action: key => /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        color: \"inherit\",\n        onClick: () => closeSnackbar(key),\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:close-fill',\n          width: 24,\n          height: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    });\n  };\n\n  const onSnackbarAction = (color, anchor) => {\n    enqueueSnackbar(`This is an ${color}`, {\n      variant: color,\n      anchorOrigin: anchor,\n      action: key => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: color !== 'default' ? color : 'primary',\n          onClick: () => {\n            alert(`I belong to snackbar with key ${key}`);\n          },\n          children: \"Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"inherit\",\n          onClick: () => closeSnackbar(key),\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Components: Snackbar\",\n    children: /*#__PURE__*/_jsxDEV(RootStyle, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: theme => theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n            heading: \"Snackbar\",\n            links: [{\n              name: 'Components',\n              href: PATH_PAGE.components\n            }, {\n              name: 'Snackbar'\n            }],\n            moreLink: ['https://mui.com/components/snackbars', 'https://www.iamhosseindhv.com/notistack']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Masonry, {\n          columns: {\n            xs: 1,\n            md: 2\n          },\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Block, {\n            title: \"Simple\",\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"inherit\",\n              onClick: () => enqueueSnackbar('This is an default'),\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"info\",\n              onClick: () => enqueueSnackbar('This is an info', {\n                variant: 'info'\n              }),\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: () => enqueueSnackbar('This is an success', {\n                variant: 'success'\n              }),\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"warning\",\n              onClick: () => enqueueSnackbar('This is an warning', {\n                variant: 'warning'\n              }),\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => enqueueSnackbar('This is an error', {\n                variant: 'error'\n              }),\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Block, {\n            title: \"With Close\",\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"inherit\",\n              onClick: () => onSnackbarClose('default'),\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"info\",\n              onClick: () => onSnackbarClose('info'),\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: () => onSnackbarClose('success'),\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"warning\",\n              onClick: () => onSnackbarClose('warning'),\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => onSnackbarClose('error'),\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Block, {\n            title: \"With Action\",\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default'),\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"info\",\n              onClick: () => onSnackbarAction('info'),\n              children: \"Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              onClick: () => onSnackbarAction('success'),\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"warning\",\n              onClick: () => onSnackbarAction('warning'),\n              children: \"Warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => onSnackbarAction('error'),\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Block, {\n            title: \"anchorOrigin\",\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default', {\n                vertical: 'top',\n                horizontal: 'left'\n              }),\n              children: \"Top Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default', {\n                vertical: 'top',\n                horizontal: 'center'\n              }),\n              children: \"Top Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default'),\n              children: \"Top Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default', {\n                vertical: 'bottom',\n                horizontal: 'left'\n              }),\n              children: \"Bottom Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default', {\n                vertical: 'bottom',\n                horizontal: 'center'\n              }),\n              children: \"Bottom Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"inherit\",\n              onClick: () => onSnackbarAction('default', {\n                vertical: 'bottom',\n                horizontal: 'right'\n              }),\n              children: \"Bottom Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SnackbarComponent, \"cLw1NvfAu36DUMQTemMFXpkNHzk=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = SnackbarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarComponent\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/mui/Snackbar.js"],"names":["useSnackbar","styled","Box","Button","Container","Typography","IconButton","Masonry","PATH_PAGE","Page","Iconify","HeaderBreadcrumbs","Block","style","display","alignItems","justifyContent","flexWrap","mx","RootStyle","theme","paddingTop","spacing","paddingBottom","SnackbarComponent","enqueueSnackbar","closeSnackbar","onSnackbarClose","color","textTransform","variant","action","key","onSnackbarAction","anchor","anchorOrigin","alert","pt","pb","mb","bgcolor","palette","mode","name","href","components","xs","md","vertical","horizontal"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, IconButton } from '@mui/material';\nimport { Masonry } from '@mui/lab';\n// routes\nimport { PATH_PAGE } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport Iconify from '../../../components/Iconify';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\n//\nimport { Block } from '../Block';\n\n// ----------------------------------------------------------------------\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  '& > *': { mx: '8px !important' },\n};\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function SnackbarComponent() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSnackbarClose = (color) => {\n    enqueueSnackbar(\n      <div>\n        <Typography variant=\"subtitle2\" sx={{ textTransform: 'capitalize' }}>\n          {color}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          This is an {color}\n        </Typography>\n      </div>,\n      {\n        variant: color,\n        action: (key) => (\n          <IconButton size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\n            <Iconify icon={'eva:close-fill'} width={24} height={24} />\n          </IconButton>\n        ),\n      }\n    );\n  };\n\n  const onSnackbarAction = (color, anchor) => {\n    enqueueSnackbar(`This is an ${color}`, {\n      variant: color,\n      anchorOrigin: anchor,\n      action: (key) => (\n        <>\n          <Button\n            size=\"small\"\n            color={color !== 'default' ? color : 'primary'}\n            onClick={() => {\n              alert(`I belong to snackbar with key ${key}`);\n            }}\n          >\n            Alert\n          </Button>\n          <Button size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\n            Dismiss\n          </Button>\n        </>\n      ),\n    });\n  };\n\n  return (\n    <Page title=\"Components: Snackbar\">\n      <RootStyle>\n        <Box\n          sx={{\n            pt: 6,\n            pb: 1,\n            mb: 10,\n            bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n          }}\n        >\n          <Container>\n            <HeaderBreadcrumbs\n              heading=\"Snackbar\"\n              links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Snackbar' }]}\n              moreLink={['https://mui.com/components/snackbars', 'https://www.iamhosseindhv.com/notistack']}\n            />\n          </Container>\n        </Box>\n\n        <Container>\n          <Masonry columns={{ xs: 1, md: 2 }} spacing={3}>\n            <Block title=\"Simple\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => enqueueSnackbar('This is an default')}>\n                Default\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"info\"\n                onClick={() => enqueueSnackbar('This is an info', { variant: 'info' })}\n              >\n                Info\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() =>\n                  enqueueSnackbar('This is an success', {\n                    variant: 'success',\n                  })\n                }\n              >\n                Success\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"warning\"\n                onClick={() =>\n                  enqueueSnackbar('This is an warning', {\n                    variant: 'warning',\n                  })\n                }\n              >\n                Warning\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => enqueueSnackbar('This is an error', { variant: 'error' })}\n              >\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"With Close\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => onSnackbarClose('default')}>\n                Default\n              </Button>\n              <Button variant=\"contained\" color=\"info\" onClick={() => onSnackbarClose('info')}>\n                Info\n              </Button>\n              <Button variant=\"contained\" color=\"success\" onClick={() => onSnackbarClose('success')}>\n                Success\n              </Button>\n              <Button variant=\"contained\" color=\"warning\" onClick={() => onSnackbarClose('warning')}>\n                Warning\n              </Button>\n              <Button variant=\"contained\" color=\"error\" onClick={() => onSnackbarClose('error')}>\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"With Action\" sx={style}>\n              <Button variant=\"contained\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n                Default\n              </Button>\n              <Button variant=\"contained\" color=\"info\" onClick={() => onSnackbarAction('info')}>\n                Info\n              </Button>\n              <Button variant=\"contained\" color=\"success\" onClick={() => onSnackbarAction('success')}>\n                Success\n              </Button>\n              <Button variant=\"contained\" color=\"warning\" onClick={() => onSnackbarAction('warning')}>\n                Warning\n              </Button>\n              <Button variant=\"contained\" color=\"error\" onClick={() => onSnackbarAction('error')}>\n                Error\n              </Button>\n            </Block>\n\n            <Block title=\"anchorOrigin\" sx={style}>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'top',\n                    horizontal: 'left',\n                  })\n                }\n              >\n                Top Left\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'top',\n                    horizontal: 'center',\n                  })\n                }\n              >\n                Top Center\n              </Button>\n              <Button variant=\"text\" color=\"inherit\" onClick={() => onSnackbarAction('default')}>\n                Top Right\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                  })\n                }\n              >\n                Bottom Left\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  })\n                }\n              >\n                Bottom Center\n              </Button>\n              <Button\n                variant=\"text\"\n                color=\"inherit\"\n                onClick={() =>\n                  onSnackbarAction('default', {\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  })\n                }\n              >\n                Bottom Right\n              </Button>\n            </Block>\n          </Masonry>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}