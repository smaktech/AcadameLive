{"ast":null,"code":"/*\nLanguage: VHDL\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\nContributors: Daniel C.K. Kho <daniel.kho@tauhop.com>, Guillaume Savaton <guillaume.savaton@eseo.fr>\nDescription: VHDL is a hardware description language used in electronic design automation to describe digital and mixed-signal systems.\nWebsite: https://en.wikipedia.org/wiki/VHDL\n*/\nfunction vhdl(hljs) {\n  // Regular expression for VHDL numeric literals.\n  // Decimal literal:\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?'; // Based literal:\n\n  const BASED_INTEGER_RE = '\\\\w+';\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n  const KEYWORDS = [\"abs\", \"access\", \"after\", \"alias\", \"all\", \"and\", \"architecture\", \"array\", \"assert\", \"assume\", \"assume_guarantee\", \"attribute\", \"begin\", \"block\", \"body\", \"buffer\", \"bus\", \"case\", \"component\", \"configuration\", \"constant\", \"context\", \"cover\", \"disconnect\", \"downto\", \"default\", \"else\", \"elsif\", \"end\", \"entity\", \"exit\", \"fairness\", \"file\", \"for\", \"force\", \"function\", \"generate\", \"generic\", \"group\", \"guarded\", \"if\", \"impure\", \"in\", \"inertial\", \"inout\", \"is\", \"label\", \"library\", \"linkage\", \"literal\", \"loop\", \"map\", \"mod\", \"nand\", \"new\", \"next\", \"nor\", \"not\", \"null\", \"of\", \"on\", \"open\", \"or\", \"others\", \"out\", \"package\", \"parameter\", \"port\", \"postponed\", \"procedure\", \"process\", \"property\", \"protected\", \"pure\", \"range\", \"record\", \"register\", \"reject\", \"release\", \"rem\", \"report\", \"restrict\", \"restrict_guarantee\", \"return\", \"rol\", \"ror\", \"select\", \"sequence\", \"severity\", \"shared\", \"signal\", \"sla\", \"sll\", \"sra\", \"srl\", \"strong\", \"subtype\", \"then\", \"to\", \"transport\", \"type\", \"unaffected\", \"units\", \"until\", \"use\", \"variable\", \"view\", \"vmode\", \"vprop\", \"vunit\", \"wait\", \"when\", \"while\", \"with\", \"xnor\", \"xor\"];\n  const BUILT_INS = [\"boolean\", \"bit\", \"character\", \"integer\", \"time\", \"delay_length\", \"natural\", \"positive\", \"string\", \"bit_vector\", \"file_open_kind\", \"file_open_status\", \"std_logic\", \"std_logic_vector\", \"unsigned\", \"signed\", \"boolean_vector\", \"integer_vector\", \"std_ulogic\", \"std_ulogic_vector\", \"unresolved_unsigned\", \"u_unsigned\", \"unresolved_signed\", \"u_signed\", \"real_vector\", \"time_vector\"];\n  const LITERALS = [// severity_level\n  \"false\", \"true\", \"note\", \"warning\", \"error\", \"failure\", // textio\n  \"line\", \"text\", \"side\", \"width\"];\n  return {\n    name: 'VHDL',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    illegal: /\\{/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.\n    hljs.COMMENT('--', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'number',\n      begin: NUMBER_RE,\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      className: 'symbol',\n      begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n}\n\nmodule.exports = vhdl;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/vhdl.js"],"names":["vhdl","hljs","INTEGER_RE","EXPONENT_RE","DECIMAL_LITERAL_RE","BASED_INTEGER_RE","BASED_LITERAL_RE","NUMBER_RE","KEYWORDS","BUILT_INS","LITERALS","name","case_insensitive","keywords","keyword","built_in","literal","illegal","contains","C_BLOCK_COMMENT_MODE","COMMENT","QUOTE_STRING_MODE","className","begin","relevance","BACKSLASH_ESCAPE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: VHDL\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\nContributors: Daniel C.K. Kho <daniel.kho@tauhop.com>, Guillaume Savaton <guillaume.savaton@eseo.fr>\nDescription: VHDL is a hardware description language used in electronic design automation to describe digital and mixed-signal systems.\nWebsite: https://en.wikipedia.org/wiki/VHDL\n*/\n\nfunction vhdl(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  const BASED_INTEGER_RE = '\\\\w+';\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  const KEYWORDS = [\n    \"abs\",\n    \"access\",\n    \"after\",\n    \"alias\",\n    \"all\",\n    \"and\",\n    \"architecture\",\n    \"array\",\n    \"assert\",\n    \"assume\",\n    \"assume_guarantee\",\n    \"attribute\",\n    \"begin\",\n    \"block\",\n    \"body\",\n    \"buffer\",\n    \"bus\",\n    \"case\",\n    \"component\",\n    \"configuration\",\n    \"constant\",\n    \"context\",\n    \"cover\",\n    \"disconnect\",\n    \"downto\",\n    \"default\",\n    \"else\",\n    \"elsif\",\n    \"end\",\n    \"entity\",\n    \"exit\",\n    \"fairness\",\n    \"file\",\n    \"for\",\n    \"force\",\n    \"function\",\n    \"generate\",\n    \"generic\",\n    \"group\",\n    \"guarded\",\n    \"if\",\n    \"impure\",\n    \"in\",\n    \"inertial\",\n    \"inout\",\n    \"is\",\n    \"label\",\n    \"library\",\n    \"linkage\",\n    \"literal\",\n    \"loop\",\n    \"map\",\n    \"mod\",\n    \"nand\",\n    \"new\",\n    \"next\",\n    \"nor\",\n    \"not\",\n    \"null\",\n    \"of\",\n    \"on\",\n    \"open\",\n    \"or\",\n    \"others\",\n    \"out\",\n    \"package\",\n    \"parameter\",\n    \"port\",\n    \"postponed\",\n    \"procedure\",\n    \"process\",\n    \"property\",\n    \"protected\",\n    \"pure\",\n    \"range\",\n    \"record\",\n    \"register\",\n    \"reject\",\n    \"release\",\n    \"rem\",\n    \"report\",\n    \"restrict\",\n    \"restrict_guarantee\",\n    \"return\",\n    \"rol\",\n    \"ror\",\n    \"select\",\n    \"sequence\",\n    \"severity\",\n    \"shared\",\n    \"signal\",\n    \"sla\",\n    \"sll\",\n    \"sra\",\n    \"srl\",\n    \"strong\",\n    \"subtype\",\n    \"then\",\n    \"to\",\n    \"transport\",\n    \"type\",\n    \"unaffected\",\n    \"units\",\n    \"until\",\n    \"use\",\n    \"variable\",\n    \"view\",\n    \"vmode\",\n    \"vprop\",\n    \"vunit\",\n    \"wait\",\n    \"when\",\n    \"while\",\n    \"with\",\n    \"xnor\",\n    \"xor\"\n  ];\n  const BUILT_INS = [\n    \"boolean\",\n    \"bit\",\n    \"character\",\n    \"integer\",\n    \"time\",\n    \"delay_length\",\n    \"natural\",\n    \"positive\",\n    \"string\",\n    \"bit_vector\",\n    \"file_open_kind\",\n    \"file_open_status\",\n    \"std_logic\",\n    \"std_logic_vector\",\n    \"unsigned\",\n    \"signed\",\n    \"boolean_vector\",\n    \"integer_vector\",\n    \"std_ulogic\",\n    \"std_ulogic_vector\",\n    \"unresolved_unsigned\",\n    \"u_unsigned\",\n    \"unresolved_signed\",\n    \"u_signed\",\n    \"real_vector\",\n    \"time_vector\"\n  ];\n  const LITERALS = [\n    // severity_level\n    \"false\",\n    \"true\",\n    \"note\",\n    \"warning\",\n    \"error\",\n    \"failure\",\n    // textio\n    \"line\",\n    \"text\",\n    \"side\",\n    \"width\"\n  ];\n\n  return {\n    name: 'VHDL',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    illegal: /\\{/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE, // VHDL-2008 block commenting.\n      hljs.COMMENT('--', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        className: 'symbol',\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      }\n    ]\n  };\n}\n\nmodule.exports = vhdl;\n"]},"metadata":{},"sourceType":"script"}