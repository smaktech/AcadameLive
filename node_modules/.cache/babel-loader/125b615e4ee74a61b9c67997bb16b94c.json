{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\blog\\\\BlogNewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useCallback, useState } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik'; // @mui\n\nimport { LoadingButton } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport { Card, Grid, Chip, Stack, Button, Switch, TextField, Typography, Autocomplete, FormHelperText, FormControlLabel } from '@mui/material'; // components\n\nimport Editor from '../../../components/editor';\nimport { UploadSingleFile } from '../../../components/upload'; //\n\nimport BlogNewPostPreview from './BlogNewPostPreview'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TAGS_OPTION = ['Toy Story 3', 'Logan', 'Full Metal Jacket', 'Dangal', 'The Sting', '2001: A Space Odyssey', \"Singin' in the Rain\", 'Toy Story', 'Bicycle Thieves', 'The Kid', 'Inglourious Basterds', 'Snatch', '3 Idiots'];\nconst LabelStyle = styled(Typography)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.subtitle2,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1)\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function BlogNewPostForm() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [open, setOpen] = useState(false);\n\n  const handleOpenPreview = () => {\n    setOpen(true);\n  };\n\n  const handleClosePreview = () => {\n    setOpen(false);\n  };\n\n  const NewBlogSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    content: Yup.string().min(1000).required('Content is required'),\n    cover: Yup.mixed().required('Cover is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      content: '',\n      cover: null,\n      tags: ['Logan'],\n      publish: true,\n      comments: true,\n      metaTitle: '',\n      metaDescription: '',\n      metaKeywords: ['Logan']\n    },\n    validationSchema: NewBlogSchema,\n    onSubmit: async (values, _ref2) => {\n      let {\n        setSubmitting,\n        resetForm\n      } = _ref2;\n\n      try {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        resetForm();\n        handleClosePreview();\n        setSubmitting(false);\n        enqueueSnackbar('Post success', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n\n    if (file) {\n      setFieldValue('cover', { ...file,\n        preview: URL.createObjectURL(file)\n      });\n    }\n  }, [setFieldValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                p: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Post Title\",\n                  ...getFieldProps('title'),\n                  error: Boolean(touched.title && errors.title),\n                  helperText: touched.title && errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  minRows: 3,\n                  maxRows: 5,\n                  label: \"Description\",\n                  ...getFieldProps('description'),\n                  error: Boolean(touched.description && errors.description),\n                  helperText: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                    children: \"Content\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Editor, {\n                    id: \"post-content\",\n                    value: values.content,\n                    onChange: val => setFieldValue('content', val),\n                    error: Boolean(touched.content && errors.content)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this), touched.content && errors.content && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: true,\n                    sx: {\n                      px: 2,\n                      textTransform: 'capitalize'\n                    },\n                    children: touched.content && errors.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                    children: \"Cover\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(UploadSingleFile, {\n                    maxSize: 3145728,\n                    accept: \"image/*\",\n                    file: values.cover,\n                    onDrop: handleDrop,\n                    error: Boolean(touched.cover && errors.cover)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), touched.cover && errors.cover && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: true,\n                    sx: {\n                      px: 2\n                    },\n                    children: touched.cover && errors.cover\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                p: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps('publish'),\n                      checked: values.publish\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 32\n                    }, this),\n                    label: \"Publish\",\n                    labelPlacement: \"start\",\n                    sx: {\n                      mb: 1,\n                      mx: 0,\n                      width: '100%',\n                      justifyContent: 'space-between'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps('comments'),\n                      checked: values.comments\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 32\n                    }, this),\n                    label: \"Enable comments\",\n                    labelPlacement: \"start\",\n                    sx: {\n                      mx: 0,\n                      width: '100%',\n                      justifyContent: 'space-between'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  multiple: true,\n                  freeSolo: true,\n                  value: values.tags,\n                  onChange: (event, newValue) => {\n                    setFieldValue('tags', newValue);\n                  },\n                  options: TAGS_OPTION.map(option => option),\n                  renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                      index\n                    }),\n                    key: option,\n                    size: \"small\",\n                    label: option,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }\n                  })),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Tags\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Meta title\",\n                  ...getFieldProps('metaTitle')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  multiline: true,\n                  minRows: 3,\n                  maxRows: 5,\n                  label: \"Meta description\",\n                  ...getFieldProps('metaDescription')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  multiple: true,\n                  freeSolo: true,\n                  value: values.tags,\n                  onChange: (event, newValue) => {\n                    setFieldValue('metaKeywords', newValue);\n                  },\n                  options: TAGS_OPTION.map(option => option),\n                  renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                      index\n                    }),\n                    key: option,\n                    size: \"small\",\n                    label: option,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }\n                  })),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    label: \"Meta keywords\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              justifyContent: \"flex-end\",\n              sx: {\n                mt: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                type: \"button\",\n                color: \"inherit\",\n                variant: \"outlined\",\n                size: \"large\",\n                onClick: handleOpenPreview,\n                sx: {\n                  mr: 1.5\n                },\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                fullWidth: true,\n                type: \"submit\",\n                variant: \"contained\",\n                size: \"large\",\n                loading: isSubmitting,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogNewPostPreview, {\n      formik: formik,\n      openPreview: open,\n      onClosePreview: handleClosePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BlogNewPostForm, \"aL01c/+MynJzTGuHyCtn0ymq8n4=\", false, function () {\n  return [useSnackbar, useFormik];\n});\n\n_c = BlogNewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogNewPostForm\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/blog/BlogNewPostForm.js"],"names":["Yup","useSnackbar","useCallback","useState","Form","FormikProvider","useFormik","LoadingButton","styled","Card","Grid","Chip","Stack","Button","Switch","TextField","Typography","Autocomplete","FormHelperText","FormControlLabel","Editor","UploadSingleFile","BlogNewPostPreview","TAGS_OPTION","LabelStyle","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","BlogNewPostForm","enqueueSnackbar","open","setOpen","handleOpenPreview","handleClosePreview","NewBlogSchema","object","shape","title","string","required","description","content","min","cover","mixed","formik","initialValues","tags","publish","comments","metaTitle","metaDescription","metaKeywords","validationSchema","onSubmit","values","setSubmitting","resetForm","Promise","resolve","setTimeout","variant","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","acceptedFiles","file","preview","URL","createObjectURL","p","Boolean","val","px","textTransform","mb","mx","width","justifyContent","event","newValue","map","option","value","getTagProps","index","params","mt","mr"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,SAA/B,QAAgD,QAAhD,C,CACA;;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,UARF,EASEC,YATF,EAUEC,cAVF,EAWEC,gBAXF,QAYO,eAZP,C,CAaA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CAEA;;;;;AAEA,MAAMC,WAAW,GAAG,CAClB,aADkB,EAElB,OAFkB,EAGlB,mBAHkB,EAIlB,QAJkB,EAKlB,WALkB,EAMlB,uBANkB,EAOlB,qBAPkB,EAQlB,WARkB,EASlB,iBATkB,EAUlB,SAVkB,EAWlB,sBAXkB,EAYlB,QAZkB,EAalB,UAbkB,CAApB;AAgBA,MAAMC,UAAU,GAAGhB,MAAM,CAACQ,UAAD,CAAN,CAAmB;AAAA,MAAC;AAAES,IAAAA;AAAF,GAAD;AAAA,SAAgB,EACpD,GAAGA,KAAK,CAACC,UAAN,CAAiBC,SADgC;AAEpDC,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmBC,SAF0B;AAGpDC,IAAAA,YAAY,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHsC,GAAhB;AAAA,CAAnB,CAAnB,C,CAMA;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAsBlC,WAAW,EAAvC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMmC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAM;AAC/BF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,aAAa,GAAGxC,GAAG,CAACyC,MAAJ,GAAaC,KAAb,CAAmB;AACvCC,IAAAA,KAAK,EAAE3C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADgC;AAEvCC,IAAAA,WAAW,EAAE9C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CAF0B;AAGvCE,IAAAA,OAAO,EAAE/C,GAAG,CAAC4C,MAAJ,GAAaI,GAAb,CAAiB,IAAjB,EAAuBH,QAAvB,CAAgC,qBAAhC,CAH8B;AAIvCI,IAAAA,KAAK,EAAEjD,GAAG,CAACkD,KAAJ,GAAYL,QAAZ,CAAqB,mBAArB;AAJgC,GAAnB,CAAtB;AAOA,QAAMM,MAAM,GAAG7C,SAAS,CAAC;AACvB8C,IAAAA,aAAa,EAAE;AACbT,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,OAAO,EAAE,EAHI;AAIbE,MAAAA,KAAK,EAAE,IAJM;AAKbI,MAAAA,IAAI,EAAE,CAAC,OAAD,CALO;AAMbC,MAAAA,OAAO,EAAE,IANI;AAObC,MAAAA,QAAQ,EAAE,IAPG;AAQbC,MAAAA,SAAS,EAAE,EARE;AASbC,MAAAA,eAAe,EAAE,EATJ;AAUbC,MAAAA,YAAY,EAAE,CAAC,OAAD;AAVD,KADQ;AAavBC,IAAAA,gBAAgB,EAAEnB,aAbK;AAcvBoB,IAAAA,QAAQ,EAAE,OAAOC,MAAP,YAAgD;AAAA,UAAjC;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAiC;;AACxD,UAAI;AACF,cAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAnC,CAAN;AACAF,QAAAA,SAAS;AACTxB,QAAAA,kBAAkB;AAClBuB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,QAAAA,eAAe,CAAC,cAAD,EAAiB;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAjB,CAAf;AACD,OAND,CAME,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AAzBsB,GAAD,CAAxB;AA4BA,QAAM;AAAEQ,IAAAA,MAAF;AAAUT,IAAAA,MAAV;AAAkBU,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA,aAAvD;AAAsEC,IAAAA;AAAtE,MAAwFxB,MAA9F;AAEA,QAAMyB,UAAU,GAAG1E,WAAW,CAC3B2E,aAAD,IAAmB;AACjB,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;;AACA,QAAIC,IAAJ,EAAU;AACRJ,MAAAA,aAAa,CAAC,OAAD,EAAU,EACrB,GAAGI,IADkB;AAErBC,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,IAApB;AAFY,OAAV,CAAb;AAID;AACF,GAT2B,EAU5B,CAACJ,aAAD,CAV4B,CAA9B;AAaA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEvB,MAAvB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,YAAY,EAAC,KAA9B;AAAoC,QAAA,QAAQ,EAAEqB,YAA9C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AAAEU,gBAAAA,CAAC,EAAE;AAAL,eAAV;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE,CAAhB;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,KAAK,EAAC,YAFR;AAAA,qBAGMP,aAAa,CAAC,OAAD,CAHnB;AAIE,kBAAA,KAAK,EAAEQ,OAAO,CAACZ,OAAO,CAAC5B,KAAR,IAAiB2B,MAAM,CAAC3B,KAAzB,CAJhB;AAKE,kBAAA,UAAU,EAAE4B,OAAO,CAAC5B,KAAR,IAAiB2B,MAAM,CAAC3B;AALtC;AAAA;AAAA;AAAA;AAAA,wBADF,eASE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,SAAS,MAFX;AAGE,kBAAA,OAAO,EAAE,CAHX;AAIE,kBAAA,OAAO,EAAE,CAJX;AAKE,kBAAA,KAAK,EAAC,aALR;AAAA,qBAMMgC,aAAa,CAAC,aAAD,CANnB;AAOE,kBAAA,KAAK,EAAEQ,OAAO,CAACZ,OAAO,CAACzB,WAAR,IAAuBwB,MAAM,CAACxB,WAA/B,CAPhB;AAQE,kBAAA,UAAU,EAAEyB,OAAO,CAACzB,WAAR,IAAuBwB,MAAM,CAACxB;AAR5C;AAAA;AAAA;AAAA;AAAA,wBATF,eAoBE;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,MAAD;AACE,oBAAA,EAAE,EAAC,cADL;AAEE,oBAAA,KAAK,EAAEe,MAAM,CAACd,OAFhB;AAGE,oBAAA,QAAQ,EAAGqC,GAAD,IAASV,aAAa,CAAC,SAAD,EAAYU,GAAZ,CAHlC;AAIE,oBAAA,KAAK,EAAED,OAAO,CAACZ,OAAO,CAACxB,OAAR,IAAmBuB,MAAM,CAACvB,OAA3B;AAJhB;AAAA;AAAA;AAAA;AAAA,0BAFF,EAQGwB,OAAO,CAACxB,OAAR,IAAmBuB,MAAM,CAACvB,OAA1B,iBACC,QAAC,cAAD;AAAgB,oBAAA,KAAK,MAArB;AAAsB,oBAAA,EAAE,EAAE;AAAEsC,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,aAAa,EAAE;AAAxB,qBAA1B;AAAA,8BACGf,OAAO,CAACxB,OAAR,IAAmBuB,MAAM,CAACvB;AAD7B;AAAA;AAAA;AAAA;AAAA,0BATJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,eAmCE;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,gBAAD;AACE,oBAAA,OAAO,EAAE,OADX;AAEE,oBAAA,MAAM,EAAC,SAFT;AAGE,oBAAA,IAAI,EAAEc,MAAM,CAACZ,KAHf;AAIE,oBAAA,MAAM,EAAE2B,UAJV;AAKE,oBAAA,KAAK,EAAEO,OAAO,CAACZ,OAAO,CAACtB,KAAR,IAAiBqB,MAAM,CAACrB,KAAzB;AALhB;AAAA;AAAA;AAAA;AAAA,0BAFF,EASGsB,OAAO,CAACtB,KAAR,IAAiBqB,MAAM,CAACrB,KAAxB,iBACC,QAAC,cAAD;AAAgB,oBAAA,KAAK,MAArB;AAAsB,oBAAA,EAAE,EAAE;AAAEoC,sBAAAA,EAAE,EAAE;AAAN,qBAA1B;AAAA,8BACGd,OAAO,CAACtB,KAAR,IAAiBqB,MAAM,CAACrB;AAD3B;AAAA;AAAA;AAAA;AAAA,0BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAyDE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AAAEiC,gBAAAA,CAAC,EAAE;AAAL,eAAV;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE,CAAhB;AAAA,wCACE;AAAA,0CACE,QAAC,gBAAD;AACE,oBAAA,OAAO,eAAE,QAAC,MAAD,OAAYP,aAAa,CAAC,SAAD,CAAzB;AAAsC,sBAAA,OAAO,EAAEd,MAAM,CAACP;AAAtD;AAAA;AAAA;AAAA;AAAA,4BADX;AAEE,oBAAA,KAAK,EAAC,SAFR;AAGE,oBAAA,cAAc,EAAC,OAHjB;AAIE,oBAAA,EAAE,EAAE;AAAEiC,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,EAAE,EAAE,CAAb;AAAgBC,sBAAAA,KAAK,EAAE,MAAvB;AAA+BC,sBAAAA,cAAc,EAAE;AAA/C;AAJN;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE,QAAC,gBAAD;AACE,oBAAA,OAAO,eAAE,QAAC,MAAD,OAAYf,aAAa,CAAC,UAAD,CAAzB;AAAuC,sBAAA,OAAO,EAAEd,MAAM,CAACN;AAAvD;AAAA;AAAA;AAAA;AAAA,4BADX;AAEE,oBAAA,KAAK,EAAC,iBAFR;AAGE,oBAAA,cAAc,EAAC,OAHjB;AAIE,oBAAA,EAAE,EAAE;AAAEiC,sBAAAA,EAAE,EAAE,CAAN;AAASC,sBAAAA,KAAK,EAAE,MAAhB;AAAwBC,sBAAAA,cAAc,EAAE;AAAxC;AAJN;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAiBE,QAAC,YAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,QAAQ,MAFV;AAGE,kBAAA,KAAK,EAAE7B,MAAM,CAACR,IAHhB;AAIE,kBAAA,QAAQ,EAAE,CAACsC,KAAD,EAAQC,QAAR,KAAqB;AAC7BlB,oBAAAA,aAAa,CAAC,MAAD,EAASkB,QAAT,CAAb;AACD,mBANH;AAOE,kBAAA,OAAO,EAAErE,WAAW,CAACsE,GAAZ,CAAiBC,MAAD,IAAYA,MAA5B,CAPX;AAQE,kBAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,WAAR,KACVD,KAAK,CAACF,GAAN,CAAU,CAACC,MAAD,EAASG,KAAT,kBACR,eAAC,IAAD,OAAUD,WAAW,CAAC;AAAEC,sBAAAA;AAAF,qBAAD,CAArB;AAAkC,oBAAA,GAAG,EAAEH,MAAvC;AAA+C,oBAAA,IAAI,EAAC,OAApD;AAA4D,oBAAA,KAAK,EAAEA,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CATJ;AAaE,kBAAA,WAAW,EAAGI,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,oBAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAb3B;AAAA;AAAA;AAAA;AAAA,wBAjBF,eAiCE,QAAC,SAAD;AAAW,kBAAA,SAAS,MAApB;AAAqB,kBAAA,KAAK,EAAC,YAA3B;AAAA,qBAA4CvB,aAAa,CAAC,WAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,wBAjCF,eAmCE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,SAAS,MAFX;AAGE,kBAAA,OAAO,EAAE,CAHX;AAIE,kBAAA,OAAO,EAAE,CAJX;AAKE,kBAAA,KAAK,EAAC,kBALR;AAAA,qBAMMA,aAAa,CAAC,iBAAD;AANnB;AAAA;AAAA;AAAA;AAAA,wBAnCF,eA4CE,QAAC,YAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,QAAQ,MAFV;AAGE,kBAAA,KAAK,EAAEd,MAAM,CAACR,IAHhB;AAIE,kBAAA,QAAQ,EAAE,CAACsC,KAAD,EAAQC,QAAR,KAAqB;AAC7BlB,oBAAAA,aAAa,CAAC,cAAD,EAAiBkB,QAAjB,CAAb;AACD,mBANH;AAOE,kBAAA,OAAO,EAAErE,WAAW,CAACsE,GAAZ,CAAiBC,MAAD,IAAYA,MAA5B,CAPX;AAQE,kBAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,WAAR,KACVD,KAAK,CAACF,GAAN,CAAU,CAACC,MAAD,EAASG,KAAT,kBACR,eAAC,IAAD,OAAUD,WAAW,CAAC;AAAEC,sBAAAA;AAAF,qBAAD,CAArB;AAAkC,oBAAA,GAAG,EAAEH,MAAvC;AAA+C,oBAAA,IAAI,EAAC,OAApD;AAA4D,oBAAA,KAAK,EAAEA,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CATJ;AAaE,kBAAA,WAAW,EAAGI,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,oBAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAb3B;AAAA;AAAA;AAAA;AAAA,wBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAgEE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,KAAjB;AAAuB,cAAA,cAAc,EAAC,UAAtC;AAAiD,cAAA,EAAE,EAAE;AAAEC,gBAAAA,EAAE,EAAE;AAAN,eAArD;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,KAAK,EAAC,SAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,IAAI,EAAC,OALP;AAME,gBAAA,OAAO,EAAE7D,iBANX;AAOE,gBAAA,EAAE,EAAE;AAAE8D,kBAAAA,EAAE,EAAE;AAAN,iBAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE,QAAC,aAAD;AAAe,gBAAA,SAAS,MAAxB;AAAyB,gBAAA,IAAI,EAAC,QAA9B;AAAuC,gBAAA,OAAO,EAAC,WAA/C;AAA2D,gBAAA,IAAI,EAAC,OAAhE;AAAwE,gBAAA,OAAO,EAAE3B,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAiJE,QAAC,kBAAD;AAAoB,MAAA,MAAM,EAAEtB,MAA5B;AAAoC,MAAA,WAAW,EAAEf,IAAjD;AAAuD,MAAA,cAAc,EAAEG;AAAvE;AAAA;AAAA;AAAA;AAAA,YAjJF;AAAA,kBADF;AAqJD;;GAnNuBL,e;UACMjC,W,EAkBbK,S;;;KAnBO4B,e","sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useCallback, useState } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport {\n  Card,\n  Grid,\n  Chip,\n  Stack,\n  Button,\n  Switch,\n  TextField,\n  Typography,\n  Autocomplete,\n  FormHelperText,\n  FormControlLabel,\n} from '@mui/material';\n// components\nimport Editor from '../../../components/editor';\nimport { UploadSingleFile } from '../../../components/upload';\n//\nimport BlogNewPostPreview from './BlogNewPostPreview';\n\n// ----------------------------------------------------------------------\n\nconst TAGS_OPTION = [\n  'Toy Story 3',\n  'Logan',\n  'Full Metal Jacket',\n  'Dangal',\n  'The Sting',\n  '2001: A Space Odyssey',\n  \"Singin' in the Rain\",\n  'Toy Story',\n  'Bicycle Thieves',\n  'The Kid',\n  'Inglourious Basterds',\n  'Snatch',\n  '3 Idiots',\n];\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function BlogNewPostForm() {\n  const { enqueueSnackbar } = useSnackbar();\n  const [open, setOpen] = useState(false);\n\n  const handleOpenPreview = () => {\n    setOpen(true);\n  };\n\n  const handleClosePreview = () => {\n    setOpen(false);\n  };\n\n  const NewBlogSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    content: Yup.string().min(1000).required('Content is required'),\n    cover: Yup.mixed().required('Cover is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      content: '',\n      cover: null,\n      tags: ['Logan'],\n      publish: true,\n      comments: true,\n      metaTitle: '',\n      metaDescription: '',\n      metaKeywords: ['Logan'],\n    },\n    validationSchema: NewBlogSchema,\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\n      try {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        resetForm();\n        handleClosePreview();\n        setSubmitting(false);\n        enqueueSnackbar('Post success', { variant: 'success' });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('cover', {\n          ...file,\n          preview: URL.createObjectURL(file),\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <>\n      <FormikProvider value={formik}>\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8}>\n              <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <TextField\n                    fullWidth\n                    label=\"Post Title\"\n                    {...getFieldProps('title')}\n                    error={Boolean(touched.title && errors.title)}\n                    helperText={touched.title && errors.title}\n                  />\n\n                  <TextField\n                    fullWidth\n                    multiline\n                    minRows={3}\n                    maxRows={5}\n                    label=\"Description\"\n                    {...getFieldProps('description')}\n                    error={Boolean(touched.description && errors.description)}\n                    helperText={touched.description && errors.description}\n                  />\n\n                  <div>\n                    <LabelStyle>Content</LabelStyle>\n                    <Editor\n                      id=\"post-content\"\n                      value={values.content}\n                      onChange={(val) => setFieldValue('content', val)}\n                      error={Boolean(touched.content && errors.content)}\n                    />\n                    {touched.content && errors.content && (\n                      <FormHelperText error sx={{ px: 2, textTransform: 'capitalize' }}>\n                        {touched.content && errors.content}\n                      </FormHelperText>\n                    )}\n                  </div>\n\n                  <div>\n                    <LabelStyle>Cover</LabelStyle>\n                    <UploadSingleFile\n                      maxSize={3145728}\n                      accept=\"image/*\"\n                      file={values.cover}\n                      onDrop={handleDrop}\n                      error={Boolean(touched.cover && errors.cover)}\n                    />\n                    {touched.cover && errors.cover && (\n                      <FormHelperText error sx={{ px: 2 }}>\n                        {touched.cover && errors.cover}\n                      </FormHelperText>\n                    )}\n                  </div>\n                </Stack>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n              <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <div>\n                    <FormControlLabel\n                      control={<Switch {...getFieldProps('publish')} checked={values.publish} />}\n                      label=\"Publish\"\n                      labelPlacement=\"start\"\n                      sx={{ mb: 1, mx: 0, width: '100%', justifyContent: 'space-between' }}\n                    />\n\n                    <FormControlLabel\n                      control={<Switch {...getFieldProps('comments')} checked={values.comments} />}\n                      label=\"Enable comments\"\n                      labelPlacement=\"start\"\n                      sx={{ mx: 0, width: '100%', justifyContent: 'space-between' }}\n                    />\n                  </div>\n\n                  <Autocomplete\n                    multiple\n                    freeSolo\n                    value={values.tags}\n                    onChange={(event, newValue) => {\n                      setFieldValue('tags', newValue);\n                    }}\n                    options={TAGS_OPTION.map((option) => option)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\n                      ))\n                    }\n                    renderInput={(params) => <TextField {...params} label=\"Tags\" />}\n                  />\n\n                  <TextField fullWidth label=\"Meta title\" {...getFieldProps('metaTitle')} />\n\n                  <TextField\n                    fullWidth\n                    multiline\n                    minRows={3}\n                    maxRows={5}\n                    label=\"Meta description\"\n                    {...getFieldProps('metaDescription')}\n                  />\n\n                  <Autocomplete\n                    multiple\n                    freeSolo\n                    value={values.tags}\n                    onChange={(event, newValue) => {\n                      setFieldValue('metaKeywords', newValue);\n                    }}\n                    options={TAGS_OPTION.map((option) => option)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\n                      ))\n                    }\n                    renderInput={(params) => <TextField {...params} label=\"Meta keywords\" />}\n                  />\n                </Stack>\n              </Card>\n\n              <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 3 }}>\n                <Button\n                  fullWidth\n                  type=\"button\"\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onClick={handleOpenPreview}\n                  sx={{ mr: 1.5 }}\n                >\n                  Preview\n                </Button>\n                <LoadingButton fullWidth type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                  Post\n                </LoadingButton>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Form>\n      </FormikProvider>\n\n      <BlogNewPostPreview formik={formik} openPreview={open} onClosePreview={handleClosePreview} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}