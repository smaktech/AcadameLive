{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{apiUrl}from'../../config';import{objToQueryString}from'../../config';//Fetch all boards data using offset and limit!\nfunction getAllBoard(_x,_x2){return _getAllBoard.apply(this,arguments);}//api to change the status of the user,icon\nfunction _getAllBoard(){_getAllBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(page,limit){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryString=objToQueryString({page:page,limit:limit});if(queryString==null)apiLink=apiUrl+'/board/filterBoard';else apiLink=apiUrl+'/board/filterBoard?'+queryString;_context.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context.sent;return _context.abrupt(\"return\",data);case 6:case\"end\":return _context.stop();}}},_callee);}));return _getAllBoard.apply(this,arguments);}function editBoards(_x3,_x4,_x5,_x6){return _editBoards.apply(this,arguments);}//api function for adding a Board \nfunction _editBoards(){_editBoards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(BoardId,name,status,icon){var formData,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// var details = {\n//   \"name\": name,\n//   \"status\": status\n// };\n// var formBody = [];\n// for (var property in details) {\n//   var encodedKey = encodeURIComponent(property);\n//   var encodedValue = encodeURIComponent(details[property]);\n//   formBody.push(encodedKey + \"=\" + encodedValue);\n// }\n// formBody = formBody.join(\"&\");\nformData=new FormData();formData.append('name',name);formData.append('status',status);formData.append('image',icon);_context2.next=6;return fetch(apiUrl+'/Board/editBoard/'+BoardId,{method:'PATCH',headers:{// Accept: 'application/json',\n// 'Content-Type': 'application/x-www-form-urlencoded',\n},body:formData}).then(function(res){return res.json();});case 6:data=_context2.sent;return _context2.abrupt(\"return\",data);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _editBoards.apply(this,arguments);}function createBoard(_x7,_x8,_x9){return _createBoard.apply(this,arguments);}//api to delete the user from the database\nfunction _createBoard(){_createBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name,status,icon){var formData,_iterator,_step,pair,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(name,status,icon);// var details = {\n//   \"name\": name,\n//   \"status\": status\n// };\n// var formBody = [];\n// for (var property in details) {\n//   var encodedKey = encodeURIComponent(property);\n//   var encodedValue = encodeURIComponent(details[property]);\n//   formBody.push(encodedKey + \"=\" + encodedValue);\n// }\n// formBody = formBody.join(\"&\");\n// let headers = new Headers();\n// headers.append('Access-Control-Allow-Origin', apiUrl);\n// headers.append('Access-Control-Allow-Credentials', 'true');\n// headers.append('GET', 'POST', 'OPTIONS');\nformData=new FormData();formData.append('name',name);formData.append('status',status);formData.append('image',icon);_iterator=_createForOfIteratorHelper(formData.entries());try{for(_iterator.s();!(_step=_iterator.n()).done;){pair=_step.value;console.log(pair[0]+', '+pair[1]);}}catch(err){_iterator.e(err);}finally{_iterator.f();}_context3.next=9;return fetch(apiUrl+'/board/createBoard',{method:'POST',// headers: {\n//   Accept: 'application/json',\n//   'Content-Type': 'application/x-www-form-urlencoded',\n// },\n// headers,\nbody:formData});case 9:data=_context3.sent;return _context3.abrupt(\"return\",data);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _createBoard.apply(this,arguments);}function deleteBoards(_x10){return _deleteBoards.apply(this,arguments);}//api to get the details of a particular user by sending the userId\nfunction _deleteBoards(){_deleteBoards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(boardID){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(apiUrl+'/Board/deleteBoardById/'+boardID,{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context4.sent;return _context4.abrupt(\"return\",data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _deleteBoards.apply(this,arguments);}function getBoardById(_x11){return _getBoardById.apply(this,arguments);}function _getBoardById(){_getBoardById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(boardID){var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(apiUrl+'/Board/getBoardById/'+boardID,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context5.sent;return _context5.abrupt(\"return\",data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _getBoardById.apply(this,arguments);}function getBoardByFilter(_x12,_x13,_x14,_x15){return _getBoardByFilter.apply(this,arguments);}function _getBoardByFilter(){_getBoardByFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(searchString,status,startDate,endDate){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:queryString=objToQueryString({searchString:searchString,status:status,startDate:startDate,endDate:endDate});if(queryString==null)apiLink=apiUrl+'/board/filterBoard';else apiLink=apiUrl+'/board/filterBoard?'+queryString;_context6.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context6.sent;return _context6.abrupt(\"return\",data);case 6:case\"end\":return _context6.stop();}}},_callee6);}));return _getBoardByFilter.apply(this,arguments);}export{getAllBoard,editBoards,deleteBoards,getBoardById,createBoard,getBoardByFilter};","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/Boards/Boards.js"],"names":["apiUrl","objToQueryString","getAllBoard","page","limit","queryString","apiLink","fetch","method","headers","Accept","then","res","json","data","editBoards","BoardId","name","status","icon","formData","FormData","append","body","createBoard","console","log","entries","pair","deleteBoards","boardID","getBoardById","getBoardByFilter","searchString","startDate","endDate"],"mappings":"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","sourcesContent":["import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n\n//Fetch all boards data using offset and limit!\nasync function getAllBoard(page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/board/filterBoard'\n  else\n    apiLink = apiUrl + '/board/filterBoard?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\n//api to change the status of the user,icon\nasync function editBoards(BoardId, name, status,icon) {\n\n  // var details = {\n  //   \"name\": name,\n  //   \"status\": status\n  // };\n\n  // var formBody = [];\n  // for (var property in details) {\n  //   var encodedKey = encodeURIComponent(property);\n  //   var encodedValue = encodeURIComponent(details[property]);\n  //   formBody.push(encodedKey + \"=\" + encodedValue);\n  // }\n  // formBody = formBody.join(\"&\");\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('status', status)\n  formData.append('image', icon)\n  const data = await fetch(apiUrl + '/Board/editBoard/' + BoardId, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData,\n  }).then((res) => res.json());\n  return data;\n\n}\n\n//api function for adding a Board \nasync function createBoard(name, status, icon) {\n\n  console.log(name, status, icon)\n  // var details = {\n  //   \"name\": name,\n  //   \"status\": status\n  // };\n\n  // var formBody = [];\n  // for (var property in details) {\n  //   var encodedKey = encodeURIComponent(property);\n  //   var encodedValue = encodeURIComponent(details[property]);\n  //   formBody.push(encodedKey + \"=\" + encodedValue);\n  // }\n  // formBody = formBody.join(\"&\");\n\n  // let headers = new Headers();\n  // headers.append('Access-Control-Allow-Origin', apiUrl);\n  // headers.append('Access-Control-Allow-Credentials', 'true');\n  // headers.append('GET', 'POST', 'OPTIONS');\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('status', status)\n  formData.append('image', icon)\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n  const data = await fetch(apiUrl + '/board/createBoard', {\n    method: 'POST',\n    // headers: {\n    //   Accept: 'application/json',\n    //   'Content-Type': 'application/x-www-form-urlencoded',\n    // },\n    // headers,\n    body: formData,\n  })\n  // .then((res) => res.json());\n  return data;\n}\n\n//api to delete the user from the database\nasync function deleteBoards(boardID) {\n  const data = await fetch(apiUrl + '/Board/deleteBoardById/' + boardID, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n//api to get the details of a particular user by sending the userId\nasync function getBoardById(boardID) {\n  const data = await fetch(apiUrl + '/Board/getBoardById/' + boardID, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nasync function getBoardByFilter(searchString, status, startDate, endDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    endDate: endDate,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/board/filterBoard'\n  else\n    apiLink = apiUrl + '/board/filterBoard?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nexport { getAllBoard, editBoards, deleteBoards, getBoardById, createBoard, getBoardByFilter }"]},"metadata":{},"sourceType":"module"}