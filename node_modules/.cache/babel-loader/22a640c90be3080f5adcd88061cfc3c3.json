{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\general\\\\booking\\\\BookingRoomAvailable.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts'; // @mui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardHeader, Stack, Box, Typography } from '@mui/material'; // utils\n\nimport { fNumber } from '../../../../utils/formatNumber'; //\n\nimport { BaseOptionChart } from '../../../../components/chart'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHART_DATA = [75];\nconst SOLD_OUT = 120;\nconst AVAILABLE = 66;\nexport default function BookingRoomAvailable() {\n  _s();\n\n  const theme = useTheme();\n  const chartOptions = merge(BaseOptionChart(), {\n    legend: {\n      show: false\n    },\n    grid: {\n      padding: {\n        top: -32,\n        bottom: -32\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        colorStops: [[{\n          offset: 0,\n          color: theme.palette.primary.light\n        }, {\n          offset: 100,\n          color: theme.palette.primary.main\n        }]]\n      }\n    },\n    plotOptions: {\n      radialBar: {\n        hollow: {\n          size: '64%'\n        },\n        dataLabels: {\n          name: {\n            offsetY: -16\n          },\n          value: {\n            offsetY: 8\n          },\n          total: {\n            label: 'Rooms',\n            formatter: () => fNumber(186)\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Room Available\",\n      sx: {\n        mb: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"radialBar\",\n      series: CHART_DATA,\n      options: chartOptions,\n      height: 310\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: {\n        p: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        label: \"Sold out\",\n        number: SOLD_OUT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        label: \"Available\",\n        number: AVAILABLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_s(BookingRoomAvailable, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = BookingRoomAvailable;\nLegend.propTypes = {\n  label: PropTypes.string,\n  number: PropTypes.number\n};\n\nfunction Legend(_ref) {\n  let {\n    label,\n    number\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 16,\n          height: 16,\n          bgcolor: 'grey.50016',\n          borderRadius: 0.75,\n          ...(label === 'Sold out' && {\n            bgcolor: 'primary.main'\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [number, \" Rooms\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Legend;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BookingRoomAvailable\");\n$RefreshReg$(_c2, \"Legend\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/general/booking/BookingRoomAvailable.js"],"names":["PropTypes","merge","ReactApexChart","useTheme","Card","CardHeader","Stack","Box","Typography","fNumber","BaseOptionChart","CHART_DATA","SOLD_OUT","AVAILABLE","BookingRoomAvailable","theme","chartOptions","legend","show","grid","padding","top","bottom","fill","type","gradient","colorStops","offset","color","palette","primary","light","main","plotOptions","radialBar","hollow","size","dataLabels","name","offsetY","value","total","label","formatter","mb","p","Legend","propTypes","string","number","width","height","bgcolor","borderRadius"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { merge } from 'lodash';\nimport ReactApexChart from 'react-apexcharts';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardHeader, Stack, Box, Typography } from '@mui/material';\n// utils\nimport { fNumber } from '../../../../utils/formatNumber';\n//\nimport { BaseOptionChart } from '../../../../components/chart';\n\n// ----------------------------------------------------------------------\n\nconst CHART_DATA = [75];\nconst SOLD_OUT = 120;\nconst AVAILABLE = 66;\n\nexport default function BookingRoomAvailable() {\n  const theme = useTheme();\n\n  const chartOptions = merge(BaseOptionChart(), {\n    legend: { show: false },\n    grid: {\n      padding: { top: -32, bottom: -32 },\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        colorStops: [\n          [\n            { offset: 0, color: theme.palette.primary.light },\n            { offset: 100, color: theme.palette.primary.main },\n          ],\n        ],\n      },\n    },\n    plotOptions: {\n      radialBar: {\n        hollow: { size: '64%' },\n        dataLabels: {\n          name: { offsetY: -16 },\n          value: { offsetY: 8 },\n          total: {\n            label: 'Rooms',\n            formatter: () => fNumber(186),\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <Card>\n      <CardHeader title=\"Room Available\" sx={{ mb: 8 }} />\n      <ReactApexChart type=\"radialBar\" series={CHART_DATA} options={chartOptions} height={310} />\n\n      <Stack spacing={2} sx={{ p: 5 }}>\n        <Legend label=\"Sold out\" number={SOLD_OUT} />\n        <Legend label=\"Available\" number={AVAILABLE} />\n      </Stack>\n    </Card>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLegend.propTypes = {\n  label: PropTypes.string,\n  number: PropTypes.number,\n};\n\nfunction Legend({ label, number }) {\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Box\n          sx={{\n            width: 16,\n            height: 16,\n            bgcolor: 'grey.50016',\n            borderRadius: 0.75,\n            ...(label === 'Sold out' && {\n              bgcolor: 'primary.main',\n            }),\n          }}\n        />\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n          {label}\n        </Typography>\n      </Stack>\n      <Typography variant=\"subtitle1\">{number} Rooms</Typography>\n    </Stack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}