{"ast":null,"code":"/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex; // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n\n  const HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/node_modules/highlight.js/lib/languages/accesslog.js"],"names":["accesslog","hljs","regex","HTTP_VERBS","name","contains","className","begin","relevance","concat","either","end","keywords","illegal","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB,CADuB,CAEvB;;AACA,QAAMC,UAAU,GAAG,CACjB,KADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,KAJiB,EAKjB,QALiB,EAMjB,SANiB,EAOjB,SAPiB,EAQjB,OARiB,EASjB,OATiB,CAAnB;AAWA,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,QAAQ,EAAE,CACR;AACA;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,kDAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KAFQ,EAOR;AACA;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KARQ,EAaR;AACA;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAEL,KAAK,CAACO,MAAN,CAAa,GAAb,EAAkBP,KAAK,CAACQ,MAAN,CAAa,GAAGP,UAAhB,CAAlB,CAFT;AAGEQ,MAAAA,GAAG,EAAE,GAHP;AAIEC,MAAAA,QAAQ,EAAET,UAJZ;AAKEU,MAAAA,OAAO,EAAE,IALX;AAMEL,MAAAA,SAAS,EAAE,CANb;AAOEH,MAAAA,QAAQ,EAAE,CACR;AACEE,QAAAA,KAAK,EAAE,iBADT;AAEEC,QAAAA,SAAS,EAAE;AAFb,OADQ;AAPZ,KAdQ,EA4BR;AACA;AACEF,MAAAA,SAAS,EAAE,QADb;AAEE;AACA;AACA;AACAC,MAAAA,KAAK,EAAE,mBALT;AAMEM,MAAAA,OAAO,EAAE,IANX;AAOEL,MAAAA,SAAS,EAAE;AAPb,KA7BQ,EAsCR;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEI,MAAAA,GAAG,EAAE,IAHP;AAIEE,MAAAA,OAAO,EAAE,IAJX;AAKEL,MAAAA,SAAS,EAAE;AALb,KAtCQ,EA6CR;AACA;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,qBAFT;AAGEI,MAAAA,GAAG,EAAE,GAHP;AAIEE,MAAAA,OAAO,EAAE,IAJX;AAKEL,MAAAA,SAAS,EAAE;AALb,KA9CQ,EAqDR;AACA;AACEF,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,GAFT;AAGEI,MAAAA,GAAG,EAAE,GAHP;AAIEE,MAAAA,OAAO,EAAE,IAJX;AAKEL,MAAAA,SAAS,EAAE;AALb,KAtDQ;AAFL,GAAP;AAiED;;AAEDM,MAAM,CAACC,OAAP,GAAiBf,SAAjB","sourcesContent":["/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Category: web, logs\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(hljs) {\n  const regex = hljs.regex;\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: regex.concat(/\"/, regex.either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n"]},"metadata":{},"sourceType":"script"}