{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\@dashboard\\\\user\\\\account\\\\AccountNotifications.js\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik'; // @mui\n\nimport { Card, Switch, Stack, Typography, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIVITY_OPTIONS = [{\n  value: 'activityComments',\n  label: 'Email me when someone comments onmy article'\n}, {\n  value: 'activityAnswers',\n  label: 'Email me when someone answers on my form'\n}, {\n  value: 'activityFollows',\n  label: 'Email me hen someone follows me'\n}];\nconst APPLICATION_OPTIONS = [{\n  value: 'applicationNews',\n  label: 'News and announcements'\n}, {\n  value: 'applicationProduct',\n  label: 'Weekly product updates'\n}, {\n  value: 'applicationBlog',\n  label: 'Weekly blog digest'\n}];\nconst NOTIFICATION_SETTINGS = {\n  activityComments: true,\n  activityAnswers: true,\n  activityFollows: false,\n  applicationNews: true,\n  applicationProduct: false,\n  applicationBlog: false\n}; // ----------------------------------------------------------------------\n\nexport default function AccountNotifications() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      activityComments: NOTIFICATION_SETTINGS.activityComments,\n      activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\n      activityFollows: NOTIFICATION_SETTINGS.activityFollows,\n      applicationNews: NOTIFICATION_SETTINGS.applicationNews,\n      applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\n      applicationBlog: NOTIFICATION_SETTINGS.applicationBlog\n    },\n    onSubmit: async (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setSubmitting(false);\n      enqueueSnackbar('Save success', {\n        variant: 'success'\n      });\n    }\n  });\n  const {\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              width: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: \"Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: ACTIVITY_OPTIONS.map(activity => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps(activity.value),\n                  checked: values[activity.value]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 30\n                }, this),\n                label: activity.label,\n                sx: {\n                  mx: 0\n                }\n              }, activity.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              width: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: \"Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: APPLICATION_OPTIONS.map(item => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps(item.value),\n                  checked: values[item.value]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 30\n                }, this),\n                label: item.label,\n                sx: {\n                  mx: 0\n                }\n              }, item.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountNotifications, \"BjjR/Kr9DAe96J/lcJGFgDHC8O4=\", false, function () {\n  return [useSnackbar, useFormik];\n});\n\n_c = AccountNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountNotifications\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/user/account/AccountNotifications.js"],"names":["useSnackbar","useFormik","Form","FormikProvider","Card","Switch","Stack","Typography","FormControlLabel","LoadingButton","ACTIVITY_OPTIONS","value","label","APPLICATION_OPTIONS","NOTIFICATION_SETTINGS","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","AccountNotifications","enqueueSnackbar","formik","enableReinitialize","initialValues","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","variant","isSubmitting","handleSubmit","getFieldProps","p","width","color","map","activity","mx","item"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport { Card, Switch, Stack, Typography, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nconst ACTIVITY_OPTIONS = [\n  {\n    value: 'activityComments',\n    label: 'Email me when someone comments onmy article',\n  },\n  {\n    value: 'activityAnswers',\n    label: 'Email me when someone answers on my form',\n  },\n  { value: 'activityFollows', label: 'Email me hen someone follows me' },\n];\n\nconst APPLICATION_OPTIONS = [\n  { value: 'applicationNews', label: 'News and announcements' },\n  { value: 'applicationProduct', label: 'Weekly product updates' },\n  { value: 'applicationBlog', label: 'Weekly blog digest' },\n];\n\nconst NOTIFICATION_SETTINGS = {\n  activityComments: true,\n  activityAnswers: true,\n  activityFollows: false,\n  applicationNews: true,\n  applicationProduct: false,\n  applicationBlog: false,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function AccountNotifications() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      activityComments: NOTIFICATION_SETTINGS.activityComments,\n      activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\n      activityFollows: NOTIFICATION_SETTINGS.activityFollows,\n      applicationNews: NOTIFICATION_SETTINGS.applicationNews,\n      applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\n      applicationBlog: NOTIFICATION_SETTINGS.applicationBlog,\n    },\n    onSubmit: async (values, { setSubmitting }) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      setSubmitting(false);\n      enqueueSnackbar('Save success', { variant: 'success' });\n    },\n  });\n\n  const { values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3} alignItems=\"flex-end\">\n            <Stack spacing={2} sx={{ width: 1 }}>\n              <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n                Activity\n              </Typography>\n              <Stack spacing={1} alignItems=\"flex-start\">\n                {ACTIVITY_OPTIONS.map((activity) => (\n                  <FormControlLabel\n                    key={activity.value}\n                    control={<Switch {...getFieldProps(activity.value)} checked={values[activity.value]} />}\n                    label={activity.label}\n                    sx={{ mx: 0 }}\n                  />\n                ))}\n              </Stack>\n            </Stack>\n\n            <Stack spacing={2} sx={{ width: 1 }}>\n              <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n                Application\n              </Typography>\n              <Stack spacing={1} alignItems=\"flex-start\">\n                {APPLICATION_OPTIONS.map((item) => (\n                  <FormControlLabel\n                    key={item.value}\n                    control={<Switch {...getFieldProps(item.value)} checked={values[item.value]} />}\n                    label={item.label}\n                    sx={{ mx: 0 }}\n                  />\n                ))}\n              </Stack>\n            </Stack>\n\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Save Changes\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}