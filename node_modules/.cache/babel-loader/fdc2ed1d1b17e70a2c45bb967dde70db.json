{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{apiUrl}from'../../config';import{objToQueryString}from'../../config';//Fetch all boards data using offset and limit!\nfunction getAllSubBoard(_x,_x2,_x3){return _getAllSubBoard.apply(this,arguments);}//api to change the status of the user\nfunction _getAllSubBoard(){_getAllSubBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(boardID,page,limit){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryString=objToQueryString({page:page,limit:limit,boardID:boardID});if(queryString==null)apiLink=apiUrl+'/subBoard/filterSubBoard';else apiLink=apiUrl+'/subBoard/filterSubBoard?'+queryString;_context.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context.sent;return _context.abrupt(\"return\",data);case 6:case\"end\":return _context.stop();}}},_callee);}));return _getAllSubBoard.apply(this,arguments);}function editSubBoards(_x4,_x5,_x6){return _editSubBoards.apply(this,arguments);}//api function for adding a Board \nfunction _editSubBoards(){_editSubBoards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(SubBoardId,name,status){var details,formBody,property,encodedKey,encodedValue,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:details={\"name\":name,\"status\":status};formBody=[];for(property in details){encodedKey=encodeURIComponent(property);encodedValue=encodeURIComponent(details[property]);formBody.push(encodedKey+\"=\"+encodedValue);}formBody=formBody.join(\"&\");_context2.next=6;return fetch(apiUrl+'/subBoard/editSubBoard/'+SubBoardId,{method:'PATCH',headers:{// Accept: 'application/json',\n'Content-Type':'application/x-www-form-urlencoded'},body:formBody}).then(function(res){return res.json();});case 6:data=_context2.sent;return _context2.abrupt(\"return\",data);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _editSubBoards.apply(this,arguments);}function createSubBoard(_x7,_x8,_x9,_x10){return _createSubBoard.apply(this,arguments);}//api to delete the user from the database\nfunction _createSubBoard(){_createSubBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name,status,boardID,icon){var formData,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// var details = {\n//   \"name\": name,\n//   \"status\": status\n// };\n// var formBody = [];\n// for (var property in details) {\n//   var encodedKey = encodeURIComponent(property);\n//   var encodedValue = encodeURIComponent(details[property]);\n//   formBody.push(encodedKey + \"=\" + encodedValue);\n// }\n// formBody = formBody.join(\"&\");\nformData=new FormData();formData.append('name',name);formData.append('status',status);formData.append('boardID',boardID);formData.append('image',icon);_context3.next=7;return fetch(apiUrl+'/subBoard/createSubBoard/'+boardID,{method:'POST',headers:{Accept:'application/json'// 'Content-Type': 'application/mu',\n},body:formData});case 7:data=_context3.sent;return _context3.abrupt(\"return\",data);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _createSubBoard.apply(this,arguments);}function deleteSubBoards(_x11){return _deleteSubBoards.apply(this,arguments);}//api to get the details of a particular user by sending the userId\nfunction _deleteSubBoards(){_deleteSubBoards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(subBoardID){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(apiUrl+'/subBoard/deleteSubBoardById/'+subBoardID,{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context4.sent;return _context4.abrupt(\"return\",data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _deleteSubBoards.apply(this,arguments);}function getSubBoardById(_x12){return _getSubBoardById.apply(this,arguments);}function _getSubBoardById(){_getSubBoardById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(subBoardID){var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(apiUrl+'/subBoard/getSubBoardById/'+subBoardID,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 2:data=_context5.sent;return _context5.abrupt(\"return\",data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _getSubBoardById.apply(this,arguments);}function getSubBoardByFilter(_x13,_x14,_x15,_x16,_x17){return _getSubBoardByFilter.apply(this,arguments);}function _getSubBoardByFilter(){_getSubBoardByFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(boardID,searchString,status,startDate,endDate){var queryString,apiLink,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:queryString=objToQueryString({searchString:searchString,status:status,startDate:startDate,boardID:boardID,endDate:endDate});if(queryString==null)apiLink=apiUrl+'/subBoard/filterSubBoard';else apiLink=apiUrl+'/subBoard/filterSubBoard?'+queryString;_context6.next=4;return fetch(apiLink,{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(res){return res.json();});case 4:data=_context6.sent;return _context6.abrupt(\"return\",data);case 6:case\"end\":return _context6.stop();}}},_callee6);}));return _getSubBoardByFilter.apply(this,arguments);}export{getAllSubBoard,editSubBoards,deleteSubBoards,getSubBoardById,createSubBoard,getSubBoardByFilter};","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/api/SubBoard/SubBoard.js"],"names":["apiUrl","objToQueryString","getAllSubBoard","boardID","page","limit","queryString","apiLink","fetch","method","headers","Accept","then","res","json","data","editSubBoards","SubBoardId","name","status","details","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","body","createSubBoard","icon","formData","FormData","append","deleteSubBoards","subBoardID","getSubBoardById","getSubBoardByFilter","searchString","startDate","endDate"],"mappings":"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","sourcesContent":["import { apiUrl } from '../../config';\nimport { objToQueryString } from '../../config'\n\n\n//Fetch all boards data using offset and limit!\nasync function getAllSubBoard(boardID, page, limit) {\n  const queryString = objToQueryString({\n    page: page,\n    limit: limit,\n    boardID\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subBoard/filterSubBoard'\n  else\n    apiLink = apiUrl + '/subBoard/filterSubBoard?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\n//api to change the status of the user\nasync function editSubBoards(SubBoardId, name, status) {\n\n  var details = {\n    \"name\": name,\n    \"status\": status\n  };\n\n  var formBody = [];\n  for (var property in details) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(details[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n  formBody = formBody.join(\"&\");\n  const data = await fetch(apiUrl + '/subBoard/editSubBoard/' + SubBoardId, {\n    method: 'PATCH',\n    headers: {\n      // Accept: 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formBody,\n  }).then((res) => res.json());\n  return data;\n\n}\n\n//api function for adding a Board \nasync function createSubBoard(name, status, boardID, icon) {\n\n  // var details = {\n  //   \"name\": name,\n  //   \"status\": status\n  // };\n\n  // var formBody = [];\n  // for (var property in details) {\n  //   var encodedKey = encodeURIComponent(property);\n  //   var encodedValue = encodeURIComponent(details[property]);\n  //   formBody.push(encodedKey + \"=\" + encodedValue);\n  // }\n  // formBody = formBody.join(\"&\");\n\n  const formData = new FormData()\n  formData.append('name', name)\n  formData.append('status', status)\n  formData.append('boardID', boardID)\n  formData.append('image', icon)\n  const data = await fetch(apiUrl + '/subBoard/createSubBoard/' + boardID, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      // 'Content-Type': 'application/mu',\n    },\n    body: formData,\n  })\n  // .then((res) => res.json());\n  return data;\n}\n\n//api to delete the user from the database\nasync function deleteSubBoards(subBoardID) {\n  const data = await fetch(apiUrl + '/subBoard/deleteSubBoardById/' + subBoardID, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n//api to get the details of a particular user by sending the userId\nasync function getSubBoardById(subBoardID) {\n  const data = await fetch(apiUrl + '/subBoard/getSubBoardById/' + subBoardID, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nasync function getSubBoardByFilter(boardID, searchString, status, startDate, endDate) {\n  const queryString = objToQueryString({\n    searchString: searchString,\n    status: status,\n    startDate: startDate,\n    boardID,\n    endDate: endDate,\n  })\n  var apiLink;\n  if (queryString == null)\n    apiLink = apiUrl + '/subBoard/filterSubBoard'\n  else\n    apiLink = apiUrl + '/subBoard/filterSubBoard?' + queryString\n  const data = await fetch(apiLink, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n  return data;\n}\n\n\nexport { getAllSubBoard, editSubBoards, deleteSubBoards, getSubBoardById, createSubBoard, getSubBoardByFilter }"]},"metadata":{},"sourceType":"module"}