{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createSlice}from'@reduxjs/toolkit';// utils\nimport axios from'../../utils/axios';//\nimport{dispatch}from'../store';// ----------------------------------------------------------------------\nfunction objFromArray(array){var key=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'id';return array.reduce(function(accumulator,current){accumulator[current[key]]=current;return accumulator;},{});}var initialState={isLoading:false,error:null,contacts:{byId:{},allIds:[]},conversations:{byId:{},allIds:[]},activeConversationId:null,participants:[],recipients:[]};var slice=createSlice({name:'chat',initialState:initialState,reducers:{// START LOADING\nstartLoading:function startLoading(state){state.isLoading=true;},// HAS ERROR\nhasError:function hasError(state,action){state.isLoading=false;state.error=action.payload;},// GET CONTACT SSUCCESS\ngetContactsSuccess:function getContactsSuccess(state,action){var contacts=action.payload;state.contacts.byId=objFromArray(contacts);state.contacts.allIds=Object.keys(state.contacts.byId);},// GET CONVERSATIONS\ngetConversationsSuccess:function getConversationsSuccess(state,action){var conversations=action.payload;state.conversations.byId=objFromArray(conversations);state.conversations.allIds=Object.keys(state.conversations.byId);},// GET CONVERSATION\ngetConversationSuccess:function getConversationSuccess(state,action){var conversation=action.payload;if(conversation){state.conversations.byId[conversation.id]=conversation;state.activeConversationId=conversation.id;if(!state.conversations.allIds.includes(conversation.id)){state.conversations.allIds.push(conversation.id);}}else{state.activeConversationId=null;}},// ON SEND MESSAGE\nonSendMessage:function onSendMessage(state,action){var conversation=action.payload;var conversationId=conversation.conversationId,messageId=conversation.messageId,message=conversation.message,contentType=conversation.contentType,attachments=conversation.attachments,createdAt=conversation.createdAt,senderId=conversation.senderId;var newMessage={id:messageId,body:message,contentType:contentType,attachments:attachments,createdAt:createdAt,senderId:senderId};state.conversations.byId[conversationId].messages.push(newMessage);},markConversationAsReadSuccess:function markConversationAsReadSuccess(state,action){var conversationId=action.payload.conversationId;var conversation=state.conversations.byId[conversationId];if(conversation){conversation.unreadCount=0;}},// GET PARTICIPANTS\ngetParticipantsSuccess:function getParticipantsSuccess(state,action){var participants=action.payload;state.participants=participants;},// RESET ACTIVE CONVERSATION\nresetActiveConversation:function resetActiveConversation(state){state.activeConversationId=null;},addRecipients:function addRecipients(state,action){var recipients=action.payload;state.recipients=recipients;}}});// Reducer\nexport default slice.reducer;// Actions\nvar _slice$actions=slice.actions,addRecipients=_slice$actions.addRecipients,onSendMessage=_slice$actions.onSendMessage,resetActiveConversation=_slice$actions.resetActiveConversation;// ----------------------------------------------------------------------\nexport{addRecipients,onSendMessage,resetActiveConversation};export function getContacts(){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(slice.actions.startLoading());_context.prev=1;_context.next=4;return axios.get('/api/chat/contacts');case 4:response=_context.sent;dispatch(slice.actions.getContactsSuccess(response.data.contacts));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(slice.actions.hasError(_context.t0));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function getConversations(){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(slice.actions.startLoading());_context2.prev=1;_context2.next=4;return axios.get('/api/chat/conversations');case 4:response=_context2.sent;dispatch(slice.actions.getConversationsSuccess(response.data.conversations));_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch(slice.actions.hasError(_context2.t0));case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function getConversation(conversationKey){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(slice.actions.startLoading());_context3.prev=1;_context3.next=4;return axios.get('/api/chat/conversation',{params:{conversationKey:conversationKey}});case 4:response=_context3.sent;dispatch(slice.actions.getConversationSuccess(response.data.conversation));_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);dispatch(slice.actions.hasError(_context3.t0));case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));}// ----------------------------------------------------------------------\nexport function markConversationAsRead(conversationId){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(slice.actions.startLoading());_context4.prev=1;_context4.next=4;return axios.get('/api/chat/conversation/mark-as-seen',{params:{conversationId:conversationId}});case 4:dispatch(slice.actions.markConversationAsReadSuccess({conversationId:conversationId}));_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](1);dispatch(slice.actions.hasError(_context4.t0));case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[1,7]]);}));}// ----------------------------------------------------------------------\nexport function getParticipants(conversationKey){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch(slice.actions.startLoading());_context5.prev=1;_context5.next=4;return axios.get('/api/chat/participants',{params:{conversationKey:conversationKey}});case 4:response=_context5.sent;dispatch(slice.actions.getParticipantsSuccess(response.data.participants));_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](1);dispatch(slice.actions.hasError(_context5.t0));case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[1,8]]);}));}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/redux/slices/chat.js"],"names":["createSlice","axios","dispatch","objFromArray","array","key","reduce","accumulator","current","initialState","isLoading","error","contacts","byId","allIds","conversations","activeConversationId","participants","recipients","slice","name","reducers","startLoading","state","hasError","action","payload","getContactsSuccess","Object","keys","getConversationsSuccess","getConversationSuccess","conversation","id","includes","push","onSendMessage","conversationId","messageId","message","contentType","attachments","createdAt","senderId","newMessage","body","messages","markConversationAsReadSuccess","unreadCount","getParticipantsSuccess","resetActiveConversation","addRecipients","reducer","actions","getContacts","get","response","data","getConversations","getConversation","conversationKey","params","markConversationAsRead","getParticipants"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  contacts: { byId: {}, allIds: [] },\n  conversations: { byId: {}, allIds: [] },\n  activeConversationId: null,\n  participants: [],\n  recipients: [],\n};\n\nconst slice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET CONTACT SSUCCESS\n    getContactsSuccess(state, action) {\n      const contacts = action.payload;\n\n      state.contacts.byId = objFromArray(contacts);\n      state.contacts.allIds = Object.keys(state.contacts.byId);\n    },\n\n    // GET CONVERSATIONS\n    getConversationsSuccess(state, action) {\n      const conversations = action.payload;\n\n      state.conversations.byId = objFromArray(conversations);\n      state.conversations.allIds = Object.keys(state.conversations.byId);\n    },\n\n    // GET CONVERSATION\n    getConversationSuccess(state, action) {\n      const conversation = action.payload;\n\n      if (conversation) {\n        state.conversations.byId[conversation.id] = conversation;\n        state.activeConversationId = conversation.id;\n        if (!state.conversations.allIds.includes(conversation.id)) {\n          state.conversations.allIds.push(conversation.id);\n        }\n      } else {\n        state.activeConversationId = null;\n      }\n    },\n\n    // ON SEND MESSAGE\n    onSendMessage(state, action) {\n      const conversation = action.payload;\n      const { conversationId, messageId, message, contentType, attachments, createdAt, senderId } = conversation;\n\n      const newMessage = {\n        id: messageId,\n        body: message,\n        contentType,\n        attachments,\n        createdAt,\n        senderId,\n      };\n\n      state.conversations.byId[conversationId].messages.push(newMessage);\n    },\n\n    markConversationAsReadSuccess(state, action) {\n      const { conversationId } = action.payload;\n      const conversation = state.conversations.byId[conversationId];\n      if (conversation) {\n        conversation.unreadCount = 0;\n      }\n    },\n\n    // GET PARTICIPANTS\n    getParticipantsSuccess(state, action) {\n      const participants = action.payload;\n      state.participants = participants;\n    },\n\n    // RESET ACTIVE CONVERSATION\n    resetActiveConversation(state) {\n      state.activeConversationId = null;\n    },\n\n    addRecipients(state, action) {\n      const recipients = action.payload;\n      state.recipients = recipients;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { addRecipients, onSendMessage, resetActiveConversation } = slice.actions;\n\n// ----------------------------------------------------------------------\n\nexport function getContacts() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/contacts');\n      dispatch(slice.actions.getContactsSuccess(response.data.contacts));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getConversations() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/conversations');\n      dispatch(slice.actions.getConversationsSuccess(response.data.conversations));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getConversation(conversationKey) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/conversation', {\n        params: { conversationKey },\n      });\n      dispatch(slice.actions.getConversationSuccess(response.data.conversation));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function markConversationAsRead(conversationId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.get('/api/chat/conversation/mark-as-seen', {\n        params: { conversationId },\n      });\n      dispatch(slice.actions.markConversationAsReadSuccess({ conversationId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getParticipants(conversationKey) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/participants', {\n        params: { conversationKey },\n      });\n      dispatch(slice.actions.getParticipantsSuccess(response.data.participants));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}