{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\topics\\\\Topics.js\",\n    _s = $RefreshSig$();\n\n//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'; // import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n// import ModalHeader from 'react-bootstrap/ModalHeader'\n\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect, useParams } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { apiUrl } from '../../config';\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { fetchSubjects, editSubject, deleteSubject, getSubjectByFilter } from \"../../api/Subject/Subject\";\nimport { materialTableIcons } from '../../config';\nimport { deleteTopic, editTopic, fetchTopics, getAllTopics, getTopicByFilter, getCourseTopics, getCourseAllTopics } from '../../api/Topic/Topic';\nimport { TableFooter, TableRow } from '@mui/material';\nimport { dataLimit, modalStyle } from '../../config';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button } from '@mui/material';\nimport SingleTopicRow from './SingleTopicRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Topics(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const courseID = id;\n  const tableIcons = materialTableIcons; //setting topics data into a variable\n\n  const [topics, setTopics] = useState([]);\n  const [notopic, setNoTopics] = useState(false);\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //this is the modal title for blocking or deleting modal\n\n  const [modalTitle, setModalTitle] = useState(''); //table data loading indicator\n\n  const [tableDataLoading, setTableDataLoading] = useState(true); //sets the info inside the modal\n\n  const [info, setInfo] = useState(''); //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n\n  const [modalMode, setModalMode] = useState(''); //modal visible status for alert modal for deleting or blocking\n\n  const [modalAlertTitle, setModalAlertTitle] = useState(false); //modal visible status for success of deleting or blocking\n\n  const [completionModal, setCompletionModal] = useState(false); //sets the content of the success Modal!\n\n  const [modalContent, setModalContent] = useState(''); //sets the id and name of the topic who is blocked or deleted\n\n  const [actionTopicId, setTopicId] = useState();\n  const [subjectName, setSubjectName] = useState(''); //unblock or block vairbale \n\n  const [subjectStatus, setSubjectStatus] = useState(true); //sets the row data where the action took place\n\n  const [rowId, setRowId] = useState(); //loader in the alert table on confirm button\n\n  const [actionLodaer, setActionLoader] = useState(false); //sets the visibility of the filter modal \n\n  const [filterModal, setFilterModal] = useState(false); //sets the user search string into state\n\n  const [search, setSearch] = useState(); //sets the user picked date from the apply filter modal\n\n  const [filterDateFrom, setFilterDateFrom] = useState();\n  const [filterDateTo, setFilterDateTo] = useState();\n  const [filterStatus, setFilterStatus] = useState();\n  const [page, setPage] = useState(1);\n  const [rowLimit, setRowLimit] = useState(dataLimit);\n  const [sortByDate, setSortByDate] = useState(); //sets the loader of apply changes in filter modal\n\n  const [filterLoader, setFilterLoader] = useState(false); //sets the total pages \n\n  const [totalPages, setTotalPages] = useState();\n  const navigate = useNavigate(); // useEffect(() => {\n  //     fetch(`${apiUrl}/topic/getCourseTopics/${id}`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             console.log(data.topic);\n  //             setTopics(data?.topic)\n  //         })\n  // }, [])\n  // useEffect(() => {\n  //     getCourseTopics(id)\n  //         .then((res) => {\n  //             console.log('hello', res.topic);\n  //             if (res.status) {\n  //                 setTopics(res.topic)\n  //             }\n  //             setFilterLoader(false);\n  //             setTableDataLoading(false);\n  //             setFilterModal(false);\n  //         })\n  //         .catch((err) => {\n  //             console.log(err)\n  //             setFilterLoader(false)\n  //         })\n  // }, [id])\n\n  useEffect(() => {\n    if (filterLoader || search != null) {\n      // if(search!=null || search.length > 0) {\n      //setting the loader for table\n      setTableDataLoading(true); //calling filter functions with required parameters\n\n      console.log(filterDateFrom);\n      console.log('hello', search);\n      getTopicByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus).then(res => {\n        console.log(\"res\", res);\n\n        if (res.status) {\n          setTopics(res.results.data);\n          setTotalPages(res.results.totalPages);\n        } else {\n          setTopics([]);\n        }\n\n        setFilterLoader(false);\n        setTableDataLoading(false);\n        setFilterModal(false);\n      }).catch(err => {\n        console.log(err);\n        setFilterLoader(false);\n      }); // }\n    }\n  }, [search, filterLoader]);\n  const materialTableRef = useRef();\n  useEffect(() => {\n    setNoTopics(false);\n    setTableDataLoading(true);\n    getCourseAllTopics(courseID).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched Topics into state variable\n        setTopics(res.data); // setTotalPages(res.totalPages)\n      } else {\n        //setting no Topic found variable true \n        setNoTopics(true);\n      }\n\n      setTableDataLoading(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [page, rowLimit]); //opens up the delete modal for deleting the subject\n\n  function openDeleteAlertModal(id, index) {\n    setTopicId(id);\n    setRowId(index);\n    setModalMode('delete');\n    setModalTitle('Delete the Topic?');\n    setInfo('All the details of the Topic will be removed from the Platform');\n    setModalAlertTitle(true);\n  } //function to change the status of the Subject to blocked!\n\n\n  function changeTopicStatus(rowData, index, status) {\n    editTopic(rowData._id, rowData.name, rowData.description, status).then(res => {\n      // console.log('res',res);\n      if (res.status) {\n        // const index = rowData.tableData.id;\n        //updating subject status in state array\n        const updatedRows = [...topics];\n        updatedRows[index].status = status;\n        setTopics(updatedRows);\n      } else {\n        alert(\"error occured\");\n      }\n    }).catch(err => {\n      console.log('err', err);\n    });\n  } //sets the filter data to null\n\n\n  function resetFilterData() {\n    setSearch(null);\n    setFilterDateFrom(null);\n    setFilterDateTo(null);\n    setFilterStatus(null);\n    setFilterLoader(false);\n  } //function to delete the Subject from the database\n\n\n  function deleteTopicProfile() {\n    setActionLoader(true);\n    deleteTopic(actionTopicId, courseID).then(res => {\n      // console.log(res)\n      if (res.status) {\n        const index = rowId; //removing deleted Subject from state array \n\n        const updatedRows = [...topics];\n        updatedRows.splice(index, 1);\n        setTopics(updatedRows);\n        setModalContent('Topic Deleted successfully!');\n        setModalAlertTitle(false);\n        setCompletionModal(true);\n        setActionLoader(false);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  } //function to confirm the filter changes\n\n\n  function applyFilters() {\n    setFilterLoader(true);\n  } //returns the created date of the record of the table\n\n\n  function renderDate(date) {\n    const newDate = new Date(date);\n    const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n    return returnDate;\n  }\n\n  const onPageChange = (event, newPage) => {\n    // setRowLimit(parseInt(event.target.value), 4);\n    setPage(newPage + 1);\n    console.log(newPage + 1);\n  };\n\n  const onRowPerChange = event => {\n    setRowLimit(event.target.value);\n    console.log(event.target.value);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Topics Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"pageHeaderCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                size: \"small\",\n                label: \"Search by name\",\n                variant: \"outlined\",\n                onChange: e => setSearch(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\" // opens up the filter modal onClick \n                ,\n                sx: {\n                  p: 1,\n                  mx: 1\n                },\n                onClick: () => setFilterModal(true),\n                children: /*#__PURE__*/_jsxDEV(BsSortDownAlt, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-md-4 d-flex justify-content-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"btn btn-primary me-3\",\n                onClick: () => navigate('/dashboard/topics/addTopic/' + courseID),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this), \"\\xA0Add New Topics\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"\",\n                children: \"Export\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row px-3 mt-3 materialTable\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Added On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: topics === null || topics === void 0 ? void 0 : topics.map((row, index) => /*#__PURE__*/_jsxDEV(SingleTopicRow, {\n              courseID: courseID,\n              changeTopicStatus: changeTopicStatus,\n              row: row,\n              openDeleteAlertModal: openDeleteAlertModal\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalAlertTitle,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalAlertTitle(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: modalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure to \", modalMode, \" this Topic?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 32\n              }, this), \" \", info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-outline-secondary px-5\",\n              onClick: () => setModalAlertTitle(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this), \"\\u2003\", actionLodaer ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"btn btn-primary px-5\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \"btn btn-primary px-5\",\n              onClick: () => {\n                modalMode == 'delete' ? deleteTopicProfile() : changeTopicStatus();\n              },\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: completionModal,\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Updated Topics!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModalAlertTitle(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: modalContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary px-5\",\n              onClick: () => setCompletionModal(false),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: filterModal,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      onClose: () => setFilterModal(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n          className: \"clr-primary-400 py-2\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 11,\n              lg: 11,\n              md: 11,\n              sm: 11,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Apply Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              lg: 1,\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setFilterModal(false),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row labelColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Added Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                placeholder: \"From\",\n                onChange: e => setFilterDateFrom(e.target.value),\n                value: filterDateFrom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6 col-sm-6 col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control txt-5282F0\",\n                onChange: e => setFilterDateTo(e.target.value),\n                value: filterDateTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 col-sm-12 col-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control txt-5282F0\",\n                  onChange: e => setFilterStatus(e.target.value),\n                  value: filterStatus,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: null,\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"active\",\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"inactive\",\n                    children: \"Inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\" // onClick={()=>resetFilterData()}\n                  ,\n                  onClick: () => resetFilterData(),\n                  children: \"Reset \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                lg: 5,\n                md: 5,\n                sm: 5,\n                children: filterLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  className: \" px-5\",\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  className: \" px-5\",\n                  onClick: () => {\n                    applyFilters();\n                  },\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Topics, \"RiZ9VITsnj0IeG3dQfJ4WxgjupY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Topics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/topics/Topics.js"],"names":["TablePagination","React","useState","useEffect","forwardRef","useRef","useSelector","Link","useNavigate","Redirect","useParams","updatePassword","changeName","uploadImage","Loader","apiUrl","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchSubjects","editSubject","deleteSubject","getSubjectByFilter","materialTableIcons","deleteTopic","editTopic","fetchTopics","getAllTopics","getTopicByFilter","getCourseTopics","getCourseAllTopics","TableFooter","TableRow","dataLimit","modalStyle","Modal","BootstrapModal","Grid","CircularProgress","Box","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","AddIcon","TextField","Typography","CloseIcon","Button","SingleTopicRow","Topics","props","id","courseID","tableIcons","topics","setTopics","notopic","setNoTopics","months","modalTitle","setModalTitle","tableDataLoading","setTableDataLoading","info","setInfo","modalMode","setModalMode","modalAlertTitle","setModalAlertTitle","completionModal","setCompletionModal","modalContent","setModalContent","actionTopicId","setTopicId","subjectName","setSubjectName","subjectStatus","setSubjectStatus","rowId","setRowId","actionLodaer","setActionLoader","filterModal","setFilterModal","search","setSearch","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","filterStatus","setFilterStatus","page","setPage","rowLimit","setRowLimit","sortByDate","setSortByDate","filterLoader","setFilterLoader","totalPages","setTotalPages","navigate","console","log","then","res","status","results","data","catch","err","materialTableRef","error","openDeleteAlertModal","index","changeTopicStatus","rowData","_id","name","description","updatedRows","alert","resetFilterData","deleteTopicProfile","splice","applyFilters","renderDate","date","newDate","Date","returnDate","getMonth","getDate","getFullYear","onPageChange","event","newPage","onRowPerChange","target","value","e","p","mx","map","row","marginTop"],"mappings":"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","sourcesContent":["//page for all Subjects listing!\nimport TablePagination from '@mui/material/TablePagination';\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\n// import { Modal, Card, InputGroup, FormControl, Table } from 'react-bootstrap'\n// import ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect, useParams } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\nimport { apiUrl } from '../../config';\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchSubjects, editSubject, deleteSubject, getSubjectByFilter } from \"../../api/Subject/Subject\"\nimport { materialTableIcons } from '../../config';\nimport { deleteTopic, editTopic, fetchTopics, getAllTopics, getTopicByFilter, getCourseTopics, getCourseAllTopics } from '../../api/Topic/Topic'\nimport { TableFooter, TableRow } from '@mui/material'\nimport { dataLimit, modalStyle } from '../../config';\n\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Button } from '@mui/material';\nimport SingleTopicRow from './SingleTopicRow';\n\n\nexport default function Topics(props) {\n    const { id } = useParams();\n    const courseID = id;\n    const tableIcons = materialTableIcons\n    //setting topics data into a variable\n    const [topics, setTopics] = useState([]);\n    const [notopic, setNoTopics] = useState(false);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    //this is the modal title for blocking or deleting modal\n    const [modalTitle, setModalTitle] = useState('');\n\n    //table data loading indicator\n    const [tableDataLoading, setTableDataLoading] = useState(true)\n\n    //sets the info inside the modal\n    const [info, setInfo] = useState('')\n\n    //const for setting the mode for which the alert modal is opened ? ('delete'):('block')\n    const [modalMode, setModalMode] = useState('')\n\n    //modal visible status for alert modal for deleting or blocking\n    const [modalAlertTitle, setModalAlertTitle] = useState(false);\n\n    //modal visible status for success of deleting or blocking\n    const [completionModal, setCompletionModal] = useState(false);\n\n    //sets the content of the success Modal!\n    const [modalContent, setModalContent] = useState('');\n\n    //sets the id and name of the topic who is blocked or deleted\n    const [actionTopicId, setTopicId] = useState();\n    const [subjectName, setSubjectName] = useState('');\n\n    //unblock or block vairbale \n    const [subjectStatus, setSubjectStatus] = useState(true);\n\n    //sets the row data where the action took place\n    const [rowId, setRowId] = useState()\n\n    //loader in the alert table on confirm button\n    const [actionLodaer, setActionLoader] = useState(false);\n\n    //sets the visibility of the filter modal \n    const [filterModal, setFilterModal] = useState(false);\n\n    //sets the user search string into state\n    const [search, setSearch] = useState();\n\n    //sets the user picked date from the apply filter modal\n    const [filterDateFrom, setFilterDateFrom] = useState();\n    const [filterDateTo, setFilterDateTo] = useState();\n    const [filterStatus, setFilterStatus] = useState();\n\n    const [page, setPage] = useState(1);\n    const [rowLimit, setRowLimit] = useState(dataLimit)\n    const [sortByDate, setSortByDate] = useState();\n\n    //sets the loader of apply changes in filter modal\n    const [filterLoader, setFilterLoader] = useState(false);\n\n    //sets the total pages \n    const [totalPages, setTotalPages] = useState();\n\n    const navigate = useNavigate();\n\n    // useEffect(() => {\n    //     fetch(`${apiUrl}/topic/getCourseTopics/${id}`)\n    //         .then(res => res.json())\n    //         .then(data => {\n    //             console.log(data.topic);\n    //             setTopics(data?.topic)\n    //         })\n    // }, [])\n    // useEffect(() => {\n    //     getCourseTopics(id)\n    //         .then((res) => {\n    //             console.log('hello', res.topic);\n    //             if (res.status) {\n    //                 setTopics(res.topic)\n    //             }\n    //             setFilterLoader(false);\n    //             setTableDataLoading(false);\n    //             setFilterModal(false);\n    //         })\n    //         .catch((err) => {\n    //             console.log(err)\n    //             setFilterLoader(false)\n    //         })\n    // }, [id])\n\n\n    useEffect(() => {\n        if (filterLoader || search != null) {\n            // if(search!=null || search.length > 0) {\n            //setting the loader for table\n            setTableDataLoading(true);\n            //calling filter functions with required parameters\n            console.log(filterDateFrom)\n            console.log('hello', search);\n            getTopicByFilter(search, filterDateFrom, filterDateTo, sortByDate, filterStatus)\n                .then((res) => {\n                    console.log(\"res\", res)\n                    if (res.status) {\n                        setTopics(res.results.data);\n                        setTotalPages(res.results.totalPages)\n                    }\n                    else {\n                        setTopics([])\n                    }\n                    setFilterLoader(false)\n                    setTableDataLoading(false);\n                    setFilterModal(false);\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setFilterLoader(false)\n                })\n            // }\n        }\n    }, [search, filterLoader])\n\n    const materialTableRef = useRef()\n    useEffect(() => {\n        setNoTopics(false)\n        setTableDataLoading(true)\n        getCourseAllTopics(courseID).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched Topics into state variable\n                setTopics(res.data);\n                // setTotalPages(res.totalPages)\n            }\n            else {\n                //setting no Topic found variable true \n                setNoTopics(true);\n            }\n            setTableDataLoading(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n\n    }, [page, rowLimit])\n\n    //opens up the delete modal for deleting the subject\n    function openDeleteAlertModal(id, index) {\n        setTopicId(id);\n        setRowId(index)\n        setModalMode('delete');\n        setModalTitle('Delete the Topic?');\n        setInfo('All the details of the Topic will be removed from the Platform');\n        setModalAlertTitle(true)\n    }\n\n    //function to change the status of the Subject to blocked!\n    function changeTopicStatus(rowData, index, status) {\n        editTopic(rowData._id, rowData.name, rowData.description, status)\n            .then((res => {\n                // console.log('res',res);\n                if (res.status) {\n                    // const index = rowData.tableData.id;\n                    //updating subject status in state array\n                    const updatedRows = [...topics];\n                    updatedRows[index].status = status;\n                    setTopics(updatedRows);\n                }\n                else {\n                    alert(\"error occured\")\n                }\n            }))\n            .catch((err => {\n                console.log('err', err);\n            }))\n    }\n\n    //sets the filter data to null\n    function resetFilterData() {\n        setSearch(null);\n        setFilterDateFrom(null);\n        setFilterDateTo(null);\n        setFilterStatus(null);\n        setFilterLoader(false);\n    }\n\n    //function to delete the Subject from the database\n    function deleteTopicProfile() {\n        setActionLoader(true)\n        deleteTopic(actionTopicId, courseID)\n            .then((res) => {\n                // console.log(res)\n                if (res.status) {\n                    const index = rowId;\n                    //removing deleted Subject from state array \n                    const updatedRows = [...topics]\n                    updatedRows.splice(index, 1)\n                    setTopics(updatedRows);\n                    setModalContent('Topic Deleted successfully!')\n                    setModalAlertTitle(false);\n                    setCompletionModal(true);\n                    setActionLoader(false)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    //function to confirm the filter changes\n    function applyFilters() {\n        setFilterLoader(true)\n\n    }\n\n    //returns the created date of the record of the table\n    function renderDate(date) {\n        const newDate = new Date(date);\n        const returnDate = months[newDate.getMonth()] + ' ' + newDate.getDate() + ' ' + newDate.getFullYear();\n        return returnDate;\n    }\n\n    const onPageChange = (event, newPage) => {\n        // setRowLimit(parseInt(event.target.value), 4);\n        setPage(newPage + 1);\n        console.log(newPage + 1)\n    };\n\n    const onRowPerChange = (event) => {\n        setRowLimit(event.target.value)\n        console.log(event.target.value)\n        setPage(1)\n    }\n\n    return (\n        <>\n\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Topics Management</h5>\n            {/* <hr className=\"mt-4\" /> */}\n            <div className=\"d-flex align-items-center mt-3\">\n                <Card className=\"w-100\">\n                    <CardContent className=\"pageHeaderCard\">\n\n                        <div className='row'>\n                            <div className='col-lg-6 col-md-8 col-sm-4 d-flex justify-content-start'>\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mx: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className='col-lg-6 col-md-4 d-flex justify-content-end'>\n                                <Button variant=\"contained\" className=\"btn btn-primary me-3\"\n                                    onClick={() => navigate('/dashboard/topics/addTopic/' + courseID)}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Topics</Button>\n                                <Button variant=\"contained\" className=\"\" >Export</Button>\n                            </div>\n                        </div>\n\n                        <div>\n                            {/* <div className=\"row\" style={{ marginBottom: 10, marginLeft: 50 }}>\n                            <div className=\"col-lg-5 col-sm-6 col-12\">\n                            </div>\n                            <div className=\"col-lg-3 col-md-2 col-6 \">\n                            </div>\n                            <div className=\"col-lg-4 col-md-4 col-12\">\n                                <Button variant=\"contained\" className=\"btn btn-primary py-2 px-5 me-3\"\n                                    onClick={() => navigate('/dashboard/topics/addTopic')}\n                                >\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                    &nbsp;Add New Topics</Button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <InputGroup className=\"mb-3\" >\n                                    <FormControl\n                                        placeholder=\"Search by name\"\n                                        aria-label=\"Search\"\n                                        aria-describedby=\"basic-addon1\"\n                                        onChange={(e) => setSearch(e.target.value)}\n                                    />\n                                <TextField\n                                    fullWidth\n                                    size=\"small\"\n                                    label=\"Search by name\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setSearch(e.target.value)}\n                                />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-lg-4 col-md-2 col-6 \">\n                                <Button variant=\"contained\"\n                                    // opens up the filter modal onClick \n                                    sx={{ p: 1, mr: 1 }}\n                                    onClick={() => setFilterModal(true)}\n                                >\n                                    <BsSortDownAlt size={20} />\n                                </Button>\n                            </div>\n                            <div className=\"col-lg-2 col-md-2 col-6 \">\n                                <Button variant=\"contained\" className=\"py-2 px-5 me-3\" >Export</Button>\n                            </div>\n                        </div> */}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n            <div className=\"row px-3 mt-3 materialTable\">\n                {/* material table for displaying Subject details  */}\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableCell>S.No.</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell >Name</TableCell>\n                            <TableCell >Added On</TableCell>\n                            <TableCell >Status</TableCell>\n                            <TableCell >Action</TableCell>\n                        </TableHead>\n                        <TableBody>\n                            {topics?.map((row, index) => <SingleTopicRow courseID={courseID} changeTopicStatus={changeTopicStatus} row={row} key={index} openDeleteAlertModal={openDeleteAlertModal} />\n                            )}\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <MaterialTable\n                    columns={[\n                        {\n                            title: 'S No.',\n                            field: 'Serial',\n                            render: rowData => <>{rowData.tableData.id + 1}</>\n                        },\n                        {\n                            title: 'Name',\n                            field: 'name',\n                            render: rowData => <>{rowData.name}</>\n                        },\n                        {\n                            title: 'Added On',\n                            field: 'createdAt',\n                            render: rowData => <>{renderDate(rowData.createdAt)}</>\n                        },\n                        {\n                            title: 'Status',\n                            render: rowData => <>{rowData.status == 'inactive' ? ('In Active') : ('Active')}</>\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => <>\n                                {rowData.status == 'inactive' ? (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changeTopicStatus(rowData, 'active')}\n                                    >\n                                        <i class=\"fas fa-toggle-off txt-5282F0\"></i>\n                                    </a>\n                                ) : (\n                                    <a href=\"javascript:void(0)\"\n                                        onClick={() => changeTopicStatus(rowData, 'inactive')}>\n                                        <i class=\"fas fa-toggle-on txt-5282F0\"></i>\n                                    </a>\n                                )}\n                                &emsp;\n                                <a href=\"javascript:void(0)\"\n                                    onClick={() => navigate('/app/editTopic/' + rowData._id + '/' + rowData.status + '/' + rowData.name)}>\n                                    <i className=\"fas fa-pen txt-5282F0\"></i>\n                                </a>\n                                &emsp;\n                                <a href=\"javascript:void(0)\" onClick={() => openDeleteAlertModal(rowData)}>\n                                    <i className=\"fas fa-trash txt-5282F0\"></i>\n                                </a>\n                            </>\n                        },\n                    ]}\n                    data={topics}\n                    title=\"topics\"\n                    isLoading={tableDataLoading}\n                    options={{\n                        sorting: true,\n                        exportButton: true,\n                        toolbar: true,\n                        showTitle: false,\n                        search: false,\n                        paging:false\n                    }}\n                    icons={tableIcons}\n                /> */}\n            </div>\n            {/* <div className=\"px-3 mt-3 w-100 d-flex justify-content-end\">\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n\n                            rowsPerPageOptions={[1, 2, 5, 10, 25]}\n                            colSpan={3}\n                            count={totalPages * rowLimit}\n                            rowsPerPage={rowLimit}\n                            page={page - 1}\n                            SelectProps={{\n                                inputProps: {\n                                    'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            onPageChange={onPageChange}\n                            onRowsPerPageChange={onRowPerChange}\n                        // ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </div> */}\n            {/* </div> */}\n\n            {/* Modal for delete or blocking confirmation */}\n            <Modal\n                open={modalAlertTitle}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalAlertTitle(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <BootstrapModal.Title id=\"contained-Bootstrapmodal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    {modalTitle}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>Are you sure to {modalMode} this Topic?</p>\n                            <p><i className=\"fas fa-info-circle\"></i> {info}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\"btn btn-outline-secondary px-5\"\n                                onClick={() => setModalAlertTitle(false)}\n                            >Cancel</Button>\n                            &emsp;\n                            {actionLodaer ? (\n                                <Button variant=\"outlined\" className=\"btn btn-primary px-5\" >\n                                    <CircularProgress size={20} />\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" className=\"btn btn-primary px-5\"\n                                    onClick={() => { modalMode == 'delete' ? (deleteTopicProfile()) : (changeTopicStatus()) }}\n                                >Confirm</Button>\n                            )}\n\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n            {/* Modal for successful deletion and block */}\n            <Modal\n                show={completionModal}\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Box style={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\">\n                        {/* <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Updated Topics!\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setModalAlertTitle(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* </Modal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <p>{modalContent}</p>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <button className=\"btn btn-primary px-5\"\n                                onClick={() => setCompletionModal(false)}\n                            >OK</button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n            {/* Modal for applying filter */}\n            <Modal\n                open={filterModal}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                onClose={() => setFilterModal(false)}\n\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Header className=\"clr-primary-400 py-2\" >\n                        {/* <BootstrapModal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\"> */}\n                        {/* <Box> */}\n                        <Grid container>\n                            <Grid item xs={11} lg={11} md={11} sm={11}>\n                                <Typography variant=\"h6\">\n                                    Apply Filter\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={1} lg={1} md={1}>\n                                <Button onClick={() => setFilterModal(false)} >\n                                    <CloseIcon />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        {/* </Box> */}\n                        {/* </BootstrapModal.Title> */}\n                    </BootstrapModal.Header>\n                    <BootstrapModal.Body>\n                        <div className=\"row labelColor\">\n                            <label>Added Date</label>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" placeholder=\"From\" onChange={(e) => setFilterDateFrom(e.target.value)} value={filterDateFrom} />\n\n                            </div>\n                            <div className=\"col-lg-6 col-sm-6 col-12\">\n                                <input type=\"date\" className=\"form-control txt-5282F0\" onChange={(e) => setFilterDateTo(e.target.value)} value={filterDateTo} />\n                            </div>\n                            <div className=\"row\" style={{ marginTop: 10 }}>\n                                <div className=\"col-lg-12 col-sm-12 col-12\">\n                                    <label>Status</label>\n                                    <select className=\"form-control txt-5282F0\" onChange={(e) => setFilterStatus(e.target.value)} value={filterStatus}>\n                                        <option value={null}>Status</option>\n                                        <option value=\"active\">Active</option>\n                                        <option value=\"inactive\">Inactive</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center txt-5282F0 my-4\">\n\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Grid container>\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    <Button variant=\"outlined\" className=\" px-5\"\n                                        // onClick={()=>resetFilterData()}\n                                        onClick={() => resetFilterData()}\n                                    >Reset </Button>\n                                </Grid>\n                                &emsp;\n                                <Grid item xs={5} lg={5} md={5} sm={5}>\n                                    {filterLoader ? (\n                                        <Button variant=\"outlined\" className=\" px-5\" >\n\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" className=\" px-5\"\n                                            onClick={() => { applyFilters() }}\n                                        >Confirm</Button>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}