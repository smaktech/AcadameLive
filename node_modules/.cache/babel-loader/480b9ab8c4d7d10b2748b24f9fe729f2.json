{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import MapGL,{Layer,Source}from'react-map-gl';// @mui\nimport{useTheme}from'@mui/material/styles';// components\nimport{MapControlScale,MapControlGeolocate,MapControlNavigation,MapControlFullscreen}from'../../components/map';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function pointOnCircle(_ref){var center=_ref.center,angle=_ref.angle,radius=_ref.radius;return{type:'Point',coordinates:[center[0]+Math.cos(angle)*radius,center[1]+Math.sin(angle)*radius]};}export default function MapGeoJSONAnimation(_ref2){var other=Object.assign({},_ref2);var theme=useTheme();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),pointData=_useState2[0],setPointData=_useState2[1];var _useState3=useState({latitude:0,longitude:-100,zoom:3,bearing:0,pitch:0}),_useState4=_slicedToArray(_useState3,2),viewport=_useState4[0],setViewport=_useState4[1];var pointLayer={type:'circle',paint:{'circle-radius':10,'circle-color':theme.palette.error.main}};useEffect(function(){var animation=window.requestAnimationFrame(function(){return setPointData(pointOnCircle({center:[-100,0],angle:Date.now()/1000,radius:20}));});return function(){return window.cancelAnimationFrame(animation);};});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MapGL,_objectSpread(_objectSpread(_objectSpread({},viewport),{},{onViewportChange:setViewport},other),{},{children:[/*#__PURE__*/_jsx(MapControlScale,{}),/*#__PURE__*/_jsx(MapControlNavigation,{}),/*#__PURE__*/_jsx(MapControlFullscreen,{}),/*#__PURE__*/_jsx(MapControlGeolocate,{}),pointData&&/*#__PURE__*/_jsx(Source,{type:\"geojson\",data:pointData,children:/*#__PURE__*/_jsx(Layer,_objectSpread({},pointLayer))})]}))});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapGeoJSONAnimation.js"],"names":["useState","useEffect","MapGL","Layer","Source","useTheme","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","pointOnCircle","center","angle","radius","type","coordinates","Math","cos","sin","MapGeoJSONAnimation","other","theme","pointData","setPointData","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","pointLayer","paint","palette","error","main","animation","window","requestAnimationFrame","Date","now","cancelAnimationFrame"],"mappings":"+TAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,KAAhB,CAAuBC,MAAvB,KAAqC,cAArC,CACA;AACA,OAASC,QAAT,KAAyB,sBAAzB,CACA;AACA,OAASC,eAAT,CAA0BC,mBAA1B,CAA+CC,oBAA/C,CAAqEC,oBAArE,KAAiG,sBAAjG,CAEA;6IAEA,QAASC,CAAAA,aAAT,MAAkD,IAAzBC,CAAAA,MAAyB,MAAzBA,MAAyB,CAAjBC,KAAiB,MAAjBA,KAAiB,CAAVC,MAAU,MAAVA,MAAU,CAChD,MAAO,CACLC,IAAI,CAAE,OADD,CAELC,WAAW,CAAE,CAACJ,MAAM,CAAC,CAAD,CAAN,CAAYK,IAAI,CAACC,GAAL,CAASL,KAAT,EAAkBC,MAA/B,CAAuCF,MAAM,CAAC,CAAD,CAAN,CAAYK,IAAI,CAACE,GAAL,CAASN,KAAT,EAAkBC,MAArE,CAFR,CAAP,CAID,CAED,cAAe,SAASM,CAAAA,mBAAT,OAA2C,IAATC,CAAAA,KAAS,yBACxD,GAAMC,CAAAA,KAAK,CAAGhB,QAAQ,EAAtB,CAEA,cAAkCL,QAAQ,CAAC,IAAD,CAA1C,wCAAOsB,SAAP,eAAkBC,YAAlB,eACA,eAAgCvB,QAAQ,CAAC,CACvCwB,QAAQ,CAAE,CAD6B,CAEvCC,SAAS,CAAE,CAAC,GAF2B,CAGvCC,IAAI,CAAE,CAHiC,CAIvCC,OAAO,CAAE,CAJ8B,CAKvCC,KAAK,CAAE,CALgC,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAQA,GAAMC,CAAAA,UAAU,CAAG,CACjBjB,IAAI,CAAE,QADW,CAEjBkB,KAAK,CAAE,CACL,gBAAiB,EADZ,CAEL,eAAgBX,KAAK,CAACY,OAAN,CAAcC,KAAd,CAAoBC,IAF/B,CAFU,CAAnB,CAQAlC,SAAS,CAAC,UAAM,CACd,GAAMmC,CAAAA,SAAS,CAAGC,MAAM,CAACC,qBAAP,CAA6B,iBAC7Cf,CAAAA,YAAY,CACVb,aAAa,CAAC,CACZC,MAAM,CAAE,CAAC,CAAC,GAAF,CAAO,CAAP,CADI,CAEZC,KAAK,CAAE2B,IAAI,CAACC,GAAL,GAAa,IAFR,CAGZ3B,MAAM,CAAE,EAHI,CAAD,CADH,CADiC,EAA7B,CAAlB,CASA,MAAO,kBAAMwB,CAAAA,MAAM,CAACI,oBAAP,CAA4BL,SAA5B,CAAN,EAAP,CACD,CAXQ,CAAT,CAaA,mBACE,sCACE,MAAC,KAAD,8CAAWP,QAAX,MAAqB,gBAAgB,CAAEC,WAAvC,EAAwDV,KAAxD,6BACE,KAAC,eAAD,IADF,cAEE,KAAC,oBAAD,IAFF,cAGE,KAAC,oBAAD,IAHF,cAIE,KAAC,mBAAD,IAJF,CAMGE,SAAS,eACR,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,IAAI,CAAEA,SAA7B,uBACE,KAAC,KAAD,kBAAWS,UAAX,EADF,EAPJ,IADF,EADF,CAgBD","sourcesContent":["import { useState, useEffect } from 'react';\nimport MapGL, { Layer, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n// components\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nfunction pointOnCircle({ center, angle, radius }) {\n  return {\n    type: 'Point',\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\n  };\n}\n\nexport default function MapGeoJSONAnimation({ ...other }) {\n  const theme = useTheme();\n\n  const [pointData, setPointData] = useState(null);\n  const [viewport, setViewport] = useState({\n    latitude: 0,\n    longitude: -100,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const pointLayer = {\n    type: 'circle',\n    paint: {\n      'circle-radius': 10,\n      'circle-color': theme.palette.error.main,\n    },\n  };\n\n  useEffect(() => {\n    const animation = window.requestAnimationFrame(() =>\n      setPointData(\n        pointOnCircle({\n          center: [-100, 0],\n          angle: Date.now() / 1000,\n          radius: 20,\n        })\n      )\n    );\n    return () => window.cancelAnimationFrame(animation);\n  });\n\n  return (\n    <>\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        {pointData && (\n          <Source type=\"geojson\" data={pointData}>\n            <Layer {...pointLayer} />\n          </Source>\n        )}\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}