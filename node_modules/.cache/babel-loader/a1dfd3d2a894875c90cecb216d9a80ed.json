{"ast":null,"code":"import _objectSpread from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{useSnackbar}from'notistack';import{useFormik,Form,FormikProvider}from'formik';// @mui\nimport{Stack,Card,TextField}from'@mui/material';import{LoadingButton}from'@mui/lab';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AccountChangePassword(){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var ChangePassWordSchema=Yup.object().shape({oldPassword:Yup.string().required('Old Password is required'),newPassword:Yup.string().min(6,'Password must be at least 6 characters').required('New Password is required'),confirmNewPassword:Yup.string().oneOf([Yup.ref('newPassword'),null],'Passwords must match')});var formik=useFormik({initialValues:{oldPassword:'',newPassword:'',confirmNewPassword:''},validationSchema:ChangePassWordSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting;_context.next=3;return new Promise(function(resolve){return setTimeout(resolve,500);});case 3:setSubmitting(false);enqueueSnackbar('Save success',{variant:'success'});case 5:case\"end\":return _context.stop();}}},_callee);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,touched=formik.touched,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(Card,{sx:{p:3},children:/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{spacing:3,alignItems:\"flex-end\",children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('oldPassword')),{},{fullWidth:true,autoComplete:\"on\",type:\"password\",label:\"Old Password\",error:Boolean(touched.oldPassword&&errors.oldPassword),helperText:touched.oldPassword&&errors.oldPassword})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('newPassword')),{},{fullWidth:true,autoComplete:\"on\",type:\"password\",label:\"New Password\",error:Boolean(touched.newPassword&&errors.newPassword),helperText:touched.newPassword&&errors.newPassword||'Password must be minimum 6+'})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('confirmNewPassword')),{},{fullWidth:true,autoComplete:\"on\",type:\"password\",label:\"Confirm New Password\",error:Boolean(touched.confirmNewPassword&&errors.confirmNewPassword),helperText:touched.confirmNewPassword&&errors.confirmNewPassword})),/*#__PURE__*/_jsx(LoadingButton,{type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Save Changes\"})]})})})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/@dashboard/user/account/AccountChangePassword.js"],"names":["Yup","useSnackbar","useFormik","Form","FormikProvider","Stack","Card","TextField","LoadingButton","AccountChangePassword","enqueueSnackbar","ChangePassWordSchema","object","shape","oldPassword","string","required","newPassword","min","confirmNewPassword","oneOf","ref","formik","initialValues","validationSchema","onSubmit","values","setSubmitting","Promise","resolve","setTimeout","variant","errors","touched","isSubmitting","handleSubmit","getFieldProps","p","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport { Stack, Card, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ChangePassWordSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Old Password is required'),\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n    validationSchema: ChangePassWordSchema,\n    onSubmit: async (values, { setSubmitting }) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      setSubmitting(false);\n      enqueueSnackbar('Save success', { variant: 'success' });\n    },\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3} alignItems=\"flex-end\">\n            <TextField\n              {...getFieldProps('oldPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"Old Password\"\n              error={Boolean(touched.oldPassword && errors.oldPassword)}\n              helperText={touched.oldPassword && errors.oldPassword}\n            />\n\n            <TextField\n              {...getFieldProps('newPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"New Password\"\n              error={Boolean(touched.newPassword && errors.newPassword)}\n              helperText={(touched.newPassword && errors.newPassword) || 'Password must be minimum 6+'}\n            />\n\n            <TextField\n              {...getFieldProps('confirmNewPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"Confirm New Password\"\n              error={Boolean(touched.confirmNewPassword && errors.confirmNewPassword)}\n              helperText={touched.confirmNewPassword && errors.confirmNewPassword}\n            />\n\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Save Changes\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}