{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\interaction\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport MapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react'; // components\n\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../../components/map'; //\n\nimport ControlPanel from './ControlPanel'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapInteraction(_ref) {\n  _s();\n\n  let { ...other\n  } = _ref;\n  const [interactionState, setInteractionState] = useState({});\n  const [viewport, setViewport] = useState({\n    latitude: 37.729,\n    longitude: -122.36,\n    zoom: 11,\n    bearing: 0,\n    pitch: 50\n  });\n  const [settings, setSettings] = useState({\n    dragPan: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchZoom: true,\n    touchRotate: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85\n  });\n  const handleChangeSetting = useCallback((name, value) => setSettings(settings => ({ ...settings,\n    [name]: value\n  })), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      ...settings,\n      onViewportChange: setViewport,\n      onInteractionStateChange: interactionState => setInteractionState(interactionState),\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        settings: settings,\n        interactionState: interactionState,\n        onChange: handleChangeSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapInteraction, \"7ryqliBzqdqEC1yao9SeV9LzPss=\");\n\n_c = MapInteraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapInteraction\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/interaction/index.js"],"names":["MapGL","useState","useCallback","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","MapInteraction","other","interactionState","setInteractionState","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","settings","setSettings","dragPan","dragRotate","scrollZoom","touchZoom","touchRotate","keyboard","doubleClickZoom","minZoom","maxZoom","minPitch","maxPitch","handleChangeSetting","name","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC,C,CACA;;AACA,SACEC,eADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,yBALP,C,CAMA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;;AAEA,eAAe,SAASC,cAAT,OAAsC;AAAA;;AAAA,MAAd,EAAE,GAAGC;AAAL,GAAc;AACnD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACvCa,IAAAA,QAAQ,EAAE,MAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,MAF2B;AAGvCC,IAAAA,IAAI,EAAE,EAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAOA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC;AACvCoB,IAAAA,OAAO,EAAE,IAD8B;AAEvCC,IAAAA,UAAU,EAAE,IAF2B;AAGvCC,IAAAA,UAAU,EAAE,IAH2B;AAIvCC,IAAAA,SAAS,EAAE,IAJ4B;AAKvCC,IAAAA,WAAW,EAAE,IAL0B;AAMvCC,IAAAA,QAAQ,EAAE,IAN6B;AAOvCC,IAAAA,eAAe,EAAE,IAPsB;AAQvCC,IAAAA,OAAO,EAAE,CAR8B;AASvCC,IAAAA,OAAO,EAAE,EAT8B;AAUvCC,IAAAA,QAAQ,EAAE,CAV6B;AAWvCC,IAAAA,QAAQ,EAAE;AAX6B,GAAD,CAAxC;AAcA,QAAMC,mBAAmB,GAAG9B,WAAW,CACrC,CAAC+B,IAAD,EAAOC,KAAP,KACEd,WAAW,CAAED,QAAD,KAAe,EACzB,GAAGA,QADsB;AAEzB,KAACc,IAAD,GAAQC;AAFiB,GAAf,CAAD,CAFwB,EAMrC,EANqC,CAAvC;AASA,sBACE;AAAA,2BACE,QAAC,KAAD,OACMtB,QADN;AAAA,SAEMO,QAFN;AAGE,MAAA,gBAAgB,EAAEN,WAHpB;AAIE,MAAA,wBAAwB,EAAGH,gBAAD,IAAsBC,mBAAmB,CAACD,gBAAD,CAJrE;AAAA,SAKMD,KALN;AAAA,8BAOE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEU,QAAxB;AAAkC,QAAA,gBAAgB,EAAET,gBAApD;AAAsE,QAAA,QAAQ,EAAEsB;AAAhF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GAlDuBxB,c;;KAAAA,c","sourcesContent":["import MapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen,\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\nexport default function MapInteraction({ ...other }) {\n  const [interactionState, setInteractionState] = useState({});\n  const [viewport, setViewport] = useState({\n    latitude: 37.729,\n    longitude: -122.36,\n    zoom: 11,\n    bearing: 0,\n    pitch: 50,\n  });\n  const [settings, setSettings] = useState({\n    dragPan: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchZoom: true,\n    touchRotate: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85,\n  });\n\n  const handleChangeSetting = useCallback(\n    (name, value) =>\n      setSettings((settings) => ({\n        ...settings,\n        [name]: value,\n      })),\n    []\n  );\n\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        {...settings}\n        onViewportChange={setViewport}\n        onInteractionStateChange={(interactionState) => setInteractionState(interactionState)}\n        {...other}\n      >\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n\n        <ControlPanel settings={settings} interactionState={interactionState} onChange={handleChangeSetting} />\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}