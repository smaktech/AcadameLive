{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\sections\\\\map\\\\MapZoomToBounds.js\",\n    _s = $RefreshSig$();\n\nimport bbox from '@turf/bbox';\nimport { useState } from 'react';\nimport MapGL, { LinearInterpolator, WebMercatorViewport } from 'react-map-gl'; // _mock_\n\nimport MAP_STYLE from '../../_mock/map/map-style-basic-v8.json'; // components\n\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapStyle = { ...MAP_STYLE,\n  sources: { ...MAP_STYLE.sources\n  },\n  layers: MAP_STYLE.layers.slice()\n};\nmapStyle.sources['sf-neighborhoods'] = {\n  type: 'geojson',\n  data: 'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json'\n};\nmapStyle.layers.push({\n  id: 'sf-neighborhoods-fill',\n  source: 'sf-neighborhoods',\n  type: 'fill',\n  paint: {\n    'fill-outline-color': '#0040c8',\n    'fill-color': '#fff',\n    'fill-opacity': 0\n  }\n}, {\n  id: 'sf-neighborhoods-outline',\n  source: 'sf-neighborhoods',\n  type: 'line',\n  paint: {\n    'line-width': 2,\n    'line-color': '#0080ef'\n  }\n}); // ----------------------------------------------------------------------\n\nexport default function MapZoomToBounds(_ref) {\n  _s();\n\n  let { ...other\n  } = _ref;\n  const [viewport, setViewport] = useState({\n    latitude: 37.78,\n    longitude: -122.4,\n    zoom: 11,\n    bearing: 0,\n    pitch: 0\n  });\n\n  const onClick = event => {\n    const feature = event.features[0];\n\n    if (feature) {\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature);\n      const viewports = new WebMercatorViewport(viewport);\n      const {\n        longitude,\n        latitude,\n        zoom\n      } = viewports.fitBounds([[minLng, minLat], [maxLng, maxLat]], {\n        padding: 40\n      });\n      setViewport({\n        longitude,\n        latitude,\n        zoom,\n        transitionInterpolator: new LinearInterpolator({\n          around: [event.offsetCenter.x, event.offsetCenter.y]\n        }),\n        transitionDuration: 1000\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapGL, { ...viewport,\n      mapStyle: mapStyle,\n      onViewportChange: setViewport,\n      onClick: onClick,\n      interactiveLayerIds: ['sf-neighborhoods-fill'],\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapZoomToBounds, \"4+1/7+Z5qe3tffpDbCbkcYtw3do=\");\n\n_c = MapZoomToBounds;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapZoomToBounds\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/sections/map/MapZoomToBounds.js"],"names":["bbox","useState","MapGL","LinearInterpolator","WebMercatorViewport","MAP_STYLE","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","mapStyle","sources","layers","slice","type","data","push","id","source","paint","MapZoomToBounds","other","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","onClick","event","feature","features","minLng","minLat","maxLng","maxLat","viewports","fitBounds","padding","transitionInterpolator","around","offsetCenter","x","y","transitionDuration"],"mappings":"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","sourcesContent":["import bbox from '@turf/bbox';\nimport { useState } from 'react';\nimport MapGL, { LinearInterpolator, WebMercatorViewport } from 'react-map-gl';\n// _mock_\nimport MAP_STYLE from '../../_mock/map/map-style-basic-v8.json';\n// components\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../components/map';\n\n// ----------------------------------------------------------------------\n\nconst mapStyle = {\n  ...MAP_STYLE,\n  sources: { ...MAP_STYLE.sources },\n  layers: MAP_STYLE.layers.slice(),\n};\n\nmapStyle.sources['sf-neighborhoods'] = {\n  type: 'geojson',\n  data: 'https://raw.githubusercontent.com/uber/react-map-gl/master/examples/.data/feature-example-sf.json',\n};\n\nmapStyle.layers.push(\n  {\n    id: 'sf-neighborhoods-fill',\n    source: 'sf-neighborhoods',\n    type: 'fill',\n    paint: {\n      'fill-outline-color': '#0040c8',\n      'fill-color': '#fff',\n      'fill-opacity': 0,\n    },\n  },\n  {\n    id: 'sf-neighborhoods-outline',\n    source: 'sf-neighborhoods',\n    type: 'line',\n    paint: {\n      'line-width': 2,\n      'line-color': '#0080ef',\n    },\n  }\n);\n\n// ----------------------------------------------------------------------\n\nexport default function MapZoomToBounds({ ...other }) {\n  const [viewport, setViewport] = useState({\n    latitude: 37.78,\n    longitude: -122.4,\n    zoom: 11,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const onClick = (event) => {\n    const feature = event.features[0];\n    if (feature) {\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature);\n      const viewports = new WebMercatorViewport(viewport);\n      const { longitude, latitude, zoom } = viewports.fitBounds(\n        [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ],\n        { padding: 40 }\n      );\n      setViewport({\n        longitude,\n        latitude,\n        zoom,\n        transitionInterpolator: new LinearInterpolator({\n          around: [event.offsetCenter.x, event.offsetCenter.y],\n        }),\n        transitionDuration: 1000,\n      });\n    }\n  };\n\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        mapStyle={mapStyle}\n        onViewportChange={setViewport}\n        onClick={onClick}\n        interactiveLayerIds={['sf-neighborhoods-fill']}\n        {...other}\n      >\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </MapGL>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}