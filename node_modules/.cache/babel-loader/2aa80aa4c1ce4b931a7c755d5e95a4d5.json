{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch as useAppDispatch, useSelector as useAppSelector } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootPersistConfig, rootReducer } from './rootReducer'; // ----------------------------------------------------------------------\n\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\nconst persistor = persistStore(store);\nconst {\n  dispatch\n} = store;\nconst useSelector = useAppSelector;\n\nconst useDispatch = () => {\n  _s();\n\n  return useAppDispatch();\n};\n\n_s(useDispatch, \"p7p2+qQCkUMX78ZB6lQT0p5eiKs=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport { store, persistor, dispatch, useSelector, useDispatch };","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/redux/store.js"],"names":["configureStore","useDispatch","useAppDispatch","useSelector","useAppSelector","persistStore","persistReducer","rootPersistConfig","rootReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistor","dispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAW,IAAIC,cAAxB,EAAwCC,WAAW,IAAIC,cAAvD,QAA6E,aAA7E;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,eAA/C,C,CAEA;;AAEA,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAC3BU,EAAAA,OAAO,EAAEJ,cAAc,CAACC,iBAAD,EAAoBC,WAApB,CADI;AAE3BG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE,KADA;AAEnBC,IAAAA,cAAc,EAAE;AAFG,GAAD;AAHK,CAAD,CAA5B;AASA,MAAMC,SAAS,GAAGV,YAAY,CAACI,KAAD,CAA9B;AAEA,MAAM;AAAEO,EAAAA;AAAF,IAAeP,KAArB;AAEA,MAAMN,WAAW,GAAGC,cAApB;;AACA,MAAMH,WAAW,GAAG;AAAA;;AAAA,SAAMC,cAAc,EAApB;AAAA,CAApB;;GAAMD,W;UAAoBC,c;;;AAE1B,SAASO,KAAT,EAAgBM,SAAhB,EAA2BC,QAA3B,EAAqCb,WAArC,EAAkDF,WAAlD","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch as useAppDispatch, useSelector as useAppSelector } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootPersistConfig, rootReducer } from './rootReducer';\n\n// ----------------------------------------------------------------------\n\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false,\n    }),\n});\n\nconst persistor = persistStore(store);\n\nconst { dispatch } = store;\n\nconst useSelector = useAppSelector;\nconst useDispatch = () => useAppDispatch();\n\nexport { store, persistor, dispatch, useSelector, useDispatch };\n"]},"metadata":{},"sourceType":"module"}