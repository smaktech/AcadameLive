{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Cdss apps\\\\Final version\\\\admin\\\\src\\\\pages\\\\boards\\\\AddEditBoards.js\",\n    _s = $RefreshSig$();\n\n//page for all users listing!\nimport React, { useState, useEffect, forwardRef, useRef } from 'react';\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate, Redirect } from 'react-router-dom';\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile';\nimport Loader from \"react-loader-spinner\";\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\nimport MaterialTable from 'material-table';\nimport { fetchboards, editBoards, deleteboard, getBoardById } from \"../../api/Boards/Boards\";\nimport { createBoard } from '../../api/Boards/Boards';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditBoards(props) {\n  _s();\n\n  // const boardId = props.match.params.board/oardStatus;\n  const {\n    boardId,\n    boardStatus\n  } = useParams();\n  console.log('Check board id', boardId);\n  const [mode, setMode] = useState(boardId ? \"edit\" : \"add\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate(); //sets and display the line in the success modal!\n\n  const [modalLine1, setModalLine1] = useState('');\n  const [modalLine2, setModalLine2] = useState(''); //sets the loader for add board button\n\n  const [addLoader, setAddLoader] = useState(false); //sets the loader for edit board button\n\n  const [editLoader, setEditLoader] = useState(false); //sets the loader for edit subject button\n\n  const [editFormLoader, setEditFormLoader] = useState(false); //sets the name of the board user want to add\n\n  const [boardName, setboardName] = useState(); //shows the error when users try to add board without name\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [error, showError] = useState(false);\n  const [boardIcon, setBoardIcon] = useState(\"\"); //updating mode state on change of board id\n\n  useEffect(() => {\n    setMode(boardId ? \"edit\" : \"add\");\n    setEditFormLoader(true);\n    getBoardById(boardId).then(res => {\n      console.log('res', res);\n\n      if (res.status) {\n        //setting the fetched board by id into state variable\n        setboardName(res.course.name);\n      }\n\n      setEditFormLoader(false);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [boardId]);\n  console.log(boardId, boardName, boardStatus); //edit the details basically the name of the existing board\n\n  function editboardDetails() {\n    setModalVisible(false);\n    setEditLoader(true);\n    showError(false);\n\n    if (boardName != '') {\n      editBoards(boardId, boardName, boardStatus, boardIcon).then(res => {\n        console.log('hello', res);\n\n        if (res.status) {\n          setEditLoader(false);\n          setModalLine1('Board details has been');\n          setModalLine2('updated successfully');\n          setModalVisible(true);\n        } else {\n          setEditLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.error(err);\n        setEditLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the board name');\n    }\n  } //adds new board \n\n\n  function addNewboard() {\n    setModalVisible(false);\n    setAddLoader(true);\n    showError(false);\n\n    if (boardName != '') {\n      createBoard(boardName, 'active', boardIcon).then(res => {\n        console.log(res);\n\n        if (res.status) {\n          setAddLoader(false);\n          setModalLine1('New Board Added');\n          setModalLine2('Successfully');\n          setModalVisible(true);\n        } else {\n          setAddLoader(false);\n          showError(true);\n          setErrorMessage('Error occured');\n        }\n      }).catch(err => {\n        console.log(err);\n        setAddLoader(false);\n        showError(true);\n        setErrorMessage('Error occured');\n      });\n    } else {\n      setAddLoader(false);\n      showError(true);\n      setErrorMessage('Please fill the board name');\n    }\n  } // function to reset\n\n\n  const reSetForm = () => {\n    setboardName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-3 txt-5282F0 fw-bold\",\n      children: \"Boards Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), editFormLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 py-2 px-6 me-3\",\n      style: {\n        display: 'flex',\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row pt-2 \",\n                style: {\n                  margin: 5\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-5  col-sm-12 clr-danger-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"   text-center\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \" \"\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-6 col-sm-6 col-12\",\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: mode == 'edit' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-3\",\n                      controlId: \"exampleForm.ControlInput1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Board Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        value: boardName,\n                        type: \"text\",\n                        placeholder: \"Enter board Name\",\n                        onChange: e => setboardName(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-3\",\n                      controlId: \"exampleForm.ControlTextarea1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Choose Icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"file\",\n                        placeholder: \"choose Sub Topic Exam Zip\",\n                        onChange: e => setBoardIcon(e.target.files[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-3\",\n                      controlId: \"exampleForm.ControlInput1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Board Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Enter board Name\",\n                        onChange: e => setboardName(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"mb-3\",\n                      controlId: \"exampleForm.ControlTextarea1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Choose Icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"file\",\n                        placeholder: \"choose Sub Topic Exam Zip\",\n                        onChange: e => setBoardIcon(e.target.files[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: mode == \"edit\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => navigate('/dashboard/boards'),\n                variant: \"outlined\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n              children: editLoader ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => {\n                  editboardDetails();\n                },\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-2 col-6 mt-3 \",\n            children: addLoader ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => addNewboard(),\n              children: \"Add board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalVisible,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      onClose: () => setModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center txt-5282F0 my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/Assets/modalPhoto.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: modalLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"modalLowerText\",\n              children: modalLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \" px-5\",\n              style: {\n                marginRight: 10\n              },\n              onClick: () => {\n                mode == 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm())\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (setModalVisible(false), reSetForm(), navigate('/dashboard/boards/addBoard'))\n                }, void 0, false);\n              },\n              children: \"Add New Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: \" px-5\",\n              style: {\n                marginRight: 10\n              },\n              onClick: () => navigate('/dashboard/boards'),\n              children: \"Back To Boards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEditBoards, \"cXIk30SNNljihNmUCxXra/ymXNU=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddEditBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditBoards\");","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/boards/AddEditBoards.js"],"names":["React","useState","useEffect","forwardRef","useRef","InputGroup","FormControl","Table","Form","ModalHeader","useSelector","Link","useNavigate","Redirect","updatePassword","changeName","uploadImage","Loader","BsSortDownAlt","BsFillTrashFill","BiBlock","MaterialTable","fetchboards","editBoards","deleteboard","getBoardById","createBoard","useParams","CircularProgress","Card","CardContent","Button","Modal","BootstrapModal","Grid","Box","modalStyle","AddEditBoards","props","boardId","boardStatus","console","log","mode","setMode","modalVisible","setModalVisible","navigate","modalLine1","setModalLine1","modalLine2","setModalLine2","addLoader","setAddLoader","editLoader","setEditLoader","editFormLoader","setEditFormLoader","boardName","setboardName","errorMessage","setErrorMessage","error","showError","boardIcon","setBoardIcon","then","res","status","course","name","catch","err","editboardDetails","addNewboard","reSetForm","display","height","justifyContent","alignItems","margin","e","target","value","files","marginRight"],"mappings":"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","sourcesContent":["//page for all users listing!\n\nimport React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport { InputGroup, FormControl, Table, Form } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { useSelector } from 'react-redux'\nimport { Link, useNavigate, Redirect } from 'react-router-dom'\nimport { updatePassword, changeName, uploadImage } from '../../api/Profile/Profile'\nimport Loader from \"react-loader-spinner\";\n\n\n\nimport { BsSortDownAlt, BsFillTrashFill, BiBlock } from \"react-icons/bs\";\n\nimport MaterialTable from 'material-table'\nimport { fetchboards, editBoards, deleteboard, getBoardById } from \"../../api/Boards/Boards\"\n\nimport { createBoard } from '../../api/Boards/Boards'\nimport { useParams } from 'react-router-dom'\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { Button } from '@mui/material'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport Grid from '@mui/material/Grid';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { modalStyle } from 'src/config'\n\n\nexport default function AddEditBoards(props) {\n    // const boardId = props.match.params.board/oardStatus;\n    const { boardId, boardStatus } = useParams()\n    console.log('Check board id', boardId)\n    const [mode, setMode] = useState(boardId ? \"edit\" : \"add\")\n\n    const [modalVisible, setModalVisible] = useState(false)\n    const navigate = useNavigate()\n\n    //sets and display the line in the success modal!\n    const [modalLine1, setModalLine1] = useState('');\n    const [modalLine2, setModalLine2] = useState('')\n\n    //sets the loader for add board button\n    const [addLoader, setAddLoader] = useState(false)\n\n    //sets the loader for edit board button\n    const [editLoader, setEditLoader] = useState(false)\n\n    //sets the loader for edit subject button\n    const [editFormLoader, setEditFormLoader] = useState(false)\n\n    //sets the name of the board user want to add\n    const [boardName, setboardName] = useState();\n\n    //shows the error when users try to add board without name\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [error, showError] = useState(false);\n\n    const [boardIcon, setBoardIcon] = useState(\"\");\n\n    //updating mode state on change of board id\n    useEffect(() => {\n        setMode(boardId ? \"edit\" : \"add\")\n        setEditFormLoader(true)\n        getBoardById(boardId).then((res) => {\n            console.log('res', res);\n            if (res.status) {\n                //setting the fetched board by id into state variable\n                setboardName(res.course.name)\n            }\n            setEditFormLoader(false)\n        })\n            .catch((err) => {\n                console.error(err);\n            });\n    }, [boardId])\n\n    console.log(boardId, boardName, boardStatus)\n    //edit the details basically the name of the existing board\n    function editboardDetails() {\n        setModalVisible(false);\n        setEditLoader(true);\n        showError(false);\n        if (boardName != '') {\n            editBoards(boardId, boardName, boardStatus,boardIcon)\n                .then((res) => {\n                    console.log('hello', res);\n                    if (res.status) {\n                        setEditLoader(false);\n                        setModalLine1('Board details has been');\n                        setModalLine2('updated successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setEditLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEditLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the board name');\n        }\n\n    }\n\n    //adds new board \n    function addNewboard() {\n        setModalVisible(false);\n        setAddLoader(true);\n        showError(false);\n        if (boardName != '') {\n            createBoard(boardName, 'active', boardIcon)\n                .then((res) => {\n                    console.log(res);\n                    if (res.status) {\n                        setAddLoader(false);\n                        setModalLine1('New Board Added');\n                        setModalLine2('Successfully')\n                        setModalVisible(true)\n                    }\n                    else {\n                        setAddLoader(false);\n                        showError(true);\n                        setErrorMessage('Error occured');\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    setAddLoader(false)\n                    showError(true);\n                    setErrorMessage('Error occured');\n                })\n        }\n        else {\n            setAddLoader(false)\n            showError(true);\n            setErrorMessage('Please fill the board name');\n        }\n    }\n\n    // function to reset\n    const reSetForm = () => {\n        setboardName('')\n    }\n\n\n    return (\n        <>\n\n            {/* <div className=\"container\" style={{overflowY: 'scroll'}}> */}\n            <h5 className=\"mt-3 txt-5282F0 fw-bold\">Boards Management</h5>\n            <hr className=\"mt-4\" />\n            {editFormLoader ? (\n                <div className='w-100 py-2 px-6 me-3' style={{ display: 'flex', height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\n                    <CircularProgress size={20} />\n                </div>\n            ) : (\n                <>\n                    <div className=\" align-items-center\">\n                        <Card className=\"w-100\">\n                            <CardContent>\n                                <div className=\"row\">\n                                    {\n                                        (error) ?\n                                            <div className=\"row pt-2 \" style={{ margin: 5 }}>\n                                                <div className=\"col-md-5  col-sm-12 clr-danger-100\">\n                                                    <div className=\"   text-center\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            :\n                                            <> </>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6 col-12\">\n                                        {/* <InputGroup className=\"mb-3\" >\n\n                                            {mode == 'edit' ? (\n                                                <FormControl\n                                                    placeholder=\"Enter board Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setboardName(e.target.value)}\n                                                    value={boardName}\n                                                    required\n                                                />\n                                            ) : (\n                                                <FormControl\n                                                    placeholder=\"Enter board Name\"\n                                                    aria-label=\"Search\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    onChange={(e) => setboardName(e.target.value)}\n                                                    required\n                                                />\n                                            )}\n\n                                        </InputGroup> */}\n\n                                        <Form>\n                                            {mode == 'edit' ? (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control value={boardName} type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setboardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control   type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                        <Form.Label>Board Name</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter board Name\" onChange={(e) => setboardName(e.target.value)} />\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                                        <Form.Label>Choose Icon</Form.Label>\n                                                        <Form.Control type=\"file\" placeholder=\"choose Sub Topic Exam Zip\" onChange={(e) => setBoardIcon(e.target.files[0])} />\n                                                    </Form.Group>\n                                                </>\n                                            )}\n                                        </Form>\n                                    </div>\n\n\n                                </div>\n\n                            </CardContent>\n                        </Card>\n                        <div className=\"row\">\n\n                            {mode == \"edit\" ? (\n                                <>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        <Button onClick={() => navigate('/dashboard/boards')} variant=\"outlined\">Cancel</Button>\n                                    </div>\n                                    <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                        {editLoader ? (\n                                            <Button variant=\"outlined\">\n                                                <CircularProgress size={20} />\n                                            </Button>\n                                        ) : (\n                                            <Button variant=\"contained\" onClick={() => { editboardDetails() }}>Save Changes</Button>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n\n                                <div className=\"col-lg-2 col-md-2 col-6 mt-3 \">\n                                    {addLoader ? (\n                                        <Button variant=\"outlined\">\n                                            <CircularProgress size={20} />\n                                        </Button>\n                                    ) : (\n                                        <Button variant=\"contained\" onClick={() => addNewboard()}\n                                        >Add board</Button>\n                                    )}\n\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n\n                </>\n            )}\n            <Modal\n                open={modalVisible}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onClose={() => setModalVisible(false)}\n            >\n                <Box sx={modalStyle}>\n                    <BootstrapModal.Body>\n                        <div className=\"text-center txt-5282F0 my-4\">\n                            <img src={'/Assets/modalPhoto.png'} />\n                            <h3>{modalLine1}</h3>\n                            <h3 className=\"modalLowerText\">{modalLine2}</h3>\n                        </div>\n                        <div className=\"text-center mt-4 pb-3\">\n                            <Button variant=\"outlined\" className=\" px-5\" style={{ marginRight: 10 }}\n                                onClick={() => { mode == 'add' ? (<>{setModalVisible(false), reSetForm()}</>) : (<>{setModalVisible(false), reSetForm(), navigate('/dashboard/boards/addBoard')}</>) }}\n                            >Add New Board</Button>\n                            &emsp;\n                            <Button variant=\"contained\" className=\" px-5\" style={{ marginRight: 10 }}\n                                onClick={() => navigate('/dashboard/boards')}\n                            >Back To Boards</Button>\n                        </div>\n                    </BootstrapModal.Body>\n                </Box>\n            </Modal>\n\n\n\n            {/* </div> */}\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}