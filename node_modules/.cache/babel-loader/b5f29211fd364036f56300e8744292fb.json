{"ast":null,"code":"// @mui\nimport{Table,TableRow,TableHead,TableBody,TableCell,TableContainer}from'@mui/material';// components\nimport Scrollbar from'../../../../components/Scrollbar';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var BASIC_TABLE=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];// ----------------------------------------------------------------------\nexport default function BasicTable(){return/*#__PURE__*/_jsx(Scrollbar,{children:/*#__PURE__*/_jsx(TableContainer,{sx:{minWidth:800,mt:3},children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Dessert (100g serving)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Fat\\xA0(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Carbs\\xA0(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Protein\\xA0(g)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:BASIC_TABLE.map(function(row){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:row.name}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.calories}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.fat}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.carbs}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.protein})]},row.name);})})]})})});}","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/overview/mui/table/BasicTable.js"],"names":["Table","TableRow","TableHead","TableBody","TableCell","TableContainer","Scrollbar","createData","name","calories","fat","carbs","protein","BASIC_TABLE","BasicTable","minWidth","mt","map","row"],"mappings":"AAAA;AACA,OAASA,KAAT,CAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,SAArC,CAAgDC,SAAhD,CAA2DC,cAA3D,KAAiF,eAAjF,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CAEA;wFAEA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,QAA1B,CAAoCC,GAApC,CAAyCC,KAAzC,CAAgDC,OAAhD,CAAyD,CACvD,MAAO,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,GAAG,CAAHA,GAAlB,CAAuBC,KAAK,CAALA,KAAvB,CAA8BC,OAAO,CAAPA,OAA9B,CAAP,CACD,CAED,GAAMC,CAAAA,WAAW,CAAG,CAClBN,UAAU,CAAC,gBAAD,CAAmB,GAAnB,CAAwB,GAAxB,CAA6B,EAA7B,CAAiC,GAAjC,CADQ,CAElBA,UAAU,CAAC,oBAAD,CAAuB,GAAvB,CAA4B,GAA5B,CAAiC,EAAjC,CAAqC,GAArC,CAFQ,CAGlBA,UAAU,CAAC,QAAD,CAAW,GAAX,CAAgB,IAAhB,CAAsB,EAAtB,CAA0B,GAA1B,CAHQ,CAIlBA,UAAU,CAAC,SAAD,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,EAAtB,CAA0B,GAA1B,CAJQ,CAKlBA,UAAU,CAAC,aAAD,CAAgB,GAAhB,CAAqB,IAArB,CAA2B,EAA3B,CAA+B,GAA/B,CALQ,CAApB,CAQA;AAEA,cAAe,SAASO,CAAAA,UAAT,EAAsB,CACnC,mBACE,KAAC,SAAD,wBACE,KAAC,cAAD,EAAgB,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAiBC,EAAE,CAAE,CAArB,CAApB,uBACE,MAAC,KAAD,yBACE,KAAC,SAAD,wBACE,MAAC,QAAD,yBACE,KAAC,SAAD,qCADF,cAEE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,sBAFF,cAGE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,wBAHF,cAIE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,0BAJF,cAKE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,4BALF,GADF,EADF,cAUE,KAAC,SAAD,WACGH,WAAW,CAACI,GAAZ,CAAgB,SAACC,GAAD,qBACf,MAAC,QAAD,yBACE,KAAC,SAAD,EAAW,SAAS,CAAC,IAArB,CAA0B,KAAK,CAAC,KAAhC,UACGA,GAAG,CAACV,IADP,EADF,cAIE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BU,GAAG,CAACT,QAA9B,EAJF,cAKE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BS,GAAG,CAACR,GAA9B,EALF,cAME,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BQ,GAAG,CAACP,KAA9B,EANF,cAOE,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BO,GAAG,CAACN,OAA9B,EAPF,GAAeM,GAAG,CAACV,IAAnB,CADe,EAAhB,CADH,EAVF,GADF,EADF,EADF,CA8BD","sourcesContent":["// @mui\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@mui/material';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst BASIC_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BasicTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}