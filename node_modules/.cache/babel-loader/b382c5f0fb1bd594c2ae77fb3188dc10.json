{"ast":null,"code":"import _toConsumableArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/Projects/Cdss apps/Final version/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Container from'@material-ui/core/Container';import{createQuestion}from'../../api/Question/Question';import test from'./image/logo.png';import TextField from'@material-ui/core/TextField';// import Button from '@material-ui/core/Button';\nimport{Button,Input}from'@mui/material';import IconButton from'@material-ui/core/IconButton';import RemoveIcon from'@material-ui/icons/Remove';import AddIcon from'@material-ui/icons/Add';import Icon from'@material-ui/core/Icon';import{v4 as uuidv4}from'uuid';import{Form,Row,Card,Carousel}from'react-bootstrap';import'./app.css';import{makeStyles}from'@material-ui/core/styles';import Dynfield from'./dynfield';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1)}},button:{margin:theme.spacing(1)}};});function Addmoreinput(){var classes=useStyles();var _useState=useState(),_useState2=_slicedToArray(_useState,2),question=_useState2[0],setQuestion=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),media=_useState4[0],setMedia=_useState4[1];var _useState5=useState([{type:'',hint:'',answer:'',marks:''}]),_useState6=_slicedToArray(_useState5,2),inputFields=_useState6[0],setInputFields=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),selectedFile=_useState8[0],setSelectedFile=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),preview=_useState10[0],setPreview=_useState10[1];useEffect(function(){if(!selectedFile){setPreview(undefined);return;}var objectUrl=URL.createObjectURL(selectedFile);setPreview(objectUrl);// free memory when ever this component is unmounted\nreturn function(){return URL.revokeObjectURL(objectUrl);};},[selectedFile]);var onSelectFile=function onSelectFile(e){if(!e.target.files||e.target.files.length===0){setSelectedFile(undefined);return;}// I've kept this example simple by using the first image instead of multiple\nsetSelectedFile(e.target.files[0]);};var handleSubmit=function handleSubmit(e){e.preventDefault();console.log(\"InputFields\",inputFields);};var handleChangeInput=function handleChangeInput(id,event){var newInputFields=inputFields.map(function(i){if(id===i.id){i[event.target.name]=event.target.value;}return i;});setInputFields(newInputFields);};var handleAddFields=function handleAddFields(){setInputFields([].concat(_toConsumableArray(inputFields),[{type:'',hint:'',answer:'',marks:''}]));};var handleRemoveFields=function handleRemoveFields(id){var values=_toConsumableArray(inputFields);values.splice(values.findIndex(function(value){return value.id===id;}),1);setInputFields(values);};function addQuestion(){createQuestion(question,selectedFile);}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"form\",{className:classes.root,onSubmit:handleSubmit,children:inputFields.map(function(inputField){return/*#__PURE__*/_jsx(\"div\",{},inputField.id);})})});}export default Addmoreinput;{/* <TextField\r\n                            name=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            variant=\"filled\"\r\n                            value={inputField.lastName}\r\n                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                        /> */}{/* <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                            <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={handleAddFields}\r\n                        >\r\n                            <AddIcon />\r\n                        </IconButton> */}{/* <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    endIcon={<Icon>send</Icon>}\r\n                    onClick={handleSubmit}\r\n                >Send</Button> */}//// 4 fields\n// <div className=\" col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3 mt-3\" controlId=\"exampleForm.ControlInput1\" >\n//                 <Form.Label>Type</Form.Label>\n//                 <Form.Select aria-label=\"Default select example\">\n//                     <option>Select</option>\n//                     <option>Option A</option>\n//                     <option>Option B</option>\n//                     <option>Option C</option>\n//                     <option>Option D</option>\n//                     <Form.Control type=\"text\" name='type' value={inputField.type}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//                 </Form.Select>\n//                 {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\n//             </Form.Group>\n//         </div>\n//         <div className=\"hint col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Hint</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='hint' value={inputField.hint}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>\n//         <div className=\"ans col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Answer</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='answer' value={inputField.answer}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>\n//         <div className=\"marks col-lg-5 col-sm-6 col-12\">\n//             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n//                 <Form.Label>Marks</Form.Label>\n//                 {/* <Form.Select  aria-label=\"Default select example\"> */}\n//                 {/* </Form.Select> */}\n//                 <Form.Control type=\"text\" name='marks' value={inputField.marks}\n//                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\n//             </Form.Group>\n//         </div>","map":{"version":3,"sources":["D:/Projects/Cdss apps/Final version/admin/src/pages/evaluation/dynamic.js"],"names":["React","useState","useEffect","Container","createQuestion","test","TextField","Button","Input","IconButton","RemoveIcon","AddIcon","Icon","v4","uuidv4","Form","Row","Card","Carousel","makeStyles","Dynfield","useStyles","theme","root","margin","spacing","button","Addmoreinput","classes","question","setQuestion","media","setMedia","type","hint","answer","marks","inputFields","setInputFields","selectedFile","setSelectedFile","preview","setPreview","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectFile","e","target","files","length","handleSubmit","preventDefault","console","log","handleChangeInput","id","event","newInputFields","map","i","name","value","handleAddFields","handleRemoveFields","values","splice","findIndex","addQuestion","inputField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { createQuestion} from '../../api/Question/Question'\r\nimport test from './image/logo.png';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\nimport { Button, Input } from '@mui/material'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Row, Card, Carousel } from 'react-bootstrap'\r\nimport './app.css'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dynfield from './dynfield';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n      },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\nfunction Addmoreinput() {\r\n    const classes = useStyles()\r\n    const [question, setQuestion] = useState()\r\n    const [media, setMedia] = useState();\r\n    const [inputFields, setInputFields] = useState([\r\n        { type: '', hint: '', answer: '', marks: '' },\r\n    ]);\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n\r\n        // free memory when ever this component is unmounted\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n\r\n    const onSelectFile = e => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n\r\n        // I've kept this example simple by using the first image instead of multiple\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n    };\r\n\r\n    const handleChangeInput = (id, event) => {\r\n        const newInputFields = inputFields.map(i => {\r\n            if (id === i.id) {\r\n                i[event.target.name] = event.target.value\r\n            }\r\n            return i;\r\n        })\r\n\r\n        setInputFields(newInputFields);\r\n    }\r\n\r\n    const handleAddFields = () => {\r\n        setInputFields([...inputFields, { type: '', hint: '', answer: '', marks: '' }])\r\n    }\r\n\r\n    const handleRemoveFields = id => {\r\n        const values = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n    }\r\n    function addQuestion() {\r\n        createQuestion(question, selectedFile)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <form className={classes.root} onSubmit={handleSubmit}>\r\n                {inputFields.map(inputField => (\r\n                    <div key={inputField.id}>\r\n                        {/* <TextField\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                            variant=\"filled\"\r\n                            value={inputField.firstName}\r\n                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                        /> */}\r\n                        {/* <div class=\"ques\">\r\n                            <Row>  <Form.Group className=\"mb-6 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                                <Form.Label>Question</Form.Label>\r\n\r\n                                <Form.Control type=\"text\" value={question} onChange={(e) => setQuestion(e.target.value)}  as=\"textarea\" rows={5}   ></Form.Control>\r\n                            </Row>\r\n                            <Row>\r\n                                <div class='IV' >\r\n                                    <h1 class=\"ig\">Media</h1>\r\n                                    <Card style={{ backgroundColor: \"gray\" }} className='imght'>\r\n                                    <Form.Control type=\"file\"  onChange={onSelectFile} onChange1={(e) => setMedia(e.target.value)} />\r\n                                        {selectedFile && <img src={preview} width='80%' />}</Card>\r\n                                        \r\n                                </div>\r\n                                \r\n                            </Row>\r\n                            \r\n                            \r\n                        </div> */}\r\n                        {/* <Button className=\"btn btn-warning\" size='small' onClick={() => addQuestion()} variant=\"contained\">Save Question</Button> */}\r\n\r\n\r\n                        {/* <div class='btnadd'>\r\n                            <Button class=\" btn-secondary btn-sm\" onClick={handleAddFields}><AddIcon /></Button>\r\n                            \r\n                        </div> */}\r\n\r\n                        {/* <span> <Button class=\" btnsub btn-secondary btn-sm ml-3\" onClick={handleRemoveFields}><RemoveIcon /></Button> </span> */}\r\n\r\n\r\n                    </div>\r\n\r\n                ))}\r\n\r\n\r\n                {/* Answer in part checking */}\r\n\r\n                {/* <div class=\"ques\">\r\n                            <Form.Group className=\"mb-6 mt-3 \" controlId=\"exampleForm.ControlTextarea1\" ></Form.Group>\r\n                            <Form.Label>Answer in Part</Form.Label>\r\n                            \r\n                           \r\n                        </div>\r\n                        <div>\r\n                        <Form.Label>Hint</Form.Label>\r\n                        <Form.Control type=\"text\" name='marks'  ></Form.Control>\r\n                        </div> */}\r\n                {/* <div class='fieldhead'>\r\n                    <div class='type1'><Form.Label>Type</Form.Label></div>\r\n\r\n                    <div class='hint1'>  <Form.Label>Hint</Form.Label></div>\r\n                    <div class='marks1'>  <Form.Label>Marks</Form.Label></div>\r\n                    <div class='answer1'> <Form.Label>Answer</Form.Label></div>\r\n                </div> */}\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Addmoreinput;\r\n\r\n\r\n\r\n\r\n{/* <TextField\r\n                            name=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            variant=\"filled\"\r\n                            value={inputField.lastName}\r\n                            onChange={event => handleChangeInput(inputField.id, event)}\r\n                        /> */}\r\n{/* <IconButton disabled={inputFields.length === 1} onClick={() => handleRemoveFields(inputField.id)}>\r\n                            <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={handleAddFields}\r\n                        >\r\n                            <AddIcon />\r\n                        </IconButton> */}\r\n\r\n{/* <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    endIcon={<Icon>send</Icon>}\r\n                    onClick={handleSubmit}\r\n                >Send</Button> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                //// 4 fields\r\n                // <div className=\" col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3 mt-3\" controlId=\"exampleForm.ControlInput1\" >\r\n                //                 <Form.Label>Type</Form.Label>\r\n                //                 <Form.Select aria-label=\"Default select example\">\r\n                //                     <option>Select</option>\r\n                //                     <option>Option A</option>\r\n                //                     <option>Option B</option>\r\n                //                     <option>Option C</option>\r\n                //                     <option>Option D</option>\r\n                //                     <Form.Control type=\"text\" name='type' value={inputField.type}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //                 </Form.Select>\r\n                //                 {/* <Form.Control type=\"text\" name='optionA' value={inputField.optionA}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control> */}\r\n                //             </Form.Group>\r\n\r\n                //         </div>\r\n                //         <div className=\"hint col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Hint</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='hint' value={inputField.hint}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>\r\n                //         <div className=\"ans col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Answer</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='answer' value={inputField.answer}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>\r\n                //         <div className=\"marks col-lg-5 col-sm-6 col-12\">\r\n                //             <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                //                 <Form.Label>Marks</Form.Label>\r\n                //                 {/* <Form.Select  aria-label=\"Default select example\"> */}\r\n\r\n                //                 {/* </Form.Select> */}\r\n                //                 <Form.Control type=\"text\" name='marks' value={inputField.marks}\r\n                //                     onChange={event => handleChangeInput(inputField.id, event)} ></Form.Control>\r\n                //             </Form.Group>\r\n                //         </div>"]},"metadata":{},"sourceType":"module"}